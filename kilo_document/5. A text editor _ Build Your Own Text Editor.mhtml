From: <Saved by Blink>
Snapshot-Content-Location: https://viewsourcecode.org/snaptoken/kilo/05.aTextEditor.html
Subject: 5. A text editor | Build Your Own Text Editor
Date: Tue, 23 Sep 2025 12:37:56 +0100
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO----"


------MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO----
Content-Type: text/html
Content-ID: <frame-52DD9075882A8A50928F6BAC7A5437A4@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://viewsourcecode.org/snaptoken/kilo/05.aTextEditor.html

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0, maximum-scale=3D1.0">
    <title>5. A text editor | Build Your Own Text Editor</title>
    <link href=3D"https://viewsourcecode.org/snaptoken/kilo/style.css" rel=
=3D"stylesheet">
  </head>
  <body data-new-gr-c-s-check-loaded=3D"14.1254.0" data-gr-ext-installed=3D=
"">
    <header class=3D"bar">
      <nav>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/04.aTextViewer=
.html">=E2=86=90 prev</a>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/index.html">co=
ntents</a>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/06.search.html=
">next =E2=86=92</a>
      </nav>
    </header>
    <div id=3D"container">
      <h1 id=3D"a-text-editor">A text editor</h1>
<h2 id=3D"insert-ordinary-characters"><a href=3D"https://viewsourcecode.org=
/snaptoken/kilo/05.aTextEditor.html#insert-ordinary-characters">Insert ordi=
nary characters</a></h2>

<p>Let=E2=80=99s begin by writing a function that inserts a single characte=
r into an
<code>erow</code>, at a given position.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/row-insert-char/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 101</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/row-insert-char">row-insert-char</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line"></div><div cla=
ss=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">editorR=
owCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> <spa=
n class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</span=
> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=3D"p=
">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span><=
/div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt=
">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D"p">(<=
/span><span class=3D"n">erow</span> <span class=3D"o">*</span><span class=
=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">editorAp=
pendRow</span><span class=3D"p">(</span><span class=3D"kt">char</span> <spa=
n class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> =
<span class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D=
"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span=
></div><div class=3D"line"></div><ins class=3D"line"><span class=3D"kt">voi=
d</span> <span class=3D"nf">editorRowInsertChar</span><span class=3D"p">(</=
span><span class=3D"n">erow</span> <span class=3D"o">*</span><span class=3D=
"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int</span> <spa=
n class=3D"n">at</span><span class=3D"p">,</span> <span class=3D"kt">int</s=
pan> <span class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"p"=
>{</span></ins><ins class=3D"line">  <span class=3D"k">if</span> <span clas=
s=3D"p">(</span><span class=3D"n">at</span> <span class=3D"o">&lt;</span> <=
span class=3D"mi">0</span> <span class=3D"o">||</span> <span class=3D"n">at=
</span> <span class=3D"o">&gt;</span> <span class=3D"n">row</span><span cla=
ss=3D"o">-&gt;</span><span class=3D"n">size</span><span class=3D"p">)</span=
> <span class=3D"n">at</span> <span class=3D"o">=3D</span> <span class=3D"n=
">row</span><span class=3D"o">-&gt;</span><span class=3D"n">size</span><spa=
n class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">row</sp=
an><span class=3D"o">-&gt;</span><span class=3D"n">chars</span> <span class=
=3D"o">=3D</span> <span class=3D"n">realloc</span><span class=3D"p">(</span=
><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n=
">chars</span><span class=3D"p">,</span> <span class=3D"n">row</span><span =
class=3D"o">-&gt;</span><span class=3D"n">size</span> <span class=3D"o">+</=
span> <span class=3D"mi">2</span><span class=3D"p">);</span></ins><ins clas=
s=3D"line">  <span class=3D"n">memmove</span><span class=3D"p">(</span><spa=
n class=3D"o">&amp;</span><span class=3D"n">row</span><span class=3D"o">-&g=
t;</span><span class=3D"n">chars</span><span class=3D"p">[</span><span clas=
s=3D"n">at</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><sp=
an class=3D"p">],</span> <span class=3D"o">&amp;</span><span class=3D"n">ro=
w</span><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><span c=
lass=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">],</span> <=
span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">=
size</span> <span class=3D"o">-</span> <span class=3D"n">at</span> <span cl=
ass=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</span></=
ins><ins class=3D"line">  <span class=3D"n">row</span><span class=3D"o">-&g=
t;</span><span class=3D"n">size</span><span class=3D"o">++</span><span clas=
s=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">row</span><sp=
an class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">=
[</span><span class=3D"n">at</span><span class=3D"p">]</span> <span class=
=3D"o">=3D</span> <span class=3D"n">c</span><span class=3D"p">;</span></ins=
><ins class=3D"line">  <span class=3D"n">editorUpdateRow</span><span class=
=3D"p">(</span><span class=3D"n">row</span><span class=3D"p">);</span></ins=
><ins class=3D"line"><span class=3D"p">}</span></ins><div class=3D"line"></=
div><div class=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span>=
</div><div class=3D"line folded"><span class=3D"cm">/*** append buffer ***/=
</span></div><div class=3D"line folded"><span class=3D"cm">/*** output ***/=
</span></div><div class=3D"line folded"><span class=3D"cm">/*** input ***/<=
/span></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/</s=
pan></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>memmove()</code> comes from <code>&lt;string.h&gt;</code>. It is l=
ike <code>memcpy()</code>, but is safe to use
when the source and destination arrays overlap.</p>

<p>First we validate <code>at</code>, which is the index we want to insert =
the character
into. Notice that <code>at</code> is allowed to go one character past the e=
nd of the
string, in which case the character should be inserted at the end of the
string.</p>

<p>Then we allocate one more byte for the <code>chars</code> of the <code>e=
row</code> (we add <code>2</code>
because we also have to make room for the null byte), and use <code>memmove=
()</code> to
make room for the new character. We increment the <code>size</code> of the =
<code>chars</code> array,
and then actually assign the character to its position in the array. Finall=
y,
we call <code>editorUpdateRow()</code> so that the <code>render</code> and =
<code>rsize</code> fields get updated
with the new row content.</p>

<p>Now we=E2=80=99ll create a new section called <code>/*** editor operatio=
ns ***/</code>. This
section will contain functions that we=E2=80=99ll call from <code>editorPro=
cessKeypress()</code>
when we=E2=80=99re mapping keypresses to various text editing operations. W=
e=E2=80=99ll add a
function to this section called <code>editorInsertChar()</code> which will =
take a
character and use <code>editorRowInsertChar()</code> to insert that charact=
er into the
position that the cursor is at.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/editor-insert-char/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 102</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/editor-insert-char">editor-insert-char</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line"></div><div cla=
ss=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">editorR=
owCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> <spa=
n class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</span=
> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=3D"p=
">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span><=
/div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt=
">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D"p">(<=
/span><span class=3D"n">erow</span> <span class=3D"o">*</span><span class=
=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">editorAp=
pendRow</span><span class=3D"p">(</span><span class=3D"kt">char</span> <spa=
n class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> =
<span class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D=
"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span=
></div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"=
kt">void</span> <span class=3D"nf">editorRowInsertChar</span><span class=3D=
"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span c=
lass=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int</spa=
n> <span class=3D"n">at</span><span class=3D"p">,</span> <span class=3D"kt"=
>int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"li=
ne"></div><ins class=3D"line"><span class=3D"cm">/*** editor operations ***=
/</span></ins><ins class=3D"line"></ins><ins class=3D"line"><span class=3D"=
kt">void</span> <span class=3D"nf">editorInsertChar</span><span class=3D"p"=
>(</span><span class=3D"kt">int</span> <span class=3D"n">c</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">  <spa=
n class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=
=3D=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span cla=
ss=3D"n">numrows</span><span class=3D"p">)</span> <span class=3D"p">{</span=
></ins><ins class=3D"line">    <span class=3D"n">editorAppendRow</span><spa=
n class=3D"p">(</span><span class=3D"s">""</span><span class=3D"p">,</span>=
 <span class=3D"mi">0</span><span class=3D"p">);</span></ins><ins class=3D"=
line">  <span class=3D"p">}</span></ins><ins class=3D"line">  <span class=
=3D"n">editorRowInsertChar</span><span class=3D"p">(</span><span class=3D"o=
">&amp;</span><span class=3D"n">E</span><span class=3D"p">.</span><span cla=
ss=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"p">],</span=
> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">c</span><span class=3D"p=
">);</span></ins><ins class=3D"line">  <span class=3D"n">E</span><span clas=
s=3D"p">.</span><span class=3D"n">cx</span><span class=3D"o">++</span><span=
 class=3D"p">;</span></ins><ins class=3D"line"><span class=3D"p">}</span></=
ins><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm"=
>/*** file i/o ***/</span></div><div class=3D"line folded"><span class=3D"c=
m">/*** append buffer ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>If <code>E.cy =3D=3D E.numrows</code>, then the cursor is on the tilde l=
ine after the end of
the file, so we need to append a new row to the file before inserting a
character there. After inserting a character, we move the cursor forward so
that the next character the user inserts will go after the character just
inserted.</p>

<p>Notice that <code>editorInsertChar()</code> doesn=E2=80=99t have to worr=
y about the details of
modifying an <code>erow</code>, and <code>editorRowInsertChar()</code> does=
n=E2=80=99t have to worry about
where the cursor is. That is the difference between functions in the
<code>/*** editor operations ***/</code> section and functions in the
<code>/*** row operations ***/</code> section.</p>

<p>Let=E2=80=99s call <code>editorInsertChar()</code> in the <code>default:=
</code> case of the <code>switch</code>
statement in <code>editorProcessKeypress()</code>. This will allow any keyp=
ress that isn=E2=80=99t
mapped to another editor function to be inserted directly into the text bei=
ng
edited.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/key-insert-char/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 103</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/key-insert-char">key-insert-char</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** editor operations ***/</span></div><div class=3D"li=
ne folded"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"=
line folded"><span class=3D"cm">/*** append buffer ***/</span></div><div cl=
ass=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><div cl=
ass=3D"line"><span class=3D"cm">/*** input ***/</span></div><div class=3D"l=
ine"></div><div class=3D"line folded"><span class=3D"kt">void</span> <span =
class=3D"nf">editorMoveCursor</span><span class=3D"p">(</span><span class=
=3D"kt">int</span> <span class=3D"n">key</span><span class=3D"p">)</span> <=
span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div cl=
ass=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span=
 class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</span> <span=
 class=3D"p">{</span></div><div class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">c</span> <span class=3D"o">=3D</span> <span class=3D"=
n">editorReadKey</span><span class=3D"p">();</span></div><div class=3D"line=
"></div><div class=3D"line">  <span class=3D"k">switch</span> <span class=
=3D"p">(</span><span class=3D"n">c</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case</sp=
an> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=
=3D"sc">'q'</span><span class=3D"p">):</span></div><div class=3D"line">    =
  <span class=3D"n">write</span><span class=3D"p">(</span><span class=3D"n"=
>STDOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s">"</span><=
span class=3D"se">\x1b</span><span class=3D"s">[2J"</span><span class=3D"p"=
>,</span> <span class=3D"mi">4</span><span class=3D"p">);</span></div><div =
class=3D"line">      <span class=3D"n">write</span><span class=3D"p">(</spa=
n><span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span cl=
ass=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[H"</span=
><span class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);=
</span></div><div class=3D"line">      <span class=3D"n">exit</span><span c=
lass=3D"p">(</span><span class=3D"mi">0</span><span class=3D"p">);</span></=
div><div class=3D"line">      <span class=3D"k">break</span><span class=3D"=
p">;</span></div><div class=3D"line"></div><div class=3D"line">    <span cl=
ass=3D"k">case</span> <span class=3D"n">HOME_KEY</span><span class=3D"p">:<=
/span></div><div class=3D"line">      <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line"=
>      <span class=3D"k">break</span><span class=3D"p">;</span></div><div c=
lass=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span> <=
span class=3D"n">END_KEY</span><span class=3D"p">:</span></div><div class=
=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</span><span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> =
<span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">numrows</span><span class=3D"p">)</span></div><div=
 class=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">row</span><span class=
=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">cy</span><span class=3D"p">].</span><span class=3D"n">size</span>=
<span class=3D"p">;</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line"></div><div=
 class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">PAGE_UP=
</span><span class=3D"p">:</span></div><div class=3D"line">    <span class=
=3D"k">case</span> <span class=3D"n">PAGE_DOWN</span><span class=3D"p">:</s=
pan></div><div class=3D"line">      <span class=3D"p">{</span></div><div cl=
ass=3D"line">        <span class=3D"k">if</span> <span class=3D"p">(</span>=
<span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n=
">PAGE_UP</span><span class=3D"p">)</span> <span class=3D"p">{</span></div>=
<div class=3D"line">          <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span><sp=
an class=3D"p">;</span></div><div class=3D"line">        <span class=3D"p">=
}</span> <span class=3D"k">else</span> <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span=
> <span class=3D"n">PAGE_DOWN</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></div><div class=3D"line">          <span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">rowoff</span> <span class=3D"o">+</span> <span class=3D"n">E</span><=
span class=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D=
"o">-</span> <span class=3D"mi">1</span><span class=3D"p">;</span></div><di=
v class=3D"line">          <span class=3D"k">if</span> <span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>cy</span> <span class=3D"o">&gt;</span> <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span=
> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">;</span></=
div><div class=3D"line">        <span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line">        <span class=3D"kt">int</span> <=
span class=3D"n">times</span> <span class=3D"o">=3D</span> <span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span><spa=
n class=3D"p">;</span></div><div class=3D"line">        <span class=3D"k">w=
hile</span> <span class=3D"p">(</span><span class=3D"n">times</span><span c=
lass=3D"o">--</span><span class=3D"p">)</span></div><div class=3D"line">   =
       <span class=3D"n">editorMoveCursor</span><span class=3D"p">(</span><=
span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n"=
>PAGE_UP</span> <span class=3D"o">?</span> <span class=3D"n">ARROW_UP</span=
> <span class=3D"o">:</span> <span class=3D"n">ARROW_DOWN</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span><=
/div><div class=3D"line">      <span class=3D"k">break</span><span class=3D=
"p">;</span></div><div class=3D"line"></div><div class=3D"line">    <span c=
lass=3D"k">case</span> <span class=3D"n">ARROW_UP</span><span class=3D"p">:=
</span></div><div class=3D"line">    <span class=3D"k">case</span> <span cl=
ass=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div><div class=3D"li=
ne">    <span class=3D"k">case</span> <span class=3D"n">ARROW_LEFT</span><s=
pan class=3D"p">:</span></div><div class=3D"line">    <span class=3D"k">cas=
e</span> <span class=3D"n">ARROW_RIGHT</span><span class=3D"p">:</span></di=
v><div class=3D"line">      <span class=3D"n">editorMoveCursor</span><span =
class=3D"p">(</span><span class=3D"n">c</span><span class=3D"p">);</span></=
div><div class=3D"line">      <span class=3D"k">break</span><span class=3D"=
p">;</span></div><div class=3D"line"></div><ins class=3D"line">    <span cl=
ass=3D"nl">default:</span></ins><ins class=3D"line">      <span class=3D"n"=
>editorInsertChar</span><span class=3D"p">(</span><span class=3D"n">c</span=
><span class=3D"p">);</span></ins><ins class=3D"line">      <span class=3D"=
k">break</span><span class=3D"p">;</span></ins><div class=3D"line">  <span =
class=3D"p">}</span></div><div class=3D"line"><span class=3D"p">}</span></d=
iv><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">=
/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We=E2=80=99ve now officially upgraded our text viewer to a text editor.<=
/p>
<h2 id=3D"prevent-inserting-special-characters"><a href=3D"https://viewsour=
cecode.org/snaptoken/kilo/05.aTextEditor.html#prevent-inserting-special-cha=
racters">Prevent inserting special characters</a></h2>

<p>Currently, if you press keys like <kbd>Backspace</kbd> or <kbd>Enter</kb=
d>,
those characters will be inserted directly into the text, which we certainl=
y
don=E2=80=99t want. Let=E2=80=99s handle a bunch of these special keys in
<code>editorProcessKeypress()</code>, so that they don=E2=80=99t fall throu=
gh to the <code>default</code>
case of calling <code>editorInsertChar()</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/block-special-chars/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 104</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/block-special-chars">block-special-chars</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line"><span class=3D"c=
m">/*** defines ***/</span></div><div class=3D"line"></div><div class=3D"li=
ne"><span class=3D"cp">#define KILO_VERSION "0.0.1"</span></div><div class=
=3D"line"><span class=3D"cp">#define KILO_TAB_STOP 8</span></div><div class=
=3D"line"></div><div class=3D"line"><span class=3D"cp">#define CTRL_KEY(k) =
((k) &amp; 0x1f)</span></div><div class=3D"line"></div><div class=3D"line">=
<span class=3D"k">enum</span> <span class=3D"n">editorKey</span> <span clas=
s=3D"p">{</span></div><ins class=3D"line">  <span class=3D"n">BACKSPACE</sp=
an> <span class=3D"o">=3D</span> <span class=3D"mi">127</span><span class=
=3D"p">,</span></ins><div class=3D"line">  <span class=3D"n">ARROW_LEFT</sp=
an> <span class=3D"o">=3D</span> <span class=3D"mi">1000</span><span class=
=3D"p">,</span></div><div class=3D"line">  <span class=3D"n">ARROW_RIGHT</s=
pan><span class=3D"p">,</span></div><div class=3D"line">  <span class=3D"n"=
>ARROW_UP</span><span class=3D"p">,</span></div><div class=3D"line">  <span=
 class=3D"n">ARROW_DOWN</span><span class=3D"p">,</span></div><div class=3D=
"line">  <span class=3D"n">DEL_KEY</span><span class=3D"p">,</span></div><d=
iv class=3D"line">  <span class=3D"n">HOME_KEY</span><span class=3D"p">,</s=
pan></div><div class=3D"line">  <span class=3D"n">END_KEY</span><span class=
=3D"p">,</span></div><div class=3D"line">  <span class=3D"n">PAGE_UP</span>=
<span class=3D"p">,</span></div><div class=3D"line">  <span class=3D"n">PAG=
E_DOWN</span></div><div class=3D"line"><span class=3D"p">};</span></div><di=
v class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** d=
ata ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** ter=
minal ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** r=
ow operations ***/</span></div><div class=3D"line folded"><span class=3D"cm=
">/*** editor operations ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folde=
d"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"><spa=
n class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div><div c=
lass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> =
<span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{<=
/span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rProcessKeypress</span><span class=3D"p">()</span> <span class=3D"p">{</spa=
n></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"=
n">c</span> <span class=3D"o">=3D</span> <span class=3D"n">editorReadKey</s=
pan><span class=3D"p">();</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"k">switch</span> <span class=3D"p">(</span><span=
 class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/div><ins class=3D"line">    <span class=3D"k">case</span> <span class=3D"s=
c">'\r'</span><span class=3D"p">:</span></ins><ins class=3D"line">      <sp=
an class=3D"cm">/* TODO */</span></ins><ins class=3D"line">      <span clas=
s=3D"k">break</span><span class=3D"p">;</span></ins><div class=3D"line"></d=
iv><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">=
CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'q'</span><span=
 class=3D"p">):</span></div><div class=3D"line">      <span class=3D"n">wri=
te</span><span class=3D"p">(</span><span class=3D"n">STDOUT_FILENO</span><s=
pan class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b<=
/span><span class=3D"s">[2J"</span><span class=3D"p">,</span> <span class=
=3D"mi">4</span><span class=3D"p">);</span></div><div class=3D"line">      =
<span class=3D"n">write</span><span class=3D"p">(</span><span class=3D"n">S=
TDOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s">"</span><sp=
an class=3D"se">\x1b</span><span class=3D"s">[H"</span><span class=3D"p">,<=
/span> <span class=3D"mi">3</span><span class=3D"p">);</span></div><div cla=
ss=3D"line">      <span class=3D"n">exit</span><span class=3D"p">(</span><s=
pan class=3D"mi">0</span><span class=3D"p">);</span></div><div class=3D"lin=
e">      <span class=3D"k">break</span><span class=3D"p">;</span></div><div=
 class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span>=
 <span class=3D"n">HOME_KEY</span><span class=3D"p">:</span></div><div clas=
s=3D"line">      <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</sp=
an><span class=3D"p">;</span></div><div class=3D"line">      <span class=3D=
"k">break</span><span class=3D"p">;</span></div><div class=3D"line"></div><=
div class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">END_=
KEY</span><span class=3D"p">:</span></div><div class=3D"line">      <span c=
lass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">&lt;<=
/span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">numrows</span><span class=3D"p">)</span></div><div class=3D"line">       =
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</=
span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span=
 class=3D"p">].</span><span class=3D"n">size</span><span class=3D"p">;</spa=
n></div><div class=3D"line">      <span class=3D"k">break</span><span class=
=3D"p">;</span></div><div class=3D"line"></div><ins class=3D"line">    <spa=
n class=3D"k">case</span> <span class=3D"n">BACKSPACE</span><span class=3D"=
p">:</span></ins><ins class=3D"line">    <span class=3D"k">case</span> <spa=
n class=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'=
h'</span><span class=3D"p">):</span></ins><ins class=3D"line">    <span cla=
ss=3D"k">case</span> <span class=3D"n">DEL_KEY</span><span class=3D"p">:</s=
pan></ins><ins class=3D"line">      <span class=3D"cm">/* TODO */</span></i=
ns><ins class=3D"line">      <span class=3D"k">break</span><span class=3D"p=
">;</span></ins><div class=3D"line"></div><div class=3D"line">    <span cla=
ss=3D"k">case</span> <span class=3D"n">PAGE_UP</span><span class=3D"p">:</s=
pan></div><div class=3D"line">    <span class=3D"k">case</span> <span class=
=3D"n">PAGE_DOWN</span><span class=3D"p">:</span></div><div class=3D"line">=
      <span class=3D"p">{</span></div><div class=3D"line">        <span cla=
ss=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">c</span> <sp=
an class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_UP</span><span class=3D=
"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">          =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</s=
pan> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">rowoff</span><span class=3D"p">;</span></div><=
div class=3D"line">        <span class=3D"p">}</span> <span class=3D"k">els=
e</span> <span class=3D"k">if</span> <span class=3D"p">(</span><span class=
=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_DOWN=
</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div clas=
s=3D"line">          <span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">rowoff</span> <span class=
=3D"o">+</span> <span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">screenrows</span> <span class=3D"o">-</span> <span class=3D"mi">=
1</span><span class=3D"p">;</span></div><div class=3D"line">          <span=
 class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">&gt=
;</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D=
"n">numrows</span><span class=3D"p">)</span> <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=3D</sp=
an> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">n=
umrows</span><span class=3D"p">;</span></div><div class=3D"line">        <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
>        <span class=3D"kt">int</span> <span class=3D"n">times</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">screenrows</span><span class=3D"p">;</span></div><div cl=
ass=3D"line">        <span class=3D"k">while</span> <span class=3D"p">(</sp=
an><span class=3D"n">times</span><span class=3D"o">--</span><span class=3D"=
p">)</span></div><div class=3D"line">          <span class=3D"n">editorMove=
Cursor</span><span class=3D"p">(</span><span class=3D"n">c</span> <span cla=
ss=3D"o">=3D=3D</span> <span class=3D"n">PAGE_UP</span> <span class=3D"o">?=
</span> <span class=3D"n">ARROW_UP</span> <span class=3D"o">:</span> <span =
class=3D"n">ARROW_DOWN</span><span class=3D"p">);</span></div><div class=3D=
"line">      <span class=3D"p">}</span></div><div class=3D"line">      <spa=
n class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"lin=
e"></div><div class=3D"line">    <span class=3D"k">case</span> <span class=
=3D"n">ARROW_UP</span><span class=3D"p">:</span></div><div class=3D"line"> =
   <span class=3D"k">case</span> <span class=3D"n">ARROW_DOWN</span><span c=
lass=3D"p">:</span></div><div class=3D"line">    <span class=3D"k">case</sp=
an> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><div=
 class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_R=
IGHT</span><span class=3D"p">:</span></div><div class=3D"line">      <span =
class=3D"n">editorMoveCursor</span><span class=3D"p">(</span><span class=3D=
"n">c</span><span class=3D"p">);</span></div><div class=3D"line">      <spa=
n class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"lin=
e"></div><ins class=3D"line">    <span class=3D"k">case</span> <span class=
=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'l'</spa=
n><span class=3D"p">):</span></ins><ins class=3D"line">    <span class=3D"k=
">case</span> <span class=3D"sc">'\x1b'</span><span class=3D"p">:</span></i=
ns><ins class=3D"line">      <span class=3D"k">break</span><span class=3D"p=
">;</span></ins><div class=3D"line"></div><div class=3D"line">    <span cla=
ss=3D"nl">default:</span></div><div class=3D"line">      <span class=3D"n">=
editorInsertChar</span><span class=3D"p">(</span><span class=3D"n">c</span>=
<span class=3D"p">);</span></div><div class=3D"line">      <span class=3D"k=
">break</span><span class=3D"p">;</span></div><div class=3D"line">  <span c=
lass=3D"p">}</span></div><div class=3D"line"><span class=3D"p">}</span></di=
v><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/=
*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p><kbd>Backspace</kbd> doesn=E2=80=99t have a human-readable backslash-esc=
ape
representation in C (like <code>\n</code>, <code>\r</code>, and so on), so =
we make it part of the
<code>editorKey</code> enum and assign it its ASCII value of <code>127</cod=
e>.</p>

<p>In <code>editorProcessKeypress()</code>, the first new key we add to the=
 <code>switch</code>
statement is <code>'\r'</code>, which is the <kbd>Enter</kbd> key. For now =
we want to
ignore it, but obviously we=E2=80=99ll be making it do something later, so =
we mark it
with a <code>TODO</code> comment.</p>

<p>We handle <kbd>Backspace</kbd> and <kbd>Delete</kbd> in a similar way, m=
arking
them with a <code>TODO</code>. We also handle the <kbd>Ctrl-H</kbd> key com=
bination, which
sends the control code <code>8</code>, which is originally what the <kbd>Ba=
ckspace</kbd>
character would send back in the day. If you look at the
<a href=3D"http://www.asciitable.com/">ASCII table</a>, you=E2=80=99ll see =
that ASCII code <code>8</code> is
named <code>BS</code> for =E2=80=9Cbackspace=E2=80=9D, and ASCII code <code=
>127</code> is named <code>DEL</code> for =E2=80=9Cdelete=E2=80=9D.
But for whatever reason, in modern computers the <kbd>Backspace</kbd> key i=
s
mapped to <code>127</code> and the <kbd>Delete</kbd> key is mapped to the e=
scape sequence
<code>&lt;esc&gt;[3~</code>, as we saw at the end of
<a href=3D"https://viewsourcecode.org/snaptoken/kilo/03.rawInputAndOutput.h=
tml#the-delete-key">chapter 3</a>.</p>

<p>Lastly, we handle <kbd>Ctrl-L</kbd> and <kbd>Escape</kbd> by not doing a=
nything
when those keys are pressed. <kbd>Ctrl-L</kbd> is traditionally used to ref=
resh
the screen in terminal programs. In our text editor, the screen refreshes a=
fter
<em>any</em> keypress, so we don=E2=80=99t have to do anything else to impl=
ement that feature.
We ignore the <kbd>Escape</kbd> key because there are many key escape seque=
nces
that we aren=E2=80=99t handling (such as the <kbd>F1</kbd>=E2=80=93<kbd>F12=
</kbd> keys),
and the way we wrote <code>editorReadKey()</code>, pressing those keys will=
 be equivalent
to pressing the <kbd>Escape</kbd> key. We don=E2=80=99t want the user to un=
wittingly
insert the escape character <code>27</code> into their text, so we ignore t=
hose
keypresses.</p>
<h2 id=3D"save-to-disk"><a href=3D"https://viewsourcecode.org/snaptoken/kil=
o/05.aTextEditor.html#save-to-disk">Save to disk</a></h2>

<p>Now that we=E2=80=99ve finally made text editable, let=E2=80=99s impleme=
nt saving to disk.
First we=E2=80=99ll write a function that converts our array of <code>erow<=
/code> structs into a
single string that is ready to be written out to a file.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/rows-to-string/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 105</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/rows-to-string">rows-to-string</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** editor operations ***/</span></div><div class=3D"li=
ne"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line"><=
/div><ins class=3D"line"><span class=3D"kt">char</span> <span class=3D"o">*=
</span><span class=3D"nf">editorRowsToString</span><span class=3D"p">(</spa=
n><span class=3D"kt">int</span> <span class=3D"o">*</span><span class=3D"n"=
>buflen</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><i=
ns class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">totlen<=
/span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"kt">int</span> <s=
pan class=3D"n">j</span><span class=3D"p">;</span></ins><ins class=3D"line"=
>  <span class=3D"k">for</span> <span class=3D"p">(</span><span class=3D"n"=
>j</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span cla=
ss=3D"p">;</span> <span class=3D"n">j</span> <span class=3D"o">&lt;</span> =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numro=
ws</span><span class=3D"p">;</span> <span class=3D"n">j</span><span class=
=3D"o">++</span><span class=3D"p">)</span></ins><ins class=3D"line">    <sp=
an class=3D"n">totlen</span> <span class=3D"o">+=3D</span> <span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span class=
=3D"p">[</span><span class=3D"n">j</span><span class=3D"p">].</span><span c=
lass=3D"n">size</span> <span class=3D"o">+</span> <span class=3D"mi">1</spa=
n><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"o">*=
</span><span class=3D"n">buflen</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">totlen</span><span class=3D"p">;</span></ins><ins class=3D"line"=
></ins><ins class=3D"line">  <span class=3D"kt">char</span> <span class=3D"=
o">*</span><span class=3D"n">buf</span> <span class=3D"o">=3D</span> <span =
class=3D"n">malloc</span><span class=3D"p">(</span><span class=3D"n">totlen=
</span><span class=3D"p">);</span></ins><ins class=3D"line">  <span class=
=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">p</span> <s=
pan class=3D"o">=3D</span> <span class=3D"n">buf</span><span class=3D"p">;<=
/span></ins><ins class=3D"line">  <span class=3D"k">for</span> <span class=
=3D"p">(</span><span class=3D"n">j</span> <span class=3D"o">=3D</span> <spa=
n class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n">j</span=
> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p"=
>.</span><span class=3D"n">numrows</span><span class=3D"p">;</span> <span c=
lass=3D"n">j</span><span class=3D"o">++</span><span class=3D"p">)</span> <s=
pan class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D"n">mem=
cpy</span><span class=3D"p">(</span><span class=3D"n">p</span><span class=
=3D"p">,</span> <span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">j</span><s=
pan class=3D"p">].</span><span class=3D"n">chars</span><span class=3D"p">,<=
/span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">row</span><span class=3D"p">[</span><span class=3D"n">j</span><span class=
=3D"p">].</span><span class=3D"n">size</span><span class=3D"p">);</span></i=
ns><ins class=3D"line">    <span class=3D"n">p</span> <span class=3D"o">+=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">j</span><span =
class=3D"p">].</span><span class=3D"n">size</span><span class=3D"p">;</span=
></ins><ins class=3D"line">    <span class=3D"o">*</span><span class=3D"n">=
p</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\n'</span><span c=
lass=3D"p">;</span></ins><ins class=3D"line">    <span class=3D"n">p</span>=
<span class=3D"o">++</span><span class=3D"p">;</span></ins><ins class=3D"li=
ne">  <span class=3D"p">}</span></ins><ins class=3D"line"></ins><ins class=
=3D"line">  <span class=3D"k">return</span> <span class=3D"n">buf</span><sp=
an class=3D"p">;</span></ins><ins class=3D"line"><span class=3D"p">}</span>=
</ins><div class=3D"line"></div><div class=3D"line folded"><span class=3D"k=
t">void</span> <span class=3D"nf">editorOpen</span><span class=3D"p">(</spa=
n><span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n=
">filename</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><di=
v class=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><di=
v class=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><div=
 class=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code=
></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>First we add up the lengths of each row of text, adding <code>1</code> t=
o each one for the
newline character we=E2=80=99ll add to the end of each line. We save the to=
tal length
into <code>buflen</code>, to tell the caller how long the string is.</p>

<p>Then, after allocating the required memory, we loop through the rows, an=
d
<code>memcpy()</code> the contents of each row to the end of the buffer, ap=
pending a
newline character after each row.</p>

<p>We return <code>buf</code>, expecting the caller to <code>free()</code> =
the memory.</p>

<p>Now we=E2=80=99ll implement the <code>editorSave()</code> function, whic=
h will actually write the
string returned by <code>editorRowsToString()</code> to disk.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/save/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 106</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/save">save</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line"><span class=3D"cm"=
>/*** includes ***/</span></div><div class=3D"line"></div><div class=3D"lin=
e"><span class=3D"cp">#define _DEFAULT_SOURCE</span></div><div class=3D"lin=
e"><span class=3D"cp">#define _BSD_SOURCE</span></div><div class=3D"line"><=
span class=3D"cp">#define _GNU_SOURCE</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"cp">#include &lt;ctype.h&gt;</span></di=
v><div class=3D"line"><span class=3D"cp">#include &lt;errno.h&gt;</span></d=
iv><ins class=3D"line"><span class=3D"cp">#include &lt;fcntl.h&gt;</span></=
ins><div class=3D"line"><span class=3D"cp">#include &lt;stdio.h&gt;</span><=
/div><div class=3D"line"><span class=3D"cp">#include &lt;stdarg.h&gt;</span=
></div><div class=3D"line"><span class=3D"cp">#include &lt;stdlib.h&gt;</sp=
an></div><div class=3D"line"><span class=3D"cp">#include &lt;string.h&gt;</=
span></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/ioctl.h&=
gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/typ=
es.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;te=
rmios.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt=
;time.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt=
;unistd.h&gt;</span></div><div class=3D"line"></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** defines ***/</span></div><div class=3D"line fol=
ded"><span class=3D"cm">/*** data ***/</span></div><div class=3D"line folde=
d"><span class=3D"cm">/*** terminal ***/</span></div><div class=3D"line fol=
ded"><span class=3D"cm">/*** row operations ***/</span></div><div class=3D"=
line folded"><span class=3D"cm">/*** editor operations ***/</span></div><di=
v class=3D"line"><span class=3D"cm">/*** file i/o ***/</span></div><div cla=
ss=3D"line"></div><div class=3D"line folded"><span class=3D"kt">char</span>=
 <span class=3D"o">*</span><span class=3D"nf">editorRowsToString</span><spa=
n class=3D"p">(</span><span class=3D"kt">int</span> <span class=3D"o">*</sp=
an><span class=3D"n">buflen</span><span class=3D"p">)</span> <span class=3D=
"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line folded"><span class=3D"kt">void</span> <span class=
=3D"nf">editorOpen</span><span class=3D"p">(</span><span class=3D"kt">char<=
/span> <span class=3D"o">*</span><span class=3D"n">filename</span><span cla=
ss=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}<=
/span></div><div class=3D"line"></div><ins class=3D"line"><span class=3D"kt=
">void</span> <span class=3D"nf">editorSave</span><span class=3D"p">()</spa=
n> <span class=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">=3D=3D</=
span> <span class=3D"nb">NULL</span><span class=3D"p">)</span> <span class=
=3D"k">return</span><span class=3D"p">;</span></ins><ins class=3D"line"></i=
ns><ins class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">le=
n</span><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=
=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">buf</span> =
<span class=3D"o">=3D</span> <span class=3D"n">editorRowsToString</span><sp=
an class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">len<=
/span><span class=3D"p">);</span></ins><ins class=3D"line"></ins><ins class=
=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">fd</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">open</span><span class=3D"p">(</s=
pan><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">f=
ilename</span><span class=3D"p">,</span> <span class=3D"n">O_RDWR</span> <s=
pan class=3D"o">|</span> <span class=3D"n">O_CREAT</span><span class=3D"p">=
,</span> <span class=3D"mo">0644</span><span class=3D"p">);</span></ins><in=
s class=3D"line">  <span class=3D"n">ftruncate</span><span class=3D"p">(</s=
pan><span class=3D"n">fd</span><span class=3D"p">,</span> <span class=3D"n"=
>len</span><span class=3D"p">);</span></ins><ins class=3D"line">  <span cla=
ss=3D"n">write</span><span class=3D"p">(</span><span class=3D"n">fd</span><=
span class=3D"p">,</span> <span class=3D"n">buf</span><span class=3D"p">,</=
span> <span class=3D"n">len</span><span class=3D"p">);</span></ins><ins cla=
ss=3D"line">  <span class=3D"n">close</span><span class=3D"p">(</span><span=
 class=3D"n">fd</span><span class=3D"p">);</span></ins><ins class=3D"line">=
  <span class=3D"n">free</span><span class=3D"p">(</span><span class=3D"n">=
buf</span><span class=3D"p">);</span></ins><ins class=3D"line"><span class=
=3D"p">}</span></ins><div class=3D"line"></div><div class=3D"line folded"><=
span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line fo=
lded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line fo=
lded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line fol=
ded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>open()</code>, <code>O_RDWR</code>, and <code>O_CREAT</code> come =
from <code>&lt;fcntl.h&gt;</code>. <code>ftruncate()</code> and
<code>close()</code> come from <code>&lt;unistd.h&gt;</code>.</p>

<p>If it=E2=80=99s a new file, then <code>E.filename</code> will be <code>N=
ULL</code>, and we won=E2=80=99t know where
to save the file, so we just <code>return</code> without doing anything for=
 now. Later,
we=E2=80=99ll figure out how to prompt the user for a filename.</p>

<p>Otherwise, we call <code>editorRowsToString()</code>, and <code>write()<=
/code> the string to the path
in <code>E.filename</code>. We tell <code>open()</code> we want to create a=
 new file if it
doesn=E2=80=99t already exist (<code>O_CREAT</code>), and we want to open i=
t for reading and
writing (<code>O_RDWR</code>). Because we used the <code>O_CREAT</code> fla=
g, we have to pass an
extra argument containing the mode (the permissions) the new file should ha=
ve.
<code>0644</code> is the standard permissions you usually want for text fil=
es. It gives
the owner of the file permission to read and write the file, and everyone e=
lse
only gets permission to read the file.</p>

<p><code>ftruncate()</code> sets the file=E2=80=99s size to the specified l=
ength. If the file is
larger than that, it will cut off any data at the end of the file to make i=
t
that length. If the file is shorter, it will add <code>0</code> bytes at th=
e end to make
it that length.</p>

<p>The normal way to overwrite a file is to pass the <code>O_TRUNC</code> f=
lag to <code>open()</code>,
which truncates the file completely, making it an empty file, before writin=
g
the new data into it. By truncating the file ourselves to the same length a=
s
the data we are planning to write into it, we are making the whole overwrit=
ing
operation a little bit safer in case the <code>ftruncate()</code> call succ=
eeds but the
<code>write()</code> call fails. In that case, the file would still contain=
 most of the
data it had before. But if the file was truncated completely by the <code>o=
pen()</code>
call and then the <code>write()</code> failed, you=E2=80=99d end up with al=
l of your data lost.</p>

<p>More advanced editors will write to a new, temporary file, and then rena=
me that
file to the actual file the user wants to overwrite, and they=E2=80=99ll ca=
refully
check for errors through the whole process.</p>

<p>Anyways, all we have to do now is map a key to <code>editorSave()</code>=
, so let=E2=80=99s do it!
We=E2=80=99ll use <kbd>Ctrl-S</kbd>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/ctrl-s/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 107</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/ctrl-s">ctrl-s</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** editor operations ***/</span></div><div class=3D"li=
ne folded"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"=
line folded"><span class=3D"cm">/*** append buffer ***/</span></div><div cl=
ass=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><div cl=
ass=3D"line"><span class=3D"cm">/*** input ***/</span></div><div class=3D"l=
ine"></div><div class=3D"line folded"><span class=3D"kt">void</span> <span =
class=3D"nf">editorMoveCursor</span><span class=3D"p">(</span><span class=
=3D"kt">int</span> <span class=3D"n">key</span><span class=3D"p">)</span> <=
span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div cl=
ass=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span=
 class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</span> <span=
 class=3D"p">{</span></div><div class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">c</span> <span class=3D"o">=3D</span> <span class=3D"=
n">editorReadKey</span><span class=3D"p">();</span></div><div class=3D"line=
"></div><div class=3D"line">  <span class=3D"k">switch</span> <span class=
=3D"p">(</span><span class=3D"n">c</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case</sp=
an> <span class=3D"sc">'\r'</span><span class=3D"p">:</span></div><div clas=
s=3D"line">      <span class=3D"cm">/* TODO */</span></div><div class=3D"li=
ne">      <span class=3D"k">break</span><span class=3D"p">;</span></div><di=
v class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span=
> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=3D=
"sc">'q'</span><span class=3D"p">):</span></div><div class=3D"line">      <=
span class=3D"n">write</span><span class=3D"p">(</span><span class=3D"n">ST=
DOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s">"</span><spa=
n class=3D"se">\x1b</span><span class=3D"s">[2J"</span><span class=3D"p">,<=
/span> <span class=3D"mi">4</span><span class=3D"p">);</span></div><div cla=
ss=3D"line">      <span class=3D"n">write</span><span class=3D"p">(</span><=
span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span class=
=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[H"</span><s=
pan class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</s=
pan></div><div class=3D"line">      <span class=3D"n">exit</span><span clas=
s=3D"p">(</span><span class=3D"mi">0</span><span class=3D"p">);</span></div=
><div class=3D"line">      <span class=3D"k">break</span><span class=3D"p">=
;</span></div><div class=3D"line"></div><ins class=3D"line">    <span class=
=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</sp=
an><span class=3D"sc">'s'</span><span class=3D"p">):</span></ins><ins class=
=3D"line">      <span class=3D"n">editorSave</span><span class=3D"p">();</s=
pan></ins><ins class=3D"line">      <span class=3D"k">break</span><span cla=
ss=3D"p">;</span></ins><div class=3D"line"></div><div class=3D"line">    <s=
pan class=3D"k">case</span> <span class=3D"n">HOME_KEY</span><span class=3D=
"p">:</span></div><div class=3D"line">      <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</spa=
n> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D=
"line">      <span class=3D"k">break</span><span class=3D"p">;</span></div>=
<div class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</s=
pan> <span class=3D"n">END_KEY</span><span class=3D"p">:</span></div><div c=
lass=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</span><=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</sp=
an> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span></div>=
<div class=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span =
class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">cy</span><span class=3D"p">].</span><span class=3D"n">size</=
span><span class=3D"p">;</span></div><div class=3D"line">      <span class=
=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line"></di=
v><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">B=
ACKSPACE</span><span class=3D"p">:</span></div><div class=3D"line">    <spa=
n class=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p=
">(</span><span class=3D"sc">'h'</span><span class=3D"p">):</span></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">DEL_KE=
Y</span><span class=3D"p">:</span></div><div class=3D"line">      <span cla=
ss=3D"cm">/* TODO */</span></div><div class=3D"line">      <span class=3D"k=
">break</span><span class=3D"p">;</span></div><div class=3D"line"></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">PAGE_U=
P</span><span class=3D"p">:</span></div><div class=3D"line">    <span class=
=3D"k">case</span> <span class=3D"n">PAGE_DOWN</span><span class=3D"p">:</s=
pan></div><div class=3D"line">      <span class=3D"p">{</span></div><div cl=
ass=3D"line">        <span class=3D"k">if</span> <span class=3D"p">(</span>=
<span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n=
">PAGE_UP</span><span class=3D"p">)</span> <span class=3D"p">{</span></div>=
<div class=3D"line">          <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span><sp=
an class=3D"p">;</span></div><div class=3D"line">        <span class=3D"p">=
}</span> <span class=3D"k">else</span> <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span=
> <span class=3D"n">PAGE_DOWN</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></div><div class=3D"line">          <span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">rowoff</span> <span class=3D"o">+</span> <span class=3D"n">E</span><=
span class=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D=
"o">-</span> <span class=3D"mi">1</span><span class=3D"p">;</span></div><di=
v class=3D"line">          <span class=3D"k">if</span> <span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>cy</span> <span class=3D"o">&gt;</span> <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span=
> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">;</span></=
div><div class=3D"line">        <span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line">        <span class=3D"kt">int</span> <=
span class=3D"n">times</span> <span class=3D"o">=3D</span> <span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span><spa=
n class=3D"p">;</span></div><div class=3D"line">        <span class=3D"k">w=
hile</span> <span class=3D"p">(</span><span class=3D"n">times</span><span c=
lass=3D"o">--</span><span class=3D"p">)</span></div><div class=3D"line">   =
       <span class=3D"n">editorMoveCursor</span><span class=3D"p">(</span><=
span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n"=
>PAGE_UP</span> <span class=3D"o">?</span> <span class=3D"n">ARROW_UP</span=
> <span class=3D"o">:</span> <span class=3D"n">ARROW_DOWN</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span><=
/div><div class=3D"line">      <span class=3D"k">break</span><span class=3D=
"p">;</span></div><div class=3D"line"></div><div class=3D"line">    <span c=
lass=3D"k">case</span> <span class=3D"n">ARROW_UP</span><span class=3D"p">:=
</span></div><div class=3D"line">    <span class=3D"k">case</span> <span cl=
ass=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div><div class=3D"li=
ne">    <span class=3D"k">case</span> <span class=3D"n">ARROW_LEFT</span><s=
pan class=3D"p">:</span></div><div class=3D"line">    <span class=3D"k">cas=
e</span> <span class=3D"n">ARROW_RIGHT</span><span class=3D"p">:</span></di=
v><div class=3D"line">      <span class=3D"n">editorMoveCursor</span><span =
class=3D"p">(</span><span class=3D"n">c</span><span class=3D"p">);</span></=
div><div class=3D"line">      <span class=3D"k">break</span><span class=3D"=
p">;</span></div><div class=3D"line"></div><div class=3D"line">    <span cl=
ass=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(<=
/span><span class=3D"sc">'l'</span><span class=3D"p">):</span></div><div cl=
ass=3D"line">    <span class=3D"k">case</span> <span class=3D"sc">'\x1b'</s=
pan><span class=3D"p">:</span></div><div class=3D"line">      <span class=
=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line"></di=
v><div class=3D"line">    <span class=3D"nl">default:</span></div><div clas=
s=3D"line">      <span class=3D"n">editorInsertChar</span><span class=3D"p"=
>(</span><span class=3D"n">c</span><span class=3D"p">);</span></div><div cl=
ass=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span>=
</div><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"l=
ine"><span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code></pre=
>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>You should be able to open a file in the editor, insert some characters,=
 press
<kbd>Ctrl-S</kbd>, and reopen the file to confirm that the changes you made
were saved.</p>

<p>Let=E2=80=99s add error handling to <code>editorSave()</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/save-errors/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 108</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/save-errors">save-errors</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** editor operations ***/</span></div><div class=3D"li=
ne"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line"><=
/div><div class=3D"line folded"><span class=3D"kt">char</span> <span class=
=3D"o">*</span><span class=3D"nf">editorRowsToString</span><span class=3D"p=
">(</span><span class=3D"kt">int</span> <span class=3D"o">*</span><span cla=
ss=3D"n">buflen</span><span class=3D"p">)</span> <span class=3D"p">{</span>=
 =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div c=
lass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orOpen</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span=
 class=3D"o">*</span><span class=3D"n">filename</span><span class=3D"p">)</=
span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div>=
<div class=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span=
> <span class=3D"nf">editorSave</span><span class=3D"p">()</span> <span cla=
ss=3D"p">{</span></div><div class=3D"line">  <span class=3D"k">if</span> <s=
pan class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">filename</span> <span class=3D"o">=3D=3D</span> <span cl=
ass=3D"nb">NULL</span><span class=3D"p">)</span> <span class=3D"k">return</=
span><span class=3D"p">;</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">len</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">char</s=
pan> <span class=3D"o">*</span><span class=3D"n">buf</span> <span class=3D"=
o">=3D</span> <span class=3D"n">editorRowsToString</span><span class=3D"p">=
(</span><span class=3D"o">&amp;</span><span class=3D"n">len</span><span cla=
ss=3D"p">);</span></div><div class=3D"line"></div><div class=3D"line">  <sp=
an class=3D"kt">int</span> <span class=3D"n">fd</span> <span class=3D"o">=
=3D</span> <span class=3D"n">open</span><span class=3D"p">(</span><span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">filename</span=
><span class=3D"p">,</span> <span class=3D"n">O_RDWR</span> <span class=3D"=
o">|</span> <span class=3D"n">O_CREAT</span><span class=3D"p">,</span> <spa=
n class=3D"mo">0644</span><span class=3D"p">);</span></div><ins class=3D"li=
ne">  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"=
n">fd</span> <span class=3D"o">!=3D</span> <span class=3D"o">-</span><span =
class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/ins><ins class=3D"line">    <span class=3D"k">if</span> <span class=3D"p">=
(</span><span class=3D"n">ftruncate</span><span class=3D"p">(</span><span c=
lass=3D"n">fd</span><span class=3D"p">,</span> <span class=3D"n">len</span>=
<span class=3D"p">)</span> <span class=3D"o">!=3D</span> <span class=3D"o">=
-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></ins><ins class=3D"line">      <span class=3D"k">if</span> =
<span class=3D"p">(</span><span class=3D"n">write</span><span class=3D"p">(=
</span><span class=3D"n">fd</span><span class=3D"p">,</span> <span class=3D=
"n">buf</span><span class=3D"p">,</span> <span class=3D"n">len</span><span =
class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">len<=
/span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><div class=
=3D"line">        <span class=3D"n">close</span><span class=3D"p">(</span><=
span class=3D"n">fd</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"n">free</span><span class=3D"p">(</span><span cl=
ass=3D"n">buf</span><span class=3D"p">);</span></div><ins class=3D"line">  =
      <span class=3D"k">return</span><span class=3D"p">;</span></ins><ins c=
lass=3D"line">      <span class=3D"p">}</span></ins><ins class=3D"line">   =
 <span class=3D"p">}</span></ins><ins class=3D"line">    <span class=3D"n">=
close</span><span class=3D"p">(</span><span class=3D"n">fd</span><span clas=
s=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"p">}</span></in=
s><ins class=3D"line"></ins><ins class=3D"line">  <span class=3D"n">free</s=
pan><span class=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p"=
>);</span></ins><div class=3D"line"><span class=3D"p">}</span></div><div cl=
ass=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** appen=
d buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">/**=
* output ***/</span></div><div class=3D"line folded"><span class=3D"cm">/**=
* input ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p><code>open()</code> and <code>ftruncate()</code> both return <code>-1</c=
ode> on error. We expect <code>write()</code> to
return the number of bytes we told it to write. Whether or not an error
occurred, we ensure that the file is closed and the memory that <code>buf</=
code> points to
is freed.</p>

<p>Let=E2=80=99s use <code>editorSetStatusMessage()</code> to notify the us=
er whether the save
succeeded or not. While we=E2=80=99re at it, we=E2=80=99ll add the <kbd>Ctr=
l-S</kbd> key
binding to the help message that=E2=80=99s set in <code>main()</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/save-status-message/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 109</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/save-status-message">save-status-message</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** editor operations ***/</span></div><div class=3D"li=
ne"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line"><=
/div><div class=3D"line folded"><span class=3D"kt">char</span> <span class=
=3D"o">*</span><span class=3D"nf">editorRowsToString</span><span class=3D"p=
">(</span><span class=3D"kt">int</span> <span class=3D"o">*</span><span cla=
ss=3D"n">buflen</span><span class=3D"p">)</span> <span class=3D"p">{</span>=
 =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div c=
lass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orOpen</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span=
 class=3D"o">*</span><span class=3D"n">filename</span><span class=3D"p">)</=
span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div>=
<div class=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span=
> <span class=3D"nf">editorSave</span><span class=3D"p">()</span> <span cla=
ss=3D"p">{</span></div><div class=3D"line">  <span class=3D"k">if</span> <s=
pan class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">filename</span> <span class=3D"o">=3D=3D</span> <span cl=
ass=3D"nb">NULL</span><span class=3D"p">)</span> <span class=3D"k">return</=
span><span class=3D"p">;</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">len</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">char</s=
pan> <span class=3D"o">*</span><span class=3D"n">buf</span> <span class=3D"=
o">=3D</span> <span class=3D"n">editorRowsToString</span><span class=3D"p">=
(</span><span class=3D"o">&amp;</span><span class=3D"n">len</span><span cla=
ss=3D"p">);</span></div><div class=3D"line"></div><div class=3D"line">  <sp=
an class=3D"kt">int</span> <span class=3D"n">fd</span> <span class=3D"o">=
=3D</span> <span class=3D"n">open</span><span class=3D"p">(</span><span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">filename</span=
><span class=3D"p">,</span> <span class=3D"n">O_RDWR</span> <span class=3D"=
o">|</span> <span class=3D"n">O_CREAT</span><span class=3D"p">,</span> <spa=
n class=3D"mo">0644</span><span class=3D"p">);</span></div><div class=3D"li=
ne">  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"=
n">fd</span> <span class=3D"o">!=3D</span> <span class=3D"o">-</span><span =
class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/div><div class=3D"line">    <span class=3D"k">if</span> <span class=3D"p">=
(</span><span class=3D"n">ftruncate</span><span class=3D"p">(</span><span c=
lass=3D"n">fd</span><span class=3D"p">,</span> <span class=3D"n">len</span>=
<span class=3D"p">)</span> <span class=3D"o">!=3D</span> <span class=3D"o">=
-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></div><div class=3D"line">      <span class=3D"k">if</span> =
<span class=3D"p">(</span><span class=3D"n">write</span><span class=3D"p">(=
</span><span class=3D"n">fd</span><span class=3D"p">,</span> <span class=3D=
"n">buf</span><span class=3D"p">,</span> <span class=3D"n">len</span><span =
class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">len<=
/span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=
=3D"line">        <span class=3D"n">close</span><span class=3D"p">(</span><=
span class=3D"n">fd</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"n">free</span><span class=3D"p">(</span><span cl=
ass=3D"n">buf</span><span class=3D"p">);</span></div><ins class=3D"line">  =
      <span class=3D"n">editorSetStatusMessage</span><span class=3D"p">(</s=
pan><span class=3D"s">"%d bytes written to disk"</span><span class=3D"p">,<=
/span> <span class=3D"n">len</span><span class=3D"p">);</span></ins><div cl=
ass=3D"line">        <span class=3D"k">return</span><span class=3D"p">;</sp=
an></div><div class=3D"line">      <span class=3D"p">}</span></div><div cla=
ss=3D"line">    <span class=3D"p">}</span></div><div class=3D"line">    <sp=
an class=3D"n">close</span><span class=3D"p">(</span><span class=3D"n">fd</=
span><span class=3D"p">);</span></div><div class=3D"line">  <span class=3D"=
p">}</span></div><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"n">free</span><span class=3D"p">(</span><span class=3D"n">buf</span><s=
pan class=3D"p">);</span></div><ins class=3D"line">  <span class=3D"n">edit=
orSetStatusMessage</span><span class=3D"p">(</span><span class=3D"s">"Can't=
 save! I/O error: %s"</span><span class=3D"p">,</span> <span class=3D"n">st=
rerror</span><span class=3D"p">(</span><span class=3D"n">errno</span><span =
class=3D"p">));</span></ins><div class=3D"line"><span class=3D"p">}</span><=
/div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm=
">/*** append buffer ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** input ***/</span></div><div class=3D"line"><span class=3D"cm"=
>/*** init ***/</span></div><div class=3D"line"></div><div class=3D"line fo=
lded"><span class=3D"kt">void</span> <span class=3D"nf">initEditor</span><s=
pan class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <span class=
=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"><span cl=
ass=3D"kt">int</span> <span class=3D"nf">main</span><span class=3D"p">(</sp=
an><span class=3D"kt">int</span> <span class=3D"n">argc</span><span class=
=3D"p">,</span> <span class=3D"kt">char</span> <span class=3D"o">*</span><s=
pan class=3D"n">argv</span><span class=3D"p">[])</span> <span class=3D"p">{=
</span></div><div class=3D"line">  <span class=3D"n">enableRawMode</span><s=
pan class=3D"p">();</span></div><div class=3D"line">  <span class=3D"n">ini=
tEditor</span><span class=3D"p">();</span></div><div class=3D"line">  <span=
 class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">argc</sp=
an> <span class=3D"o">&gt;=3D</span> <span class=3D"mi">2</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">    <sp=
an class=3D"n">editorOpen</span><span class=3D"p">(</span><span class=3D"n"=
>argv</span><span class=3D"p">[</span><span class=3D"mi">1</span><span clas=
s=3D"p">]);</span></div><div class=3D"line">  <span class=3D"p">}</span></d=
iv><div class=3D"line"></div><ins class=3D"line">  <span class=3D"n">editor=
SetStatusMessage</span><span class=3D"p">(</span><span class=3D"s">"HELP: C=
trl-S =3D save | Ctrl-Q =3D quit"</span><span class=3D"p">);</span></ins><d=
iv class=3D"line"></div><div class=3D"line">  <span class=3D"k">while</span=
> <span class=3D"p">(</span><span class=3D"mi">1</span><span class=3D"p">)<=
/span> <span class=3D"p">{</span></div><div class=3D"line">    <span class=
=3D"n">editorRefreshScreen</span><span class=3D"p">();</span></div><div cla=
ss=3D"line">    <span class=3D"n">editorProcessKeypress</span><span class=
=3D"p">();</span></div><div class=3D"line">  <span class=3D"p">}</span></di=
v><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">return<=
/span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div clas=
s=3D"line"><span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c0">=E2=99=8F=EF=B8=8E doesn=E2=80=99t compile</di=
v>
</div>
</div>


<p><code>strerror()</code> comes from <code>&lt;string.h&gt;</code>.</p>

<p><code>strerror()</code> is like <code>perror()</code> (which we use in <=
code>die()</code>), but it takes the
<code>errno</code> value as an argument and returns the human-readable stri=
ng for that
error code, so that we can make the error a part of the status message we
display to the user.</p>

<p>The above code doesn=E2=80=99t actually compile, because we are trying t=
o call
<code>editorSetStatusMessage()</code> before it is defined in the file. You=
 can=E2=80=99t do that
in C, because C was made to be a language that can be compiled in a <a href=
=3D"https://en.wikipedia.org/wiki/One-pass_compiler">single
pass</a>, meaning it should be
possible to compile each part of a program without knowing what comes later=
 in
the program.</p>

<p>When we call a function in C, the compiler needs to know the arguments a=
nd
return value of that function. We can tell the compiler this information ab=
out
<code>editorSetStatusMessage()</code> by declaring a function prototype for=
 it near the
top of the file. This allows us to call the function before it is defined.
We=E2=80=99ll add a new <code>/*** prototypes ***/</code> section and put t=
he declaration under
it.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/prototypes/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 110</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/prototypes">prototypes</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"k">=
struct</span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</sp=
an> =E2=80=A6 <span class=3D"p">};</span></div><div class=3D"line"></div><d=
iv class=3D"line"><span class=3D"k">struct</span> <span class=3D"n">editorC=
onfig</span> <span class=3D"n">E</span><span class=3D"p">;</span></div><div=
 class=3D"line"></div><ins class=3D"line"><span class=3D"cm">/*** prototype=
s ***/</span></ins><ins class=3D"line"></ins><ins class=3D"line"><span clas=
s=3D"kt">void</span> <span class=3D"n">editorSetStatusMessage</span><span c=
lass=3D"p">(</span><span class=3D"k">const</span> <span class=3D"kt">char</=
span> <span class=3D"o">*</span><span class=3D"n">fmt</span><span class=3D"=
p">,</span> <span class=3D"p">...);</span></ins><div class=3D"line"></div><=
div class=3D"line folded"><span class=3D"cm">/*** terminal ***/</span></div=
><div class=3D"line folded"><span class=3D"cm">/*** row operations ***/</sp=
an></div><div class=3D"line folded"><span class=3D"cm">/*** editor operatio=
ns ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** file=
 i/o ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** ap=
pend buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** output ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** input ***/</span></div><div class=3D"line folded"><span class=3D"cm">/=
*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>

<h2 id=3D"dirty-flag"><a href=3D"https://viewsourcecode.org/snaptoken/kilo/=
05.aTextEditor.html#dirty-flag">Dirty flag</a></h2>

<p>We=E2=80=99d like to keep track of whether the text loaded in our editor=
 differs from
what=E2=80=99s in the file. Then we can warn the user that they might lose =
unsaved
changes when they try to quit.</p>

<p>We call a text buffer =E2=80=9Cdirty=E2=80=9D if it has been modified si=
nce opening or saving
the file. Let=E2=80=99s add a <code>dirty</code> variable to the global edi=
tor state, and
initialize it to <code>0</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/dirty/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 111</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/dirty">dirty</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span></di=
v><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">cy</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">rx</span><span class=3D"p">;</span></div><div class=3D"line">  =
<span class=3D"kt">int</span> <span class=3D"n">rowoff</span><span class=3D=
"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span=
 class=3D"n">coloff</span><span class=3D"p">;</span></div><div class=3D"lin=
e">  <span class=3D"kt">int</span> <span class=3D"n">screenrows</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">screencols</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">numrows</=
span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n=
">erow</span> <span class=3D"o">*</span><span class=3D"n">row</span><span c=
lass=3D"p">;</span></div><ins class=3D"line">  <span class=3D"kt">int</span=
> <span class=3D"n">dirty</span><span class=3D"p">;</span></ins><div class=
=3D"line">  <span class=3D"kt">char</span> <span class=3D"o">*</span><span =
class=3D"n">filename</span><span class=3D"p">;</span></div><div class=3D"li=
ne">  <span class=3D"kt">char</span> <span class=3D"n">statusmsg</span><spa=
n class=3D"p">[</span><span class=3D"mi">80</span><span class=3D"p">];</spa=
n></div><div class=3D"line">  <span class=3D"kt">time_t</span> <span class=
=3D"n">statusmsg_time</span><span class=3D"p">;</span></div><div class=3D"l=
ine">  <span class=3D"k">struct</span> <span class=3D"n">termios</span> <sp=
an class=3D"n">orig_termios</span><span class=3D"p">;</span></div><div clas=
s=3D"line"><span class=3D"p">};</span></div><div class=3D"line"></div><div =
class=3D"line"><span class=3D"k">struct</span> <span class=3D"n">editorConf=
ig</span> <span class=3D"n">E</span><span class=3D"p">;</span></div><div cl=
ass=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** proto=
types ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** t=
erminal ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 row operations ***/</span></div><div class=3D"line folded"><span class=3D"=
cm">/*** editor operations ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><s=
pan class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line fol=
ded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line fol=
ded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** init ***/</span></div><div class=3D"line"></div><div c=
lass=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">initEditor<=
/span><span class=3D"p">()</span> <span class=3D"p">{</span></div><div clas=
s=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><=
span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o"=
>=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">rx</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</s=
pan><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span><=
/div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">coloff</span> <span class=3D"o">=3D</span> <span clas=
s=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</=
span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">row</span> <span class=3D"o">=3D</spa=
n> <span class=3D"nb">NULL</span><span class=3D"p">;</span></div><ins class=
=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">dirty</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span=
><span class=3D"p">;</span></ins><div class=3D"line">  <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">filename</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;</span=
></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">statusmsg</span><span class=3D"p">[</span><span cla=
ss=3D"mi">0</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <=
span class=3D"sc">'\0'</span><span class=3D"p">;</span></div><div class=3D"=
line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"=
n">statusmsg_time</span> <span class=3D"o">=3D</span> <span class=3D"mi">0<=
/span><span class=3D"p">;</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span><span cla=
ss=3D"n">getWindowSize</span><span class=3D"p">(</span><span class=3D"o">&a=
mp;</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screenrows</span><span class=3D"p">,</span> <span class=3D"o">&amp;<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>screencols</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span=
> <span class=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)<=
/span> <span class=3D"n">die</span><span class=3D"p">(</span><span class=3D=
"s">"getWindowSize"</span><span class=3D"p">);</span></div><div class=3D"li=
ne">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>screenrows</span> <span class=3D"o">-=3D</span> <span class=3D"mi">2</span=
><span class=3D"p">;</span></div><div class=3D"line"><span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">int</span> <span class=3D"nf">main</span><span class=3D"p">(</span>=
<span class=3D"kt">int</span> <span class=3D"n">argc</span><span class=3D"p=
">,</span> <span class=3D"kt">char</span> <span class=3D"o">*</span><span c=
lass=3D"n">argv</span><span class=3D"p">[])</span> <span class=3D"p">{</spa=
n> =E2=80=A6 <span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Let=E2=80=99s show the state of <code>E.dirty</code> in the status bar, =
by displaying <code>(modified)</code>
after the filename if the file has been modified.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/show-dirty/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 112</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/show-dirty">show-dirty</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><=
div class=3D"line"><span class=3D"cm">/*** output ***/</span></div><div cla=
ss=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span>=
 <span class=3D"nf">editorScroll</span><span class=3D"p">()</span> <span cl=
ass=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"=
line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <span=
 class=3D"nf">editorDrawRows</span><span class=3D"p">(</span><span class=3D=
"k">struct</span> <span class=3D"n">abuf</span> <span class=3D"o">*</span><=
span class=3D"n">ab</span><span class=3D"p">)</span> <span class=3D"p">{</s=
pan> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><d=
iv class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorD=
rawStatusBar</span><span class=3D"p">(</span><span class=3D"k">struct</span=
> <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n"=
>ab</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div c=
lass=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</=
span><span class=3D"se">\x1b</span><span class=3D"s">[7m"</span><span class=
=3D"p">,</span> <span class=3D"mi">4</span><span class=3D"p">);</span></div=
><div class=3D"line">  <span class=3D"kt">char</span> <span class=3D"n">sta=
tus</span><span class=3D"p">[</span><span class=3D"mi">80</span><span class=
=3D"p">],</span> <span class=3D"n">rstatus</span><span class=3D"p">[</span>=
<span class=3D"mi">80</span><span class=3D"p">];</span></div><ins class=3D"=
line">  <span class=3D"kt">int</span> <span class=3D"n">len</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</=
span><span class=3D"n">status</span><span class=3D"p">,</span> <span class=
=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">status</spa=
n><span class=3D"p">),</span> <span class=3D"s">"%.20s - %d lines %s"</span=
><span class=3D"p">,</span></ins><ins class=3D"line">    <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">filename</span> <span c=
lass=3D"o">?</span> <span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">filename</span> <span class=3D"o">:</span> <span class=3D"s"=
>"[No Name]"</span><span class=3D"p">,</span> <span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">,<=
/span></ins><ins class=3D"line">    <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">dirty</span> <span class=3D"o">?</span> <s=
pan class=3D"s">"(modified)"</span> <span class=3D"o">:</span> <span class=
=3D"s">""</span><span class=3D"p">);</span></ins><div class=3D"line">  <spa=
n class=3D"kt">int</span> <span class=3D"n">rlen</span> <span class=3D"o">=
=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</span><span=
 class=3D"n">rstatus</span><span class=3D"p">,</span> <span class=3D"k">siz=
eof</span><span class=3D"p">(</span><span class=3D"n">rstatus</span><span c=
lass=3D"p">),</span> <span class=3D"s">"%d/%d"</span><span class=3D"p">,</s=
pan></div><div class=3D"line">    <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">cy</span> <span class=3D"o">+</span> <span cla=
ss=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">);<=
/span></div><div class=3D"line">  <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">len</span> <span class=3D"o">&gt;</span> <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
cols</span><span class=3D"p">)</span> <span class=3D"n">len</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">screencols</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(</span><spa=
n class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">status<=
/span><span class=3D"p">,</span> <span class=3D"n">len</span><span class=3D=
"p">);</span></div><div class=3D"line">  <span class=3D"k">while</span> <sp=
an class=3D"p">(</span><span class=3D"n">len</span> <span class=3D"o">&lt;<=
/span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">screencols</span><span class=3D"p">)</span> <span class=3D"p">{</span></d=
iv><div class=3D"line">    <span class=3D"k">if</span> <span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>screencols</span> <span class=3D"o">-</span> <span class=3D"n">len</span> =
<span class=3D"o">=3D=3D</span> <span class=3D"n">rlen</span><span class=3D=
"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      <spa=
n class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab=
</span><span class=3D"p">,</span> <span class=3D"n">rstatus</span><span cla=
ss=3D"p">,</span> <span class=3D"n">rlen</span><span class=3D"p">);</span><=
/div><div class=3D"line">      <span class=3D"k">break</span><span class=3D=
"p">;</span></div><div class=3D"line">    <span class=3D"p">}</span> <span =
class=3D"k">else</span> <span class=3D"p">{</span></div><div class=3D"line"=
>      <span class=3D"n">abAppend</span><span class=3D"p">(</span><span cla=
ss=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">" "</span><s=
pan class=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"p">);</s=
pan></div><div class=3D"line">      <span class=3D"n">len</span><span class=
=3D"o">++</span><span class=3D"p">;</span></div><div class=3D"line">    <sp=
an class=3D"p">}</span></div><div class=3D"line">  <span class=3D"p">}</spa=
n></div><div class=3D"line">  <span class=3D"n">abAppend</span><span class=
=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span =
class=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[m"</sp=
an><span class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">=
);</span></div><div class=3D"line">  <span class=3D"n">abAppend</span><span=
 class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> =
<span class=3D"s">"</span><span class=3D"se">\r\n</span><span class=3D"s">"=
</span><span class=3D"p">,</span> <span class=3D"mi">2</span><span class=3D=
"p">);</span></div><div class=3D"line"><span class=3D"p">}</span></div><div=
 class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</s=
pan> <span class=3D"nf">editorDrawMessageBar</span><span class=3D"p">(</spa=
n><span class=3D"k">struct</span> <span class=3D"n">abuf</span> <span class=
=3D"o">*</span><span class=3D"n">ab</span><span class=3D"p">)</span> <span =
class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <=
span class=3D"nf">editorRefreshScreen</span><span class=3D"p">()</span> <sp=
an class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> =
<span class=3D"nf">editorSetStatusMessage</span><span class=3D"p">(</span><=
span class=3D"k">const</span> <span class=3D"kt">char</span> <span class=3D=
"o">*</span><span class=3D"n">fmt</span><span class=3D"p">,</span> <span cl=
ass=3D"p">...)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p=
">}</span></div><div class=3D"line"></div><div class=3D"line folded"><span =
class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><span c=
lass=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Now let=E2=80=99s increment <code>E.dirty</code> in each row operation t=
hat makes a change to the
text.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/increment-dirty/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 113</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/increment-dirty">increment-dirty</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=
=3D"cm">/*** row operations ***/</span></div><div class=3D"line"></div><div=
 class=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">edi=
torRowCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> =
<span class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</=
span> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D=
"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span c=
lass=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div cl=
ass=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorAppend=
Row</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span cl=
ass=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> <spa=
n class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D"p">=
)</span> <span class=3D"p">{</span></div><div class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">realloc</span><span class=3D"p">(=
</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">row</span><span class=3D"p">,</span> <span class=3D"k">sizeof</span><span=
 class=3D"p">(</span><span class=3D"n">erow</span><span class=3D"p">)</span=
> <span class=3D"o">*</span> <span class=3D"p">(</span><span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">numrows</span> <span clas=
s=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">));</span></d=
iv><div class=3D"line"></div><div class=3D"line">  <span class=3D"kt">int</=
span> <span class=3D"n">at</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">=
[</span><span class=3D"n">at</span><span class=3D"p">].</span><span class=
=3D"n">size</span> <span class=3D"o">=3D</span> <span class=3D"n">len</span=
><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"=
p">[</span><span class=3D"n">at</span><span class=3D"p">].</span><span clas=
s=3D"n">chars</span> <span class=3D"o">=3D</span> <span class=3D"n">malloc<=
/span><span class=3D"p">(</span><span class=3D"n">len</span> <span class=3D=
"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><d=
iv class=3D"line">  <span class=3D"n">memcpy</span><span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row=
</span><span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"=
p">].</span><span class=3D"n">chars</span><span class=3D"p">,</span> <span =
class=3D"n">s</span><span class=3D"p">,</span> <span class=3D"n">len</span>=
<span class=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"=
p">[</span><span class=3D"n">at</span><span class=3D"p">].</span><span clas=
s=3D"n">chars</span><span class=3D"p">[</span><span class=3D"n">len</span><=
span class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'=
\0'</span><span class=3D"p">;</span></div><div class=3D"line"></div><div cl=
ass=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">at</span><s=
pan class=3D"p">].</span><span class=3D"n">rsize</span> <span class=3D"o">=
=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div =
class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">at</span>=
<span class=3D"p">].</span><span class=3D"n">render</span> <span class=3D"o=
">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;</span></div>=
<div class=3D"line">  <span class=3D"n">editorUpdateRow</span><span class=
=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span=
><span class=3D"n">at</span><span class=3D"p">]);</span></div><div class=3D=
"line"></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">numrows</span><span class=3D"o">++</span><spa=
n class=3D"p">;</span></div><ins class=3D"line">  <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">dirty</span><span class=3D"o">=
++</span><span class=3D"p">;</span></ins><div class=3D"line"><span class=3D=
"p">}</span></div><div class=3D"line"></div><div class=3D"line"><span class=
=3D"kt">void</span> <span class=3D"nf">editorRowInsertChar</span><span clas=
s=3D"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><sp=
an class=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int<=
/span> <span class=3D"n">at</span><span class=3D"p">,</span> <span class=3D=
"kt">int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span =
class=3D"p">{</span></div><div class=3D"line">  <span class=3D"k">if</span>=
 <span class=3D"p">(</span><span class=3D"n">at</span> <span class=3D"o">&l=
t;</span> <span class=3D"mi">0</span> <span class=3D"o">||</span> <span cla=
ss=3D"n">at</span> <span class=3D"o">&gt;</span> <span class=3D"n">row</spa=
n><span class=3D"o">-&gt;</span><span class=3D"n">size</span><span class=3D=
"p">)</span> <span class=3D"n">at</span> <span class=3D"o">=3D</span> <span=
 class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">size=
</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D=
"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">chars</span> =
<span class=3D"o">=3D</span> <span class=3D"n">realloc</span><span class=3D=
"p">(</span><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span=
 class=3D"n">chars</span><span class=3D"p">,</span> <span class=3D"n">row</=
span><span class=3D"o">-&gt;</span><span class=3D"n">size</span> <span clas=
s=3D"o">+</span> <span class=3D"mi">2</span><span class=3D"p">);</span></di=
v><div class=3D"line">  <span class=3D"n">memmove</span><span class=3D"p">(=
</span><span class=3D"o">&amp;</span><span class=3D"n">row</span><span clas=
s=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">[</span=
><span class=3D"n">at</span> <span class=3D"o">+</span> <span class=3D"mi">=
1</span><span class=3D"p">],</span> <span class=3D"o">&amp;</span><span cla=
ss=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">chars</s=
pan><span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">=
],</span> <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span c=
lass=3D"n">size</span> <span class=3D"o">-</span> <span class=3D"n">at</spa=
n> <span class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">=
);</span></div><div class=3D"line">  <span class=3D"n">row</span><span clas=
s=3D"o">-&gt;</span><span class=3D"n">size</span><span class=3D"o">++</span=
><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">ro=
w</span><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><span c=
lass=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">]</span> <s=
pan class=3D"o">=3D</span> <span class=3D"n">c</span><span class=3D"p">;</s=
pan></div><div class=3D"line">  <span class=3D"n">editorUpdateRow</span><sp=
an class=3D"p">(</span><span class=3D"n">row</span><span class=3D"p">);</sp=
an></div><ins class=3D"line">  <span class=3D"n">E</span><span class=3D"p">=
.</span><span class=3D"n">dirty</span><span class=3D"o">++</span><span clas=
s=3D"p">;</span></ins><div class=3D"line"><span class=3D"p">}</span></div><=
div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/***=
 editor operations ***/</span></div><div class=3D"line folded"><span class=
=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded"><s=
pan class=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><s=
pan class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><sp=
an class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We could have used <code>E.dirty =3D 1</code> instead of <code>E.dirty++=
</code>, but by incrementing it
we can have a sense of =E2=80=9Chow dirty=E2=80=9D the file is, which could=
 be useful. (We=E2=80=99ll
just be treating <code>E.dirty</code> as a boolean value in this tutorial, =
so it doesn=E2=80=99t
really matter.)</p>

<p>If you open a file at this point, you=E2=80=99ll see that <code>(modifie=
d)</code> appears right
away, before you make any changes. That=E2=80=99s because <code>editorOpen(=
)</code> calls
<code>editorAppendRow()</code>, which increments <code>E.dirty</code>. To f=
ix that, let=E2=80=99s reset
<code>E.dirty</code> to <code>0</code> at the end of <code>editorOpen()</co=
de>, and also in <code>editorSave()</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/reset-dirty/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 114</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/reset-dirty">reset-dirty</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"l=
ine"></div><div class=3D"line folded"><span class=3D"kt">char</span> <span =
class=3D"o">*</span><span class=3D"nf">editorRowsToString</span><span class=
=3D"p">(</span><span class=3D"kt">int</span> <span class=3D"o">*</span><spa=
n class=3D"n">buflen</span><span class=3D"p">)</span> <span class=3D"p">{</=
span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><=
div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editor=
Open</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span c=
lass=3D"o">*</span><span class=3D"n">filename</span><span class=3D"p">)</sp=
an> <span class=3D"p">{</span></div><div class=3D"line">  <span class=3D"n"=
>free</span><span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">filename</span><span class=3D"p">);</span>=
</div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">filename</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">strdup</span><span class=3D"p">(</span><span class=3D"n">filenam=
e</span><span class=3D"p">);</span></div><div class=3D"line"></div><div cla=
ss=3D"line">  <span class=3D"kt">FILE</span> <span class=3D"o">*</span><spa=
n class=3D"n">fp</span> <span class=3D"o">=3D</span> <span class=3D"n">fope=
n</span><span class=3D"p">(</span><span class=3D"n">filename</span><span cl=
ass=3D"p">,</span> <span class=3D"s">"r"</span><span class=3D"p">);</span><=
/div><div class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(<=
/span><span class=3D"o">!</span><span class=3D"n">fp</span><span class=3D"p=
">)</span> <span class=3D"n">die</span><span class=3D"p">(</span><span clas=
s=3D"s">"fopen"</span><span class=3D"p">);</span></div><div class=3D"line">=
</div><div class=3D"line">  <span class=3D"kt">char</span> <span class=3D"o=
">*</span><span class=3D"n">line</span> <span class=3D"o">=3D</span> <span =
class=3D"nb">NULL</span><span class=3D"p">;</span></div><div class=3D"line"=
>  <span class=3D"kt">size_t</span> <span class=3D"n">linecap</span> <span =
class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span=
></div><div class=3D"line">  <span class=3D"kt">ssize_t</span> <span class=
=3D"n">linelen</span><span class=3D"p">;</span></div><div class=3D"line">  =
<span class=3D"k">while</span> <span class=3D"p">((</span><span class=3D"n"=
>linelen</span> <span class=3D"o">=3D</span> <span class=3D"n">getline</spa=
n><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n"=
>line</span><span class=3D"p">,</span> <span class=3D"o">&amp;</span><span =
class=3D"n">linecap</span><span class=3D"p">,</span> <span class=3D"n">fp</=
span><span class=3D"p">))</span> <span class=3D"o">!=3D</span> <span class=
=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span =
class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">while</=
span> <span class=3D"p">(</span><span class=3D"n">linelen</span> <span clas=
s=3D"o">&gt;</span> <span class=3D"mi">0</span> <span class=3D"o">&amp;&amp=
;</span> <span class=3D"p">(</span><span class=3D"n">line</span><span class=
=3D"p">[</span><span class=3D"n">linelen</span> <span class=3D"o">-</span> =
<span class=3D"mi">1</span><span class=3D"p">]</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"sc">'\n'</span> <span class=3D"o">||</span></div>=
<div class=3D"line">                           <span class=3D"n">line</span=
><span class=3D"p">[</span><span class=3D"n">linelen</span> <span class=3D"=
o">-</span> <span class=3D"mi">1</span><span class=3D"p">]</span> <span cla=
ss=3D"o">=3D=3D</span> <span class=3D"sc">'\r'</span><span class=3D"p">))</=
span></div><div class=3D"line">      <span class=3D"n">linelen</span><span =
class=3D"o">--</span><span class=3D"p">;</span></div><div class=3D"line">  =
  <span class=3D"n">editorAppendRow</span><span class=3D"p">(</span><span c=
lass=3D"n">line</span><span class=3D"p">,</span> <span class=3D"n">linelen<=
/span><span class=3D"p">);</span></div><div class=3D"line">  <span class=3D=
"p">}</span></div><div class=3D"line">  <span class=3D"n">free</span><span =
class=3D"p">(</span><span class=3D"n">line</span><span class=3D"p">);</span=
></div><div class=3D"line">  <span class=3D"n">fclose</span><span class=3D"=
p">(</span><span class=3D"n">fp</span><span class=3D"p">);</span></div><ins=
 class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">dirty</span> <span class=3D"o">=3D</span> <span class=3D"mi">0=
</span><span class=3D"p">;</span></ins><div class=3D"line"><span class=3D"p=
">}</span></div><div class=3D"line"></div><div class=3D"line"><span class=
=3D"kt">void</span> <span class=3D"nf">editorSave</span><span class=3D"p">(=
)</span> <span class=3D"p">{</span></div><div class=3D"line">  <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">)</span> <span c=
lass=3D"k">return</span><span class=3D"p">;</span></div><div class=3D"line"=
></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n=
">len</span><span class=3D"p">;</span></div><div class=3D"line">  <span cla=
ss=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">buf</span=
> <span class=3D"o">=3D</span> <span class=3D"n">editorRowsToString</span><=
span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">le=
n</span><span class=3D"p">);</span></div><div class=3D"line"></div><div cla=
ss=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">fd</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">open</span><span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>filename</span><span class=3D"p">,</span> <span class=3D"n">O_RDWR</span> =
<span class=3D"o">|</span> <span class=3D"n">O_CREAT</span><span class=3D"p=
">,</span> <span class=3D"mo">0644</span><span class=3D"p">);</span></div><=
div class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span>=
<span class=3D"n">fd</span> <span class=3D"o">!=3D</span> <span class=3D"o"=
>-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">if</span> <s=
pan class=3D"p">(</span><span class=3D"n">ftruncate</span><span class=3D"p"=
>(</span><span class=3D"n">fd</span><span class=3D"p">,</span> <span class=
=3D"n">len</span><span class=3D"p">)</span> <span class=3D"o">!=3D</span> <=
span class=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</sp=
an> <span class=3D"p">{</span></div><div class=3D"line">      <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">write</span><s=
pan class=3D"p">(</span><span class=3D"n">fd</span><span class=3D"p">,</spa=
n> <span class=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"n"=
>len</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span=
 class=3D"n">len</span><span class=3D"p">)</span> <span class=3D"p">{</span=
></div><div class=3D"line">        <span class=3D"n">close</span><span clas=
s=3D"p">(</span><span class=3D"n">fd</span><span class=3D"p">);</span></div=
><div class=3D"line">        <span class=3D"n">free</span><span class=3D"p"=
>(</span><span class=3D"n">buf</span><span class=3D"p">);</span></div><ins =
class=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</span>=
<span class=3D"n">dirty</span> <span class=3D"o">=3D</span> <span class=3D"=
mi">0</span><span class=3D"p">;</span></ins><div class=3D"line">        <sp=
an class=3D"n">editorSetStatusMessage</span><span class=3D"p">(</span><span=
 class=3D"s">"%d bytes written to disk"</span><span class=3D"p">,</span> <s=
pan class=3D"n">len</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"k">return</span><span class=3D"p">;</span></div>=
<div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"lin=
e">    <span class=3D"p">}</span></div><div class=3D"line">    <span class=
=3D"n">close</span><span class=3D"p">(</span><span class=3D"n">fd</span><sp=
an class=3D"p">);</span></div><div class=3D"line">  <span class=3D"p">}</sp=
an></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">=
free</span><span class=3D"p">(</span><span class=3D"n">buf</span><span clas=
s=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">editorSetSta=
tusMessage</span><span class=3D"p">(</span><span class=3D"s">"Can't save! I=
/O error: %s"</span><span class=3D"p">,</span> <span class=3D"n">strerror</=
span><span class=3D"p">(</span><span class=3D"n">errno</span><span class=3D=
"p">));</span></div><div class=3D"line"><span class=3D"p">}</span></div><di=
v class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** a=
ppend buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm"=
>/*** output ***/</span></div><div class=3D"line folded"><span class=3D"cm"=
>/*** input ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>Now you should see <code>(modified)</code> appear in the status bar when=
 you first insert
a character, and you should see it disappear when you save the file to disk=
.</p>
<h2 id=3D"quit-confirmation"><a href=3D"https://viewsourcecode.org/snaptoke=
n/kilo/05.aTextEditor.html#quit-confirmation">Quit confirmation</a></h2>

<p>Now we=E2=80=99re ready to warn the user about unsaved changes when they=
 try to quit.
If <code>E.dirty</code> is set, we will display a warning in the status bar=
, and require
the user to press <kbd>Ctrl-Q</kbd> three more times in order to quit witho=
ut
saving.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/quit-confirmation/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 115</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/quit-confirmation">quit-confirmation</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line"><span class=3D"c=
m">/*** defines ***/</span></div><div class=3D"line"></div><div class=3D"li=
ne"><span class=3D"cp">#define KILO_VERSION "0.0.1"</span></div><div class=
=3D"line"><span class=3D"cp">#define KILO_TAB_STOP 8</span></div><ins class=
=3D"line"><span class=3D"cp">#define KILO_QUIT_TIMES 3</span></ins><div cla=
ss=3D"line"></div><div class=3D"line"><span class=3D"cp">#define CTRL_KEY(k=
) ((k) &amp; 0x1f)</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">enum</span> <span class=3D"n">editorKey</span> <=
span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">};</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** data=
 ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** protot=
ypes ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** te=
rminal ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** =
row operations ***/</span></div><div class=3D"line folded"><span class=3D"c=
m">/*** editor operations ***/</span></div><div class=3D"line folded"><span=
 class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><sp=
an class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span>=
 <span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{=
</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orProcessKeypress</span><span class=3D"p">()</span> <span class=3D"p">{</sp=
an></div><ins class=3D"line">  <span class=3D"k">static</span> <span class=
=3D"kt">int</span> <span class=3D"n">quit_times</span> <span class=3D"o">=
=3D</span> <span class=3D"n">KILO_QUIT_TIMES</span><span class=3D"p">;</spa=
n></ins><div class=3D"line"></div><div class=3D"line">  <span class=3D"kt">=
int</span> <span class=3D"n">c</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"n">editorReadKey</span><span class=3D"p">();</span></div><div class=
=3D"line"></div><div class=3D"line">  <span class=3D"k">switch</span> <span=
 class=3D"p">(</span><span class=3D"n">c</span><span class=3D"p">)</span> <=
span class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">ca=
se</span> <span class=3D"sc">'\r'</span><span class=3D"p">:</span></div><di=
v class=3D"line">      <span class=3D"cm">/* TODO */</span></div><div class=
=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span></d=
iv><div class=3D"line"></div><div class=3D"line">    <span class=3D"k">case=
</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span cl=
ass=3D"sc">'q'</span><span class=3D"p">):</span></div><ins class=3D"line"> =
     <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">dirty</span> <span cl=
ass=3D"o">&amp;&amp;</span> <span class=3D"n">quit_times</span> <span class=
=3D"o">&gt;</span> <span class=3D"mi">0</span><span class=3D"p">)</span> <s=
pan class=3D"p">{</span></ins><ins class=3D"line">        <span class=3D"n"=
>editorSetStatusMessage</span><span class=3D"p">(</span><span class=3D"s">"=
WARNING!!! File has unsaved changes. "</span></ins><ins class=3D"line">    =
      <span class=3D"s">"Press Ctrl-Q %d more times to quit."</span><span c=
lass=3D"p">,</span> <span class=3D"n">quit_times</span><span class=3D"p">);=
</span></ins><ins class=3D"line">        <span class=3D"n">quit_times</span=
><span class=3D"o">--</span><span class=3D"p">;</span></ins><ins class=3D"l=
ine">        <span class=3D"k">return</span><span class=3D"p">;</span></ins=
><ins class=3D"line">      <span class=3D"p">}</span></ins><div class=3D"li=
ne">      <span class=3D"n">write</span><span class=3D"p">(</span><span cla=
ss=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s">"=
</span><span class=3D"se">\x1b</span><span class=3D"s">[2J"</span><span cla=
ss=3D"p">,</span> <span class=3D"mi">4</span><span class=3D"p">);</span></d=
iv><div class=3D"line">      <span class=3D"n">write</span><span class=3D"p=
">(</span><span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> =
<span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[=
H"</span><span class=3D"p">,</span> <span class=3D"mi">3</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"n">exit</spa=
n><span class=3D"p">(</span><span class=3D"mi">0</span><span class=3D"p">);=
</span></div><div class=3D"line">      <span class=3D"k">break</span><span =
class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line">   =
 <span class=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span class=
=3D"p">(</span><span class=3D"sc">'s'</span><span class=3D"p">):</span></di=
v><div class=3D"line">      <span class=3D"n">editorSave</span><span class=
=3D"p">();</span></div><div class=3D"line">      <span class=3D"k">break</s=
pan><span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D=
"line">    <span class=3D"k">case</span> <span class=3D"n">HOME_KEY</span><=
span class=3D"p">:</span></div><div class=3D"line">      <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <span class=
=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></di=
v><div class=3D"line">      <span class=3D"k">break</span><span class=3D"p"=
>;</span></div><div class=3D"line"></div><div class=3D"line">    <span clas=
s=3D"k">case</span> <span class=3D"n">END_KEY</span><span class=3D"p">:</sp=
an></div><div class=3D"line">      <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">cy</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p=
">)</span></div><div class=3D"line">        <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">ro=
w</span><span class=3D"p">[</span><span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">cy</span><span class=3D"p">].</span><span clas=
s=3D"n">size</span><span class=3D"p">;</span></div><div class=3D"line">    =
  <span class=3D"k">break</span><span class=3D"p">;</span></div><div class=
=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span> <span=
 class=3D"n">BACKSPACE</span><span class=3D"p">:</span></div><div class=3D"=
line">    <span class=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><s=
pan class=3D"p">(</span><span class=3D"sc">'h'</span><span class=3D"p">):</=
span></div><div class=3D"line">    <span class=3D"k">case</span> <span clas=
s=3D"n">DEL_KEY</span><span class=3D"p">:</span></div><div class=3D"line"> =
     <span class=3D"cm">/* TODO */</span></div><div class=3D"line">      <s=
pan class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"l=
ine"></div><div class=3D"line">    <span class=3D"k">case</span> <span clas=
s=3D"n">PAGE_UP</span><span class=3D"p">:</span></div><div class=3D"line"> =
   <span class=3D"k">case</span> <span class=3D"n">PAGE_DOWN</span><span cl=
ass=3D"p">:</span></div><div class=3D"line">      <span class=3D"p">{</span=
></div><div class=3D"line">        <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <=
span class=3D"n">PAGE_UP</span><span class=3D"p">)</span> <span class=3D"p"=
>{</span></div><div class=3D"line">          <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=3D</sp=
an> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">r=
owoff</span><span class=3D"p">;</span></div><div class=3D"line">        <sp=
an class=3D"p">}</span> <span class=3D"k">else</span> <span class=3D"k">if<=
/span> <span class=3D"p">(</span><span class=3D"n">c</span> <span class=3D"=
o">=3D=3D</span> <span class=3D"n">PAGE_DOWN</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span></div><div class=3D"line">          <span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">rowoff</span> <span class=3D"o">+</span> <span class=3D"=
n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span> <s=
pan class=3D"o">-</span> <span class=3D"mi">1</span><span class=3D"p">;</sp=
an></div><div class=3D"line">          <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cy</span> <span class=3D"o">&gt;</span> <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=
=3D"p">)</span> <span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p=
">;</span></div><div class=3D"line">        <span class=3D"p">}</span></div=
><div class=3D"line"></div><div class=3D"line">        <span class=3D"kt">i=
nt</span> <span class=3D"n">times</span> <span class=3D"o">=3D</span> <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows=
</span><span class=3D"p">;</span></div><div class=3D"line">        <span cl=
ass=3D"k">while</span> <span class=3D"p">(</span><span class=3D"n">times</s=
pan><span class=3D"o">--</span><span class=3D"p">)</span></div><div class=
=3D"line">          <span class=3D"n">editorMoveCursor</span><span class=3D=
"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <spa=
n class=3D"n">PAGE_UP</span> <span class=3D"o">?</span> <span class=3D"n">A=
RROW_UP</span> <span class=3D"o">:</span> <span class=3D"n">ARROW_DOWN</spa=
n><span class=3D"p">);</span></div><div class=3D"line">      <span class=3D=
"p">}</span></div><div class=3D"line">      <span class=3D"k">break</span><=
span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line=
">    <span class=3D"k">case</span> <span class=3D"n">ARROW_UP</span><span =
class=3D"p">:</span></div><div class=3D"line">    <span class=3D"k">case</s=
pan> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_=
LEFT</span><span class=3D"p">:</span></div><div class=3D"line">    <span cl=
ass=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</span><span class=3D"p"=
>:</span></div><div class=3D"line">      <span class=3D"n">editorMoveCursor=
</span><span class=3D"p">(</span><span class=3D"n">c</span><span class=3D"p=
">);</span></div><div class=3D"line">      <span class=3D"k">break</span><s=
pan class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line"=
>    <span class=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span c=
lass=3D"p">(</span><span class=3D"sc">'l'</span><span class=3D"p">):</span>=
</div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"=
sc">'\x1b'</span><span class=3D"p">:</span></div><div class=3D"line">      =
<span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D=
"line"></div><div class=3D"line">    <span class=3D"nl">default:</span></di=
v><div class=3D"line">      <span class=3D"n">editorInsertChar</span><span =
class=3D"p">(</span><span class=3D"n">c</span><span class=3D"p">);</span></=
div><div class=3D"line">      <span class=3D"k">break</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"p">}</span></div><div=
 class=3D"line"></div><ins class=3D"line">  <span class=3D"n">quit_times</s=
pan> <span class=3D"o">=3D</span> <span class=3D"n">KILO_QUIT_TIMES</span><=
span class=3D"p">;</span></ins><div class=3D"line"><span class=3D"p">}</spa=
n></div><div class=3D"line"></div><div class=3D"line folded"><span class=3D=
"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We use a static variable in <code>editorProcessKeypress()</code> to keep=
 track of how many
more times the user must press <kbd>Ctrl-Q</kbd> to quit. Each time they pr=
ess
<kbd>Ctrl-Q</kbd> with unsaved changes, we set the status message and decre=
ment
<code>quit_times</code>. When <code>quit_times</code> gets to <code>0</code=
>, we finally allow the program to
exit. When they press any key other than <kbd>Ctrl-Q</kbd>, then <code>quit=
_times</code>
gets reset back to <code>3</code> at the end of the <code>editorProcessKeyp=
ress()</code> function.</p>
<h2 id=3D"simple-backspacing"><a href=3D"https://viewsourcecode.org/snaptok=
en/kilo/05.aTextEditor.html#simple-backspacing">Simple backspacing</a></h2>

<p>Let=E2=80=99s implement backspacing next. First we=E2=80=99ll create an =
<code>editorRowDelChar()</code>
function, which deletes a character in an <code>erow</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/row-del-char/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 116</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/row-del-char">row-del-char</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=
=3D"cm">/*** row operations ***/</span></div><div class=3D"line"></div><div=
 class=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">edi=
torRowCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> =
<span class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</=
span> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D=
"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span c=
lass=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div cl=
ass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rAppendRow</span><span class=3D"p">(</span><span class=3D"kt">char</span> <=
span class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</spa=
n> <span class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorRowInsertChar</span><span clas=
s=3D"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><sp=
an class=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int<=
/span> <span class=3D"n">at</span><span class=3D"p">,</span> <span class=3D=
"kt">int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span =
class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=
=3D"line"></div><ins class=3D"line"><span class=3D"kt">void</span> <span cl=
ass=3D"nf">editorRowDelChar</span><span class=3D"p">(</span><span class=3D"=
n">erow</span> <span class=3D"o">*</span><span class=3D"n">row</span><span =
class=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D"n">at</sp=
an><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D=
"line">  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=
=3D"n">at</span> <span class=3D"o">&lt;</span> <span class=3D"mi">0</span> =
<span class=3D"o">||</span> <span class=3D"n">at</span> <span class=3D"o">&=
gt;=3D</span> <span class=3D"n">row</span><span class=3D"o">-&gt;</span><sp=
an class=3D"n">size</span><span class=3D"p">)</span> <span class=3D"k">retu=
rn</span><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=
=3D"n">memmove</span><span class=3D"p">(</span><span class=3D"o">&amp;</spa=
n><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"=
n">chars</span><span class=3D"p">[</span><span class=3D"n">at</span><span c=
lass=3D"p">],</span> <span class=3D"o">&amp;</span><span class=3D"n">row</s=
pan><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=
=3D"p">[</span><span class=3D"n">at</span> <span class=3D"o">+</span> <span=
 class=3D"mi">1</span><span class=3D"p">],</span> <span class=3D"n">row</sp=
an><span class=3D"o">-&gt;</span><span class=3D"n">size</span> <span class=
=3D"o">-</span> <span class=3D"n">at</span><span class=3D"p">);</span></ins=
><ins class=3D"line">  <span class=3D"n">row</span><span class=3D"o">-&gt;<=
/span><span class=3D"n">size</span><span class=3D"o">--</span><span class=
=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">editorUpdateRo=
w</span><span class=3D"p">(</span><span class=3D"n">row</span><span class=
=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">dirty</span><span class=3D"o">++</sp=
an><span class=3D"p">;</span></ins><ins class=3D"line"><span class=3D"p">}<=
/span></ins><div class=3D"line"></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** editor operations ***/</span></div><div class=3D"line folded"=
><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folde=
d"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"lin=
e folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"lin=
e folded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>As you can see, it=E2=80=99s very similar to <code>editorRowInsertChar()=
</code>, except we don=E2=80=99t
have any memory management to do. We just use <code>memmove()</code> to ove=
rwrite the
deleted character with the characters that come after it (notice that the n=
ull
byte at the end gets included in the move). Then we decrement the row=E2=80=
=99s <code>size</code>,
call <code>editorUpdateRow()</code>, and increment <code>E.dirty</code>.</p=
>

<p>Now let=E2=80=99s implement <code>editorDelChar()</code>, which uses <co=
de>editorRowDelChar()</code> to
delete the character that is to the left of the cursor.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/editor-del-char/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 117</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/editor-del-char">editor-del-char</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** editor operations ***/</span></div><div class=3D"line"=
></div><div class=3D"line folded"><span class=3D"kt">void</span> <span clas=
s=3D"nf">editorInsertChar</span><span class=3D"p">(</span><span class=3D"kt=
">int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"l=
ine"></div><ins class=3D"line"><span class=3D"kt">void</span> <span class=
=3D"nf">editorDelChar</span><span class=3D"p">()</span> <span class=3D"p">{=
</span></ins><ins class=3D"line">  <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">cy</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D=
"p">)</span> <span class=3D"k">return</span><span class=3D"p">;</span></ins=
><ins class=3D"line"></ins><ins class=3D"line">  <span class=3D"n">erow</sp=
an> <span class=3D"o">*</span><span class=3D"n">row</span> <span class=3D"o=
">=3D</span> <span class=3D"o">&amp;</span><span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</sp=
an><span class=3D"p">];</span></ins><ins class=3D"line">  <span class=3D"k"=
>if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">&gt;</span> <s=
pan class=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"p">{</sp=
an></ins><ins class=3D"line">    <span class=3D"n">editorRowDelChar</span><=
span class=3D"p">(</span><span class=3D"n">row</span><span class=3D"p">,</s=
pan> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">=
cx</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span class=
=3D"p">);</span></ins><ins class=3D"line">    <span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">cx</span><span class=3D"o">--</spa=
n><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"p">}=
</span></ins><ins class=3D"line"><span class=3D"p">}</span></ins><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** file i/o=
 ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** append=
 buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 output ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 input ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** =
init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>If the cursor=E2=80=99s past the end of the file, then there is nothing =
to delete, and
we <code>return</code> immediately. Otherwise, we get the <code>erow</code>=
 the cursor is on, and if
there is a character to the left of the cursor, we delete it and move the
cursor one to the left.</p>

<p>Let=E2=80=99s map the <kbd>Backspace</kbd>, <kbd>Ctrl-H</kbd>, and <kbd>=
Delete</kbd>
keys to <code>editorDelChar()</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/key-del-char/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 118</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/key-del-char">key-del-char</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><=
div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><=
div class=3D"line"><span class=3D"cm">/*** input ***/</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> =
<span class=3D"nf">editorMoveCursor</span><span class=3D"p">(</span><span c=
lass=3D"kt">int</span> <span class=3D"n">key</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><di=
v class=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <=
span class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</span> <=
span class=3D"p">{</span></div><div class=3D"line">  <span class=3D"k">stat=
ic</span> <span class=3D"kt">int</span> <span class=3D"n">quit_times</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">KILO_QUIT_TIMES</span><span=
 class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line">  =
<span class=3D"kt">int</span> <span class=3D"n">c</span> <span class=3D"o">=
=3D</span> <span class=3D"n">editorReadKey</span><span class=3D"p">();</spa=
n></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">s=
witch</span> <span class=3D"p">(</span><span class=3D"n">c</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">    <s=
pan class=3D"k">case</span> <span class=3D"sc">'\r'</span><span class=3D"p"=
>:</span></div><div class=3D"line">      <span class=3D"cm">/* TODO */</spa=
n></div><div class=3D"line">      <span class=3D"k">break</span><span class=
=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line">    <spa=
n class=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p=
">(</span><span class=3D"sc">'q'</span><span class=3D"p">):</span></div><di=
v class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">dir=
ty</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">quit_times<=
/span> <span class=3D"o">&gt;</span> <span class=3D"mi">0</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">       =
 <span class=3D"n">editorSetStatusMessage</span><span class=3D"p">(</span><=
span class=3D"s">"WARNING!!! File has unsaved changes. "</span></div><div c=
lass=3D"line">          <span class=3D"s">"Press Ctrl-Q %d more times to qu=
it."</span><span class=3D"p">,</span> <span class=3D"n">quit_times</span><s=
pan class=3D"p">);</span></div><div class=3D"line">        <span class=3D"n=
">quit_times</span><span class=3D"o">--</span><span class=3D"p">;</span></d=
iv><div class=3D"line">        <span class=3D"k">return</span><span class=
=3D"p">;</span></div><div class=3D"line">      <span class=3D"p">}</span></=
div><div class=3D"line">      <span class=3D"n">write</span><span class=3D"=
p">(</span><span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span>=
 <span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">=
[2J"</span><span class=3D"p">,</span> <span class=3D"mi">4</span><span clas=
s=3D"p">);</span></div><div class=3D"line">      <span class=3D"n">write</s=
pan><span class=3D"p">(</span><span class=3D"n">STDOUT_FILENO</span><span c=
lass=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span=
><span class=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">=
3</span><span class=3D"p">);</span></div><div class=3D"line">      <span cl=
ass=3D"n">exit</span><span class=3D"p">(</span><span class=3D"mi">0</span><=
span class=3D"p">);</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line"></div><div=
 class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">CTRL_KE=
Y</span><span class=3D"p">(</span><span class=3D"sc">'s'</span><span class=
=3D"p">):</span></div><div class=3D"line">      <span class=3D"n">editorSav=
e</span><span class=3D"p">();</span></div><div class=3D"line">      <span c=
lass=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line">=
</div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"=
n">HOME_KEY</span><span class=3D"p">:</span></div><div class=3D"line">     =
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</=
span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></div><div class=3D"line">      <span class=3D"k">break</spa=
n><span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"l=
ine">    <span class=3D"k">case</span> <span class=3D"n">END_KEY</span><spa=
n class=3D"p">:</span></div><div class=3D"line">      <span class=3D"k">if<=
/span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">cy</span> <span class=3D"o">&lt;</span> <span c=
lass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</spa=
n><span class=3D"p">)</span></div><div class=3D"line">        <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <span =
class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span>=
<span class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"p"=
>].</span><span class=3D"n">size</span><span class=3D"p">;</span></div><div=
 class=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</sp=
an></div><div class=3D"line"></div><div class=3D"line">    <span class=3D"k=
">case</span> <span class=3D"n">BACKSPACE</span><span class=3D"p">:</span><=
/div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"n=
">CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'h'</span><sp=
an class=3D"p">):</span></div><div class=3D"line">    <span class=3D"k">cas=
e</span> <span class=3D"n">DEL_KEY</span><span class=3D"p">:</span></div><i=
ns class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</sp=
an><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"n">DEL_KEY</span><span class=3D"p">)</span> <span class=3D"n">editorMov=
eCursor</span><span class=3D"p">(</span><span class=3D"n">ARROW_RIGHT</span=
><span class=3D"p">);</span></ins><ins class=3D"line">      <span class=3D"=
n">editorDelChar</span><span class=3D"p">();</span></ins><div class=3D"line=
">      <span class=3D"k">break</span><span class=3D"p">;</span></div><div =
class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span> =
<span class=3D"n">PAGE_UP</span><span class=3D"p">:</span></div><div class=
=3D"line">    <span class=3D"k">case</span> <span class=3D"n">PAGE_DOWN</sp=
an><span class=3D"p">:</span></div><div class=3D"line">      <span class=3D=
"p">{</span></div><div class=3D"line">        <span class=3D"k">if</span> <=
span class=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"n">PAGE_UP</span><span class=3D"p">)</span> <span=
 class=3D"p">{</span></div><div class=3D"line">          <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">rowoff</span><span class=3D"p">;</span></div><div class=3D"lin=
e">        <span class=3D"p">}</span> <span class=3D"k">else</span> <span c=
lass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">c</span> <=
span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_DOWN</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      =
    <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">c=
y</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rowoff</span> <span class=3D"o">+</span> <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
rows</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">;</span></div><div class=3D"line">          <span class=3D"k">if</=
span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p"=
>.</span><span class=3D"n">cy</span> <span class=3D"o">&gt;</span> <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span=
><span class=3D"p">)</span> <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">;</span></div><div class=3D"line">        <span class=3D"p"=
>}</span></div><div class=3D"line"></div><div class=3D"line">        <span =
class=3D"kt">int</span> <span class=3D"n">times</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screenrows</span><span class=3D"p">;</span></div><div class=3D"line"=
>        <span class=3D"k">while</span> <span class=3D"p">(</span><span cla=
ss=3D"n">times</span><span class=3D"o">--</span><span class=3D"p">)</span><=
/div><div class=3D"line">          <span class=3D"n">editorMoveCursor</span=
><span class=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"n">PAGE_UP</span> <span class=3D"o">?</span> <spa=
n class=3D"n">ARROW_UP</span> <span class=3D"o">:</span> <span class=3D"n">=
ARROW_DOWN</span><span class=3D"p">);</span></div><div class=3D"line">     =
 <span class=3D"p">}</span></div><div class=3D"line">      <span class=3D"k=
">break</span><span class=3D"p">;</span></div><div class=3D"line"></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_=
UP</span><span class=3D"p">:</span></div><div class=3D"line">    <span clas=
s=3D"k">case</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:<=
/span></div><div class=3D"line">    <span class=3D"k">case</span> <span cla=
ss=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><div class=3D"lin=
e">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</span><s=
pan class=3D"p">:</span></div><div class=3D"line">      <span class=3D"n">e=
ditorMoveCursor</span><span class=3D"p">(</span><span class=3D"n">c</span><=
span class=3D"p">);</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line"></div><div=
 class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">CTRL_KE=
Y</span><span class=3D"p">(</span><span class=3D"sc">'l'</span><span class=
=3D"p">):</span></div><div class=3D"line">    <span class=3D"k">case</span>=
 <span class=3D"sc">'\x1b'</span><span class=3D"p">:</span></div><div class=
=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span></d=
iv><div class=3D"line"></div><div class=3D"line">    <span class=3D"nl">def=
ault:</span></div><div class=3D"line">      <span class=3D"n">editorInsertC=
har</span><span class=3D"p">(</span><span class=3D"n">c</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"k">break</sp=
an><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"p">=
}</span></div><div class=3D"line"></div><div class=3D"line">  <span class=
=3D"n">quit_times</span> <span class=3D"o">=3D</span> <span class=3D"n">KIL=
O_QUIT_TIMES</span><span class=3D"p">;</span></div><div class=3D"line"><spa=
n class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line fo=
lded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>It so happens that in our editor, pressing the <kbd>=E2=86=92</kbd> key =
and then
<kbd>Backspace</kbd> is equivalent to what you would expect from pressing t=
he
<kbd>Delete</kbd> key in a text editor: it deletes the character to the rig=
ht
of the cursor. So that is how we implement the <kbd>Delete</kbd> key above.=
</p>
<h2 id=3D"backspacing-at-the-start-of-a-line"><a href=3D"https://viewsource=
code.org/snaptoken/kilo/05.aTextEditor.html#backspacing-at-the-start-of-a-l=
ine">Backspacing at the start of a line</a></h2>

<p>Currently, <code>editorDelChar()</code> doesn=E2=80=99t do anything when=
 the cursor is at the
beginning of a line. When the user backspaces at the beginning of a line, w=
e
want to append the contents of that line to the previous line, and then del=
ete
the current line. This effectively backspaces the implicit <code>\n</code> =
character in
between the two lines to join them into one line.</p>

<p>So we need two new row operations: one for appending a string to a row, =
and one
for deleting a row. Let=E2=80=99s start by implementing <code>editorDelRow(=
)</code>, which will
also require an <code>editorFreeRow()</code> function for freeing the memor=
y owned by the
<code>erow</code> we are deleting.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/del-row/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 119</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/del-row">del-row</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=
=3D"cm">/*** row operations ***/</span></div><div class=3D"line"></div><div=
 class=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">edi=
torRowCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> =
<span class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</=
span> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D=
"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span c=
lass=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div cl=
ass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rAppendRow</span><span class=3D"p">(</span><span class=3D"kt">char</span> <=
span class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</spa=
n> <span class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><ins class=3D"line"><span class=3D"kt">=
void</span> <span class=3D"nf">editorFreeRow</span><span class=3D"p">(</spa=
n><span class=3D"n">erow</span> <span class=3D"o">*</span><span class=3D"n"=
>row</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins =
class=3D"line">  <span class=3D"n">free</span><span class=3D"p">(</span><sp=
an class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">re=
nder</span><span class=3D"p">);</span></ins><ins class=3D"line">  <span cla=
ss=3D"n">free</span><span class=3D"p">(</span><span class=3D"n">row</span><=
span class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p=
">);</span></ins><ins class=3D"line"><span class=3D"p">}</span></ins><ins c=
lass=3D"line"></ins><ins class=3D"line"><span class=3D"kt">void</span> <spa=
n class=3D"nf">editorDelRow</span><span class=3D"p">(</span><span class=3D"=
kt">int</span> <span class=3D"n">at</span><span class=3D"p">)</span> <span =
class=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"k">if</span>=
 <span class=3D"p">(</span><span class=3D"n">at</span> <span class=3D"o">&l=
t;</span> <span class=3D"mi">0</span> <span class=3D"o">||</span> <span cla=
ss=3D"n">at</span> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D=
"p">)</span> <span class=3D"k">return</span><span class=3D"p">;</span></ins=
><ins class=3D"line">  <span class=3D"n">editorFreeRow</span><span class=3D=
"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">E</span><span c=
lass=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><s=
pan class=3D"n">at</span><span class=3D"p">]);</span></ins><ins class=3D"li=
ne">  <span class=3D"n">memmove</span><span class=3D"p">(</span><span class=
=3D"o">&amp;</span><span class=3D"n">E</span><span class=3D"p">.</span><spa=
n class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">at</spa=
n><span class=3D"p">],</span> <span class=3D"o">&amp;</span><span class=3D"=
n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span clas=
s=3D"p">[</span><span class=3D"n">at</span> <span class=3D"o">+</span> <spa=
n class=3D"mi">1</span><span class=3D"p">],</span> <span class=3D"k">sizeof=
</span><span class=3D"p">(</span><span class=3D"n">erow</span><span class=
=3D"p">)</span> <span class=3D"o">*</span> <span class=3D"p">(</span><span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</sp=
an> <span class=3D"o">-</span> <span class=3D"n">at</span> <span class=3D"o=
">-</span> <span class=3D"mi">1</span><span class=3D"p">));</span></ins><in=
s class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><spa=
n class=3D"n">numrows</span><span class=3D"o">--</span><span class=3D"p">;<=
/span></ins><ins class=3D"line">  <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">dirty</span><span class=3D"o">++</span><span c=
lass=3D"p">;</span></ins><ins class=3D"line"><span class=3D"p">}</span></in=
s><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">v=
oid</span> <span class=3D"nf">editorRowInsertChar</span><span class=3D"p">(=
</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span class=
=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int</span> <=
span class=3D"n">at</span><span class=3D"p">,</span> <span class=3D"kt">int=
</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span class=3D=
"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line folded"><span class=3D"kt">void</span> <span class=
=3D"nf">editorRowDelChar</span><span class=3D"p">(</span><span class=3D"n">=
erow</span> <span class=3D"o">*</span><span class=3D"n">row</span><span cla=
ss=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D"n">at</span>=
<span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=
=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded"><=
span class=3D"cm">/*** editor operations ***/</span></div><div class=3D"lin=
e folded"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"l=
ine folded"><span class=3D"cm">/*** append buffer ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><div clas=
s=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code></pr=
e>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>editorDelRow()</code> looks a lot like <code>editorRowDelChar()</c=
ode>, because in both cases
we are deleting a single element from an array of elements by its index.</p=
>

<p>First we validate the <code>at</code> index. Then we free the memory own=
ed by the row
using <code>editorFreeRow()</code>. We then use <code>memmove()</code> to o=
verwrite the deleted row
struct with the rest of the rows that come after it, and decrement <code>nu=
mrows</code>.
Finally, we increment <code>E.dirty</code>.</p>

<p>Now let=E2=80=99s implement <code>editorRowAppendString()</code>, which =
appends a string to the
end of a row.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/row-append-string/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 120</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/row-append-string">row-append-string</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=
=3D"cm">/*** row operations ***/</span></div><div class=3D"line"></div><div=
 class=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">edi=
torRowCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> =
<span class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</=
span> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D=
"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span c=
lass=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div cl=
ass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rAppendRow</span><span class=3D"p">(</span><span class=3D"kt">char</span> <=
span class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</spa=
n> <span class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorFreeRow</span><span class=3D"p=
">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span cla=
ss=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div cl=
ass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rDelRow</span><span class=3D"p">(</span><span class=3D"kt">int</span> <span=
 class=3D"n">at</span><span class=3D"p">)</span> <span class=3D"p">{</span>=
 =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div c=
lass=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orRowInsertChar</span><span class=3D"p">(</span><span class=3D"n">erow</spa=
n> <span class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">=
,</span> <span class=3D"kt">int</span> <span class=3D"n">at</span><span cla=
ss=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D"n">c</span><=
span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=
=3D"p">}</span></div><div class=3D"line"></div><ins class=3D"line"><span cl=
ass=3D"kt">void</span> <span class=3D"nf">editorRowAppendString</span><span=
 class=3D"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</spa=
n><span class=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt"=
>char</span> <span class=3D"o">*</span><span class=3D"n">s</span><span clas=
s=3D"p">,</span> <span class=3D"kt">size_t</span> <span class=3D"n">len</sp=
an><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D=
"line">  <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span cl=
ass=3D"n">chars</span> <span class=3D"o">=3D</span> <span class=3D"n">reall=
oc</span><span class=3D"p">(</span><span class=3D"n">row</span><span class=
=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">,</span>=
 <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n=
">size</span> <span class=3D"o">+</span> <span class=3D"n">len</span> <span=
 class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</span=
></ins><ins class=3D"line">  <span class=3D"n">memcpy</span><span class=3D"=
p">(</span><span class=3D"o">&amp;</span><span class=3D"n">row</span><span =
class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">[</=
span><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=
=3D"n">size</span><span class=3D"p">],</span> <span class=3D"n">s</span><sp=
an class=3D"p">,</span> <span class=3D"n">len</span><span class=3D"p">);</s=
pan></ins><ins class=3D"line">  <span class=3D"n">row</span><span class=3D"=
o">-&gt;</span><span class=3D"n">size</span> <span class=3D"o">+=3D</span> =
<span class=3D"n">len</span><span class=3D"p">;</span></ins><ins class=3D"l=
ine">  <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span clas=
s=3D"n">chars</span><span class=3D"p">[</span><span class=3D"n">row</span><=
span class=3D"o">-&gt;</span><span class=3D"n">size</span><span class=3D"p"=
>]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span =
class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">editorUpd=
ateRow</span><span class=3D"p">(</span><span class=3D"n">row</span><span cl=
ass=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">dirty</span><span class=3D"o">++<=
/span><span class=3D"p">;</span></ins><ins class=3D"line"><span class=3D"p"=
>}</span></ins><div class=3D"line"></div><div class=3D"line folded"><span c=
lass=3D"kt">void</span> <span class=3D"nf">editorRowDelChar</span><span cla=
ss=3D"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><s=
pan class=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int=
</span> <span class=3D"n">at</span><span class=3D"p">)</span> <span class=
=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"lin=
e"></div><div class=3D"line folded"><span class=3D"cm">/*** editor operatio=
ns ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** file=
 i/o ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** ap=
pend buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** output ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** input ***/</span></div><div class=3D"line folded"><span class=3D"cm">/=
*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>The row=E2=80=99s new size is <code>row-&gt;size + len + 1</code> (inclu=
ding the null byte), so first
we allocate that much memory for <code>row-&gt;chars</code>. Then we simply=
 <code>memcpy()</code> the
given string to the end of the contents of <code>row-&gt;chars</code>. We u=
pdate <code>row-&gt;size</code>,
call <code>editorUpdateRow()</code> as usual, and increment <code>E.dirty</=
code> as usual.</p>

<p>Now we=E2=80=99re ready to get <code>editorDelChar()</code> to handle th=
e case where the cursor is
at the beginning of a line.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/del-char-row/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 121</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/del-char-row">del-char-row</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** editor operations ***/</span></div><div class=3D"line"=
></div><div class=3D"line folded"><span class=3D"kt">void</span> <span clas=
s=3D"nf">editorInsertChar</span><span class=3D"p">(</span><span class=3D"kt=
">int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"l=
ine"></div><div class=3D"line"><span class=3D"kt">void</span> <span class=
=3D"nf">editorDelChar</span><span class=3D"p">()</span> <span class=3D"p">{=
</span></div><div class=3D"line">  <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">cy</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D=
"p">)</span> <span class=3D"k">return</span><span class=3D"p">;</span></div=
><ins class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx<=
/span> <span class=3D"o">=3D=3D</span> <span class=3D"mi">0</span> <span cl=
ass=3D"o">&amp;&amp;</span> <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">cy</span> <span class=3D"o">=3D=3D</span> <span clas=
s=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"k">return</span>=
<span class=3D"p">;</span></ins><div class=3D"line"></div><div class=3D"lin=
e">  <span class=3D"n">erow</span> <span class=3D"o">*</span><span class=3D=
"n">row</span> <span class=3D"o">=3D</span> <span class=3D"o">&amp;</span><=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</s=
pan><span class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">cy</span><span class=3D"p">];</span></div><div cla=
ss=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span><span c=
lass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <s=
pan class=3D"o">&gt;</span> <span class=3D"mi">0</span><span class=3D"p">)<=
/span> <span class=3D"p">{</span></div><div class=3D"line">    <span class=
=3D"n">editorRowDelChar</span><span class=3D"p">(</span><span class=3D"n">r=
ow</span><span class=3D"p">,</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">-</span> <span=
 class=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">=
    <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">c=
x</span><span class=3D"o">--</span><span class=3D"p">;</span></div><ins cla=
ss=3D"line">  <span class=3D"p">}</span> <span class=3D"k">else</span> <spa=
n class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">-</span> =
<span class=3D"mi">1</span><span class=3D"p">].</span><span class=3D"n">siz=
e</span><span class=3D"p">;</span></ins><ins class=3D"line">    <span class=
=3D"n">editorRowAppendString</span><span class=3D"p">(</span><span class=3D=
"o">&amp;</span><span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">-</sp=
an> <span class=3D"mi">1</span><span class=3D"p">],</span> <span class=3D"n=
">row</span><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><sp=
an class=3D"p">,</span> <span class=3D"n">row</span><span class=3D"o">-&gt;=
</span><span class=3D"n">size</span><span class=3D"p">);</span></ins><ins c=
lass=3D"line">    <span class=3D"n">editorDelRow</span><span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>cy</span><span class=3D"p">);</span></ins><ins class=3D"line">    <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span><spa=
n class=3D"o">--</span><span class=3D"p">;</span></ins><div class=3D"line">=
  <span class=3D"p">}</span></div><div class=3D"line"><span class=3D"p">}</=
span></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded"><s=
pan class=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><s=
pan class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><sp=
an class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>If the cursor is at the beginning of the <em>first</em> line, then there=
=E2=80=99s nothing to
do, so we <code>return</code> immediately. Otherwise, if we find that <code=
>E.cx =3D=3D 0</code>, we call
<code>editorRowAppendString()</code> and then <code>editorDelRow()</code> a=
s we planned. <code>row</code> points
to the row we are deleting, so we append <code>row-&gt;chars</code> to the =
previous row, and
then delete the row that <code>E.cy</code> is on. We set <code>E.cx</code> =
to the end of the contents
of the previous row before appending to that row. That way, the cursor will=
 end
up at the point where the two lines joined.</p>

<p>Notice that pressing the <kbd>Delete</kbd> key at the end of a line work=
s as
the user would expect, joining the current line with the next line. This is
because moving the cursor to the right at the end of a line moves it to the
beginning of the next line. So making the <kbd>Delete</kbd> key an alias fo=
r
the <kbd>=E2=86=92</kbd> key followed by the <kbd>Backspace</kbd> key still=
 works.</p>
<h2 id=3D"the-enter-key"><a href=3D"https://viewsourcecode.org/snaptoken/ki=
lo/05.aTextEditor.html#the-enter-key">The <kbd>Enter</kbd> key</a></h2>

<p>The last editor operation we have to implement is the <kbd>Enter</kbd> k=
ey. The
<kbd>Enter</kbd> key allows the user to insert new lines into the text, or
split a line into two lines. The first thing we need to do is rename the
<code>editorAppendRow(...)</code> function to <code>editorInsertRow(int at,=
 ...)</code>. It will now
be able to insert a row at the index specified by the new <code>at</code> a=
rgument.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/append-to-insert/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 122</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/append-to-insert">append-to-insert</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=
=3D"cm">/*** row operations ***/</span></div><div class=3D"line"></div><div=
 class=3D"line folded"><span class=3D"kt">int</span> <span class=3D"nf">edi=
torRowCxToRx</span><span class=3D"p">(</span><span class=3D"n">erow</span> =
<span class=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</=
span> <span class=3D"kt">int</span> <span class=3D"n">cx</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">editorUpdateRow</span><span class=3D=
"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><span c=
lass=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><ins cl=
ass=3D"line"><span class=3D"kt">void</span> <span class=3D"n">editorInsertR=
ow</span><span class=3D"p">(</span><span class=3D"kt">int</span> <span clas=
s=3D"n">at</span><span class=3D"p">,</span> <span class=3D"kt">char</span> =
<span class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</sp=
an> <span class=3D"kt">size_t</span> <span class=3D"n">len</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">  <spa=
n class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">at</spa=
n> <span class=3D"o">&lt;</span> <span class=3D"mi">0</span> <span class=3D=
"o">||</span> <span class=3D"n">at</span> <span class=3D"o">&gt;</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows<=
/span><span class=3D"p">)</span> <span class=3D"k">return</span><span class=
=3D"p">;</span></ins><ins class=3D"line"></ins><ins class=3D"line">  <span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span> =
<span class=3D"o">=3D</span> <span class=3D"n">realloc</span><span class=3D=
"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">row</span><span class=3D"p">,</span> <span class=3D"k">sizeof</span>=
<span class=3D"p">(</span><span class=3D"n">erow</span><span class=3D"p">)<=
/span> <span class=3D"o">*</span> <span class=3D"p">(</span><span class=3D"=
n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span> <span=
 class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">));</spa=
n></ins><ins class=3D"line">  <span class=3D"n">memmove</span><span class=
=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span=
><span class=3D"n">at</span> <span class=3D"o">+</span> <span class=3D"mi">=
1</span><span class=3D"p">],</span> <span class=3D"o">&amp;</span><span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><spa=
n class=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">],</span=
> <span class=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n=
">erow</span><span class=3D"p">)</span> <span class=3D"o">*</span> <span cl=
ass=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">numrows</span> <span class=3D"o">-</span> <span class=3D"n">at=
</span><span class=3D"p">));</span></ins><div class=3D"line"></div><del cla=
ss=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">at</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">numrows</span><span class=3D"p">;</span></del><div cla=
ss=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span cla=
ss=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">at</span><sp=
an class=3D"p">].</span><span class=3D"n">size</span> <span class=3D"o">=3D=
</span> <span class=3D"n">len</span><span class=3D"p">;</span></div><div cl=
ass=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">at</span><s=
pan class=3D"p">].</span><span class=3D"n">chars</span> <span class=3D"o">=
=3D</span> <span class=3D"n">malloc</span><span class=3D"p">(</span><span c=
lass=3D"n">len</span> <span class=3D"o">+</span> <span class=3D"mi">1</span=
><span class=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">m=
emcpy</span><span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><span =
class=3D"n">at</span><span class=3D"p">].</span><span class=3D"n">chars</sp=
an><span class=3D"p">,</span> <span class=3D"n">s</span><span class=3D"p">,=
</span> <span class=3D"n">len</span><span class=3D"p">);</span></div><div c=
lass=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">at</span><=
span class=3D"p">].</span><span class=3D"n">chars</span><span class=3D"p">[=
</span><span class=3D"n">len</span><span class=3D"p">]</span> <span class=
=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span class=3D"p">;</span><=
/div><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p"=
>[</span><span class=3D"n">at</span><span class=3D"p">].</span><span class=
=3D"n">rsize</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span=
><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"=
p">[</span><span class=3D"n">at</span><span class=3D"p">].</span><span clas=
s=3D"n">render</span> <span class=3D"o">=3D</span> <span class=3D"nb">NULL<=
/span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"=
n">editorUpdateRow</span><span class=3D"p">(</span><span class=3D"o">&amp;<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>row</span><span class=3D"p">[</span><span class=3D"n">at</span><span class=
=3D"p">]);</span></div><div class=3D"line"></div><div class=3D"line">  <spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</=
span><span class=3D"o">++</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">dirty</span><span class=3D"o">++</span><span class=3D"p">;</span></d=
iv><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line folded"><span class=3D"kt">void</span> <span class=
=3D"n">editorFreeRow</span><span class=3D"p">(</span><span class=3D"n">erow=
</span> <span class=3D"o">*</span><span class=3D"n">row</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"n">editorDelRow</span><span class=3D"p">=
(</span><span class=3D"kt">int</span> <span class=3D"n">at</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</=
span></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"n">editorRowInsertChar</span><span class=
=3D"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><spa=
n class=3D"n">row</span><span class=3D"p">,</span> <span class=3D"kt">int</=
span> <span class=3D"n">at</span><span class=3D"p">,</span> <span class=3D"=
kt">int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D=
"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <spa=
n class=3D"n">editorRowAppendString</span><span class=3D"p">(</span><span c=
lass=3D"n">erow</span> <span class=3D"o">*</span><span class=3D"n">row</spa=
n><span class=3D"p">,</span> <span class=3D"kt">char</span> <span class=3D"=
o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> <span class=
=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D"p">)</span=
> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div=
 class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</s=
pan> <span class=3D"n">editorRowDelChar</span><span class=3D"p">(</span><sp=
an class=3D"n">erow</span> <span class=3D"o">*</span><span class=3D"n">row<=
/span><span class=3D"p">,</span> <span class=3D"kt">int</span> <span class=
=3D"n">at</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"cm">/*** editor operations ***/</span></div=
><div class=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></d=
iv><div class=3D"line folded"><span class=3D"cm">/*** append buffer ***/</s=
pan></div><div class=3D"line folded"><span class=3D"cm">/*** output ***/</s=
pan></div><div class=3D"line folded"><span class=3D"cm">/*** input ***/</sp=
an></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/</span=
></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c0">=E2=99=8F=EF=B8=8E doesn=E2=80=99t compile</di=
v>
</div>
</div>


<p>Much like <code>editorRowInsertChar()</code>, we first validate <code>at=
</code>, then allocate memory
for one more <code>erow</code>, and use <code>memmove()</code> to make room=
 at the specified index
for the new row.</p>

<p>We also delete the old <code>int at =3D ...</code> line, since <code>at<=
/code> is now being passed in
as an argument.</p>

<p>We now have to replace all calls to <code>editorAppendRow(...)</code> wi=
th calls to
<code>editorInsertRow(E.numrows, ...)</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/use-insert-row/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 123</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/use-insert-row">use-insert-row</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** editor operations ***/</span></div><div class=3D"line"=
></div><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf=
">editorInsertChar</span><span class=3D"p">(</span><span class=3D"kt">int</=
span> <span class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"p=
">{</span></div><div class=3D"line">  <span class=3D"k">if</span> <span cla=
ss=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cy</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><ins class=3D"line">    <sp=
an class=3D"n">editorInsertRow</span><span class=3D"p">(</span><span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">,</span> <span class=3D"s">""</span><span class=3D"p">,</sp=
an> <span class=3D"mi">0</span><span class=3D"p">);</span></ins><div class=
=3D"line">  <span class=3D"p">}</span></div><div class=3D"line">  <span cla=
ss=3D"n">editorRowInsertChar</span><span class=3D"p">(</span><span class=3D=
"o">&amp;</span><span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"p">],</sp=
an> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">c=
x</span><span class=3D"p">,</span> <span class=3D"n">c</span><span class=3D=
"p">);</span></div><div class=3D"line">  <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">cx</span><span class=3D"o">++</span><sp=
an class=3D"p">;</span></div><div class=3D"line"><span class=3D"p">}</span>=
</div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"k=
t">void</span> <span class=3D"nf">editorDelChar</span><span class=3D"p">()<=
/span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div=
><div class=3D"line"></div><div class=3D"line"><span class=3D"cm">/*** file=
 i/o ***/</span></div><div class=3D"line"></div><div class=3D"line folded">=
<span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"nf"=
>editorRowsToString</span><span class=3D"p">(</span><span class=3D"kt">int<=
/span> <span class=3D"o">*</span><span class=3D"n">buflen</span><span class=
=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</s=
pan></div><div class=3D"line"></div><div class=3D"line"><span class=3D"kt">=
void</span> <span class=3D"nf">editorOpen</span><span class=3D"p">(</span><=
span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">f=
ilename</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><d=
iv class=3D"line">  <span class=3D"n">free</span><span class=3D"p">(</span>=
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">filen=
ame</span><span class=3D"p">);</span></div><div class=3D"line">  <span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">filename</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">strdup</span><span class=3D=
"p">(</span><span class=3D"n">filename</span><span class=3D"p">);</span></d=
iv><div class=3D"line"></div><div class=3D"line">  <span class=3D"kt">FILE<=
/span> <span class=3D"o">*</span><span class=3D"n">fp</span> <span class=3D=
"o">=3D</span> <span class=3D"n">fopen</span><span class=3D"p">(</span><spa=
n class=3D"n">filename</span><span class=3D"p">,</span> <span class=3D"s">"=
r"</span><span class=3D"p">);</span></div><div class=3D"line">  <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"o">!</span><span =
class=3D"n">fp</span><span class=3D"p">)</span> <span class=3D"n">die</span=
><span class=3D"p">(</span><span class=3D"s">"fopen"</span><span class=3D"p=
">);</span></div><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">line</span=
> <span class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D=
"p">;</span></div><div class=3D"line">  <span class=3D"kt">size_t</span> <s=
pan class=3D"n">linecap</span> <span class=3D"o">=3D</span> <span class=3D"=
mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span cla=
ss=3D"kt">ssize_t</span> <span class=3D"n">linelen</span><span class=3D"p">=
;</span></div><div class=3D"line">  <span class=3D"k">while</span> <span cl=
ass=3D"p">((</span><span class=3D"n">linelen</span> <span class=3D"o">=3D</=
span> <span class=3D"n">getline</span><span class=3D"p">(</span><span class=
=3D"o">&amp;</span><span class=3D"n">line</span><span class=3D"p">,</span> =
<span class=3D"o">&amp;</span><span class=3D"n">linecap</span><span class=
=3D"p">,</span> <span class=3D"n">fp</span><span class=3D"p">))</span> <spa=
n class=3D"o">!=3D</span> <span class=3D"o">-</span><span class=3D"mi">1</s=
pan><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=
=3D"line">    <span class=3D"k">while</span> <span class=3D"p">(</span><spa=
n class=3D"n">linelen</span> <span class=3D"o">&gt;</span> <span class=3D"m=
i">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"p">(</span><=
span class=3D"n">line</span><span class=3D"p">[</span><span class=3D"n">lin=
elen</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'\n'</=
span> <span class=3D"o">||</span></div><div class=3D"line">                =
           <span class=3D"n">line</span><span class=3D"p">[</span><span cla=
ss=3D"n">linelen</span> <span class=3D"o">-</span> <span class=3D"mi">1</sp=
an><span class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"sc">'\r'</span><span class=3D"p">))</span></div><div class=3D"line">   =
   <span class=3D"n">linelen</span><span class=3D"o">--</span><span class=
=3D"p">;</span></div><ins class=3D"line">    <span class=3D"n">editorInsert=
Row</span><span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">,</span> <=
span class=3D"n">line</span><span class=3D"p">,</span> <span class=3D"n">li=
nelen</span><span class=3D"p">);</span></ins><div class=3D"line">  <span cl=
ass=3D"p">}</span></div><div class=3D"line">  <span class=3D"n">free</span>=
<span class=3D"p">(</span><span class=3D"n">line</span><span class=3D"p">);=
</span></div><div class=3D"line">  <span class=3D"n">fclose</span><span cla=
ss=3D"p">(</span><span class=3D"n">fp</span><span class=3D"p">);</span></di=
v><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">dirty</span> <span class=3D"o">=3D</span> <span class=3D=
"mi">0</span><span class=3D"p">;</span></div><div class=3D"line"><span clas=
s=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded">=
<span class=3D"kt">void</span> <span class=3D"nf">editorSave</span><span cl=
ass=3D"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">=
}</span></div><div class=3D"line"></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded"><=
span class=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><=
span class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><s=
pan class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Now that we have <code>editorInsertRow()</code>, we=E2=80=99re ready to =
implement
<code>editorInsertNewline()</code>, which handles an <kbd>Enter</kbd> keypr=
ess.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/insert-newline/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 124</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/insert-newline">insert-newline</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** editor operations ***/</span></div><div class=3D"line"=
></div><div class=3D"line folded"><span class=3D"kt">void</span> <span clas=
s=3D"nf">editorInsertChar</span><span class=3D"p">(</span><span class=3D"kt=
">int</span> <span class=3D"n">c</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"l=
ine"></div><ins class=3D"line"><span class=3D"kt">void</span> <span class=
=3D"nf">editorInsertNewline</span><span class=3D"p">()</span> <span class=
=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"k">if</span> <spa=
n class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">cx</span> <span class=3D"o">=3D=3D</span> <span class=3D"m=
i">0</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins =
class=3D"line">    <span class=3D"n">editorInsertRow</span><span class=3D"p=
">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">cy</span><span class=3D"p">,</span> <span class=3D"s">""</span><span=
 class=3D"p">,</span> <span class=3D"mi">0</span><span class=3D"p">);</span=
></ins><ins class=3D"line">  <span class=3D"p">}</span> <span class=3D"k">e=
lse</span> <span class=3D"p">{</span></ins><ins class=3D"line">    <span cl=
ass=3D"n">erow</span> <span class=3D"o">*</span><span class=3D"n">row</span=
> <span class=3D"o">=3D</span> <span class=3D"o">&amp;</span><span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span cla=
ss=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cy</span><span class=3D"p">];</span></ins><ins class=3D"line"> =
   <span class=3D"n">editorInsertRow</span><span class=3D"p">(</span><span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <=
span class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">,</s=
pan> <span class=3D"o">&amp;</span><span class=3D"n">row</span><span class=
=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">[</span>=
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</s=
pan><span class=3D"p">],</span> <span class=3D"n">row</span><span class=3D"=
o">-&gt;</span><span class=3D"n">size</span> <span class=3D"o">-</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span=
><span class=3D"p">);</span></ins><ins class=3D"line">    <span class=3D"n"=
>row</span> <span class=3D"o">=3D</span> <span class=3D"o">&amp;</span><spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span=
><span class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">cy</span><span class=3D"p">];</span></ins><ins class=
=3D"line">    <span class=3D"n">row</span><span class=3D"o">-&gt;</span><sp=
an class=3D"n">size</span> <span class=3D"o">=3D</span> <span class=3D"n">E=
</span><span class=3D"p">.</span><span class=3D"n">cx</span><span class=3D"=
p">;</span></ins><ins class=3D"line">    <span class=3D"n">row</span><span =
class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">[</=
span><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=
=3D"n">size</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <=
span class=3D"sc">'\0'</span><span class=3D"p">;</span></ins><ins class=3D"=
line">    <span class=3D"n">editorUpdateRow</span><span class=3D"p">(</span=
><span class=3D"n">row</span><span class=3D"p">);</span></ins><ins class=3D=
"line">  <span class=3D"p">}</span></ins><ins class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span c=
lass=3D"o">++</span><span class=3D"p">;</span></ins><ins class=3D"line">  <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</sp=
an> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"=
p">;</span></ins><ins class=3D"line"><span class=3D"p">}</span></ins><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</spa=
n> <span class=3D"nf">editorDelChar</span><span class=3D"p">()</span> <span=
 class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** file i/o=
 ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** append=
 buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 output ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 input ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** =
init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>If we=E2=80=99re at the beginning of a line, all we have to do is insert=
 a new blank
row before the line we=E2=80=99re on.</p>

<p>Otherwise, we have to split the line we=E2=80=99re on into two rows. Fir=
st we call
<code>editorInsertRow()</code> and pass it the characters on the current ro=
w that are to
the right of the cursor. That creates a new row after the current one, with=
 the
correct contents. Then we reassign the <code>row</code> pointer, because
<code>editorInsertRow()</code> calls <code>realloc()</code>, which might mo=
ve memory around on us and
invalidate the pointer (yikes). Then we truncate the current row=E2=80=99s =
contents by
setting its size to the position of the cursor, and we call
<code>editorUpdateRow()</code> on the truncated row. (<code>editorInsertRow=
()</code> already calls
<code>editorUpdateRow()</code> for the new row.)</p>

<p>In both cases, we increment <code>E.cy</code>, and set <code>E.cx</code>=
 to <code>0</code> to move the cursor to
the beginning of the row.</p>

<p>Finally, let=E2=80=99s actually map the <kbd>Enter</kbd> key to the
<code>editorInsertNewline()</code> operation.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/enter-key/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 125</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/enter-key">enter-key</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><=
div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><=
div class=3D"line"><span class=3D"cm">/*** input ***/</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> =
<span class=3D"nf">editorMoveCursor</span><span class=3D"p">(</span><span c=
lass=3D"kt">int</span> <span class=3D"n">key</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><di=
v class=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <=
span class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</span> <=
span class=3D"p">{</span></div><div class=3D"line">  <span class=3D"k">stat=
ic</span> <span class=3D"kt">int</span> <span class=3D"n">quit_times</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">KILO_QUIT_TIMES</span><span=
 class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line">  =
<span class=3D"kt">int</span> <span class=3D"n">c</span> <span class=3D"o">=
=3D</span> <span class=3D"n">editorReadKey</span><span class=3D"p">();</spa=
n></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">s=
witch</span> <span class=3D"p">(</span><span class=3D"n">c</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">    <s=
pan class=3D"k">case</span> <span class=3D"sc">'\r'</span><span class=3D"p"=
>:</span></div><ins class=3D"line">      <span class=3D"n">editorInsertNewl=
ine</span><span class=3D"p">();</span></ins><div class=3D"line">      <span=
 class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line=
"></div><div class=3D"line">    <span class=3D"k">case</span> <span class=
=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'q'</spa=
n><span class=3D"p">):</span></div><div class=3D"line">      <span class=3D=
"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">dirty</span> <span class=3D"o">&amp;&amp=
;</span> <span class=3D"n">quit_times</span> <span class=3D"o">&gt;</span> =
<span class=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><div class=3D"line">        <span class=3D"n">editorSetStatusMes=
sage</span><span class=3D"p">(</span><span class=3D"s">"WARNING!!! File has=
 unsaved changes. "</span></div><div class=3D"line">          <span class=
=3D"s">"Press Ctrl-Q %d more times to quit."</span><span class=3D"p">,</spa=
n> <span class=3D"n">quit_times</span><span class=3D"p">);</span></div><div=
 class=3D"line">        <span class=3D"n">quit_times</span><span class=3D"o=
">--</span><span class=3D"p">;</span></div><div class=3D"line">        <spa=
n class=3D"k">return</span><span class=3D"p">;</span></div><div class=3D"li=
ne">      <span class=3D"p">}</span></div><div class=3D"line">      <span c=
lass=3D"n">write</span><span class=3D"p">(</span><span class=3D"n">STDOUT_F=
ILENO</span><span class=3D"p">,</span> <span class=3D"s">"</span><span clas=
s=3D"se">\x1b</span><span class=3D"s">[2J"</span><span class=3D"p">,</span>=
 <span class=3D"mi">4</span><span class=3D"p">);</span></div><div class=3D"=
line">      <span class=3D"n">write</span><span class=3D"p">(</span><span c=
lass=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s"=
>"</span><span class=3D"se">\x1b</span><span class=3D"s">[H"</span><span cl=
ass=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</span></=
div><div class=3D"line">      <span class=3D"n">exit</span><span class=3D"p=
">(</span><span class=3D"mi">0</span><span class=3D"p">);</span></div><div =
class=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</spa=
n></div><div class=3D"line"></div><div class=3D"line">    <span class=3D"k"=
>case</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</span><sp=
an class=3D"sc">'s'</span><span class=3D"p">):</span></div><div class=3D"li=
ne">      <span class=3D"n">editorSave</span><span class=3D"p">();</span></=
div><div class=3D"line">      <span class=3D"k">break</span><span class=3D"=
p">;</span></div><div class=3D"line"></div><div class=3D"line">    <span cl=
ass=3D"k">case</span> <span class=3D"n">HOME_KEY</span><span class=3D"p">:<=
/span></div><div class=3D"line">      <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line"=
>      <span class=3D"k">break</span><span class=3D"p">;</span></div><div c=
lass=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span> <=
span class=3D"n">END_KEY</span><span class=3D"p">:</span></div><div class=
=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</span><span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> =
<span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">numrows</span><span class=3D"p">)</span></div><div=
 class=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">row</span><span class=
=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">cy</span><span class=3D"p">].</span><span class=3D"n">size</span>=
<span class=3D"p">;</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line"></div><div=
 class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">BACKSPA=
CE</span><span class=3D"p">:</span></div><div class=3D"line">    <span clas=
s=3D"k">case</span> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</s=
pan><span class=3D"sc">'h'</span><span class=3D"p">):</span></div><div clas=
s=3D"line">    <span class=3D"k">case</span> <span class=3D"n">DEL_KEY</spa=
n><span class=3D"p">:</span></div><div class=3D"line">      <span class=3D"=
k">if</span> <span class=3D"p">(</span><span class=3D"n">c</span> <span cla=
ss=3D"o">=3D=3D</span> <span class=3D"n">DEL_KEY</span><span class=3D"p">)<=
/span> <span class=3D"n">editorMoveCursor</span><span class=3D"p">(</span><=
span class=3D"n">ARROW_RIGHT</span><span class=3D"p">);</span></div><div cl=
ass=3D"line">      <span class=3D"n">editorDelChar</span><span class=3D"p">=
();</span></div><div class=3D"line">      <span class=3D"k">break</span><sp=
an class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line">=
    <span class=3D"k">case</span> <span class=3D"n">PAGE_UP</span><span cla=
ss=3D"p">:</span></div><div class=3D"line">    <span class=3D"k">case</span=
> <span class=3D"n">PAGE_DOWN</span><span class=3D"p">:</span></div><div cl=
ass=3D"line">      <span class=3D"p">{</span></div><div class=3D"line">    =
    <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n"=
>c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_UP</span><=
span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"lin=
e">          <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">rowoff</span><span class=3D"p">;<=
/span></div><div class=3D"line">        <span class=3D"p">}</span> <span cl=
ass=3D"k">else</span> <span class=3D"k">if</span> <span class=3D"p">(</span=
><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"=
n">PAGE_DOWN</span><span class=3D"p">)</span> <span class=3D"p">{</span></d=
iv><div class=3D"line">          <span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span>=
 <span class=3D"o">+</span> <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">screenrows</span> <span class=3D"o">-</span> <span c=
lass=3D"mi">1</span><span class=3D"p">;</span></div><div class=3D"line">   =
       <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span cla=
ss=3D"o">&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">numrows</span><span class=3D"p">)</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">numrows</span><span class=3D"p">;</span></div><div class=3D"li=
ne">        <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line">        <span class=3D"kt">int</span> <span class=3D"n">time=
s</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</span=
></div><div class=3D"line">        <span class=3D"k">while</span> <span cla=
ss=3D"p">(</span><span class=3D"n">times</span><span class=3D"o">--</span><=
span class=3D"p">)</span></div><div class=3D"line">          <span class=3D=
"n">editorMoveCursor</span><span class=3D"p">(</span><span class=3D"n">c</s=
pan> <span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_UP</span> <span=
 class=3D"o">?</span> <span class=3D"n">ARROW_UP</span> <span class=3D"o">:=
</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">);</span></div=
><div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"li=
ne">      <span class=3D"k">break</span><span class=3D"p">;</span></div><di=
v class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span=
> <span class=3D"n">ARROW_UP</span><span class=3D"p">:</span></div><div cla=
ss=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_DOWN<=
/span><span class=3D"p">:</span></div><div class=3D"line">    <span class=
=3D"k">case</span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</=
span></div><div class=3D"line">    <span class=3D"k">case</span> <span clas=
s=3D"n">ARROW_RIGHT</span><span class=3D"p">:</span></div><div class=3D"lin=
e">      <span class=3D"n">editorMoveCursor</span><span class=3D"p">(</span=
><span class=3D"n">c</span><span class=3D"p">);</span></div><div class=3D"l=
ine">      <span class=3D"k">break</span><span class=3D"p">;</span></div><d=
iv class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</spa=
n> <span class=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=
=3D"sc">'l'</span><span class=3D"p">):</span></div><div class=3D"line">    =
<span class=3D"k">case</span> <span class=3D"sc">'\x1b'</span><span class=
=3D"p">:</span></div><div class=3D"line">      <span class=3D"k">break</spa=
n><span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"l=
ine">    <span class=3D"nl">default:</span></div><div class=3D"line">      =
<span class=3D"n">editorInsertChar</span><span class=3D"p">(</span><span cl=
ass=3D"n">c</span><span class=3D"p">);</span></div><div class=3D"line">    =
  <span class=3D"k">break</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line">  <span class=3D"n">quit_times</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">KILO_QUIT_TIMES</span><span class=3D"p">;</span></=
div><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"line"=
></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/</span><=
/div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>That concludes all of the text editing operations we are going to implem=
ent. If
you wish, and if you are brave enough, you may now start using the editor t=
o
modify its own code for the rest of the tutorial. If you do, I suggest maki=
ng
regular backups of your work (using <code>git</code> or similar) in case yo=
u run into bugs
in the editor.</p>
<h2 id=3D"save-as"><a href=3D"https://viewsourcecode.org/snaptoken/kilo/05.=
aTextEditor.html#save-as">Save as=E2=80=A6</a></h2>

<p>Currently, when the user runs <code>./kilo</code> with no arguments, the=
y get a blank file
to edit but have no way of saving. We need a way of prompting the user to i=
nput
a filename when saving a new file. Let=E2=80=99s make an <code>editorPrompt=
()</code> function that
displays a prompt in the status bar, and lets the user input a line of text
after the prompt.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/prompt/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 126</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/prompt">prompt</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line"><span class=3D"cm=
">/*** prototypes ***/</span></div><div class=3D"line"></div><div class=3D"=
line"><span class=3D"kt">void</span> <span class=3D"n">editorSetStatusMessa=
ge</span><span class=3D"p">(</span><span class=3D"k">const</span> <span cla=
ss=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">fmt</span=
><span class=3D"p">,</span> <span class=3D"p">...);</span></div><ins class=
=3D"line"><span class=3D"kt">void</span> <span class=3D"n">editorRefreshScr=
een</span><span class=3D"p">();</span></ins><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"cm">/*** terminal ***/</span></div><di=
v class=3D"line folded"><span class=3D"cm">/*** row operations ***/</span><=
/div><div class=3D"line folded"><span class=3D"cm">/*** editor operations *=
**/</span></div><div class=3D"line folded"><span class=3D"cm">/*** file i/o=
 ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** append=
 buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">/***=
 output ***/</span></div><div class=3D"line"><span class=3D"cm">/*** input =
***/</span></div><div class=3D"line"></div><ins class=3D"line"><span class=
=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"nf">editorProm=
pt</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span cla=
ss=3D"o">*</span><span class=3D"n">prompt</span><span class=3D"p">)</span> =
<span class=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"kt">si=
ze_t</span> <span class=3D"n">bufsize</span> <span class=3D"o">=3D</span> <=
span class=3D"mi">128</span><span class=3D"p">;</span></ins><ins class=3D"l=
ine">  <span class=3D"kt">char</span> <span class=3D"o">*</span><span class=
=3D"n">buf</span> <span class=3D"o">=3D</span> <span class=3D"n">malloc</sp=
an><span class=3D"p">(</span><span class=3D"n">bufsize</span><span class=3D=
"p">);</span></ins><ins class=3D"line"></ins><ins class=3D"line">  <span cl=
ass=3D"kt">size_t</span> <span class=3D"n">buflen</span> <span class=3D"o">=
=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></ins><ins =
class=3D"line">  <span class=3D"n">buf</span><span class=3D"p">[</span><spa=
n class=3D"mi">0</span><span class=3D"p">]</span> <span class=3D"o">=3D</sp=
an> <span class=3D"sc">'\0'</span><span class=3D"p">;</span></ins><ins clas=
s=3D"line"></ins><ins class=3D"line">  <span class=3D"k">while</span> <span=
 class=3D"p">(</span><span class=3D"mi">1</span><span class=3D"p">)</span> =
<span class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D"n">e=
ditorSetStatusMessage</span><span class=3D"p">(</span><span class=3D"n">pro=
mpt</span><span class=3D"p">,</span> <span class=3D"n">buf</span><span clas=
s=3D"p">);</span></ins><ins class=3D"line">    <span class=3D"n">editorRefr=
eshScreen</span><span class=3D"p">();</span></ins><ins class=3D"line"></ins=
><ins class=3D"line">    <span class=3D"kt">int</span> <span class=3D"n">c<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">editorReadKey</span><=
span class=3D"p">();</span></ins><ins class=3D"line">    <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"n">c</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"sc">'\r'</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span></ins><ins class=3D"line">      <span class=3D=
"k">if</span> <span class=3D"p">(</span><span class=3D"n">buflen</span> <sp=
an class=3D"o">!=3D</span> <span class=3D"mi">0</span><span class=3D"p">)</=
span> <span class=3D"p">{</span></ins><ins class=3D"line">        <span cla=
ss=3D"n">editorSetStatusMessage</span><span class=3D"p">(</span><span class=
=3D"s">""</span><span class=3D"p">);</span></ins><ins class=3D"line">      =
  <span class=3D"k">return</span> <span class=3D"n">buf</span><span class=
=3D"p">;</span></ins><ins class=3D"line">      <span class=3D"p">}</span></=
ins><ins class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">el=
se</span> <span class=3D"k">if</span> <span class=3D"p">(</span><span class=
=3D"o">!</span><span class=3D"n">iscntrl</span><span class=3D"p">(</span><s=
pan class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"o">&amp;&=
amp;</span> <span class=3D"n">c</span> <span class=3D"o">&lt;</span> <span =
class=3D"mi">128</span><span class=3D"p">)</span> <span class=3D"p">{</span=
></ins><ins class=3D"line">      <span class=3D"k">if</span> <span class=3D=
"p">(</span><span class=3D"n">buflen</span> <span class=3D"o">=3D=3D</span>=
 <span class=3D"n">bufsize</span> <span class=3D"o">-</span> <span class=3D=
"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><in=
s class=3D"line">        <span class=3D"n">bufsize</span> <span class=3D"o"=
>*=3D</span> <span class=3D"mi">2</span><span class=3D"p">;</span></ins><in=
s class=3D"line">        <span class=3D"n">buf</span> <span class=3D"o">=3D=
</span> <span class=3D"n">realloc</span><span class=3D"p">(</span><span cla=
ss=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"n">bufsize</sp=
an><span class=3D"p">);</span></ins><ins class=3D"line">      <span class=
=3D"p">}</span></ins><ins class=3D"line">      <span class=3D"n">buf</span>=
<span class=3D"p">[</span><span class=3D"n">buflen</span><span class=3D"o">=
++</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span clas=
s=3D"n">c</span><span class=3D"p">;</span></ins><ins class=3D"line">      <=
span class=3D"n">buf</span><span class=3D"p">[</span><span class=3D"n">bufl=
en</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span clas=
s=3D"sc">'\0'</span><span class=3D"p">;</span></ins><ins class=3D"line">   =
 <span class=3D"p">}</span></ins><ins class=3D"line">  <span class=3D"p">}<=
/span></ins><ins class=3D"line"><span class=3D"p">}</span></ins><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <=
span class=3D"nf">editorMoveCursor</span><span class=3D"p">(</span><span cl=
ass=3D"kt">int</span> <span class=3D"n">key</span><span class=3D"p">)</span=
> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div=
 class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</s=
pan> <span class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</s=
pan> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><=
div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/***=
 init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>The user=E2=80=99s input is stored in <code>buf</code>, which is a dynam=
ically allocated string
that we initalize to the empty string. We then enter an infinite loop that
repeatedly sets the status message, refreshes the screen, and waits for a
keypress to handle. The <code>prompt</code> is expected to be a format stri=
ng containing a
<code>%s</code>, which is where the user=E2=80=99s input will be displayed.=
</p>

<p>When the user presses <kbd>Enter</kbd>, and their input is not empty, th=
e
status message is cleared and their input is returned. Otherwise, when they
input a printable character, we append it to <code>buf</code>. If <code>buf=
len</code> has reached the
maximum capacity we allocated (stored in <code>bufsize</code>), then we dou=
ble <code>bufsize</code>
and allocate that amount of memory before appending to <code>buf</code>. We=
 also make sure
that <code>buf</code> ends with a <code>\0</code> character, because both <=
code>editorSetStatusMessage()</code>
and the caller of <code>editorPrompt()</code> will use it to know where the=
 string ends.</p>

<p>Notice that we have to make sure the input key isn=E2=80=99t one of the =
special keys in
the <code>editorKey</code> enum, which have high integer values. To do that=
, we test
whether the input key is in the range of a <code>char</code> by making sure=
 it is less
than <code>128</code>.</p>

<p>Now let=E2=80=99s prompt the user for a filename in <code>editorSave()</=
code>, when <code>E.filename</code>
is <code>NULL</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/save-as/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 127</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/save-as">save-as</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line"><span class=3D"cm=
">/*** prototypes ***/</span></div><div class=3D"line"></div><div class=3D"=
line"><span class=3D"kt">void</span> <span class=3D"n">editorSetStatusMessa=
ge</span><span class=3D"p">(</span><span class=3D"k">const</span> <span cla=
ss=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">fmt</span=
><span class=3D"p">,</span> <span class=3D"p">...);</span></div><div class=
=3D"line"><span class=3D"kt">void</span> <span class=3D"n">editorRefreshScr=
een</span><span class=3D"p">();</span></div><ins class=3D"line"><span class=
=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">editorPromp=
t</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span clas=
s=3D"o">*</span><span class=3D"n">prompt</span><span class=3D"p">);</span><=
/ins><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm=
">/*** terminal ***/</span></div><div class=3D"line folded"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line folded"><span c=
lass=3D"cm">/*** editor operations ***/</span></div><div class=3D"line"><sp=
an class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line"></div><d=
iv class=3D"line folded"><span class=3D"kt">char</span> <span class=3D"o">*=
</span><span class=3D"nf">editorRowsToString</span><span class=3D"p">(</spa=
n><span class=3D"kt">int</span> <span class=3D"o">*</span><span class=3D"n"=
>buflen</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=
=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D=
"line folded"><span class=3D"kt">void</span> <span class=3D"nf">editorOpen<=
/span><span class=3D"p">(</span><span class=3D"kt">char</span> <span class=
=3D"o">*</span><span class=3D"n">filename</span><span class=3D"p">)</span> =
<span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <spa=
n class=3D"nf">editorSave</span><span class=3D"p">()</span> <span class=3D"=
p">{</span></div><ins class=3D"line">  <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">filename</span> <span class=3D"o">=3D=3D</span> <span class=3D=
"nb">NULL</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins>=
<ins class=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">filename</span> <span class=3D"o">=3D</span> <span class=
=3D"n">editorPrompt</span><span class=3D"p">(</span><span class=3D"s">"Save=
 as: %s"</span><span class=3D"p">);</span></ins><ins class=3D"line">  <span=
 class=3D"p">}</span></ins><div class=3D"line"></div><div class=3D"line">  =
<span class=3D"kt">int</span> <span class=3D"n">len</span><span class=3D"p"=
>;</span></div><div class=3D"line">  <span class=3D"kt">char</span> <span c=
lass=3D"o">*</span><span class=3D"n">buf</span> <span class=3D"o">=3D</span=
> <span class=3D"n">editorRowsToString</span><span class=3D"p">(</span><spa=
n class=3D"o">&amp;</span><span class=3D"n">len</span><span class=3D"p">);<=
/span></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"=
kt">int</span> <span class=3D"n">fd</span> <span class=3D"o">=3D</span> <sp=
an class=3D"n">open</span><span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">filename</span><span class=
=3D"p">,</span> <span class=3D"n">O_RDWR</span> <span class=3D"o">|</span> =
<span class=3D"n">O_CREAT</span><span class=3D"p">,</span> <span class=3D"m=
o">0644</span><span class=3D"p">);</span></div><div class=3D"line">  <span =
class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">fd</span>=
 <span class=3D"o">!=3D</span> <span class=3D"o">-</span><span class=3D"mi"=
>1</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div cl=
ass=3D"line">    <span class=3D"k">if</span> <span class=3D"p">(</span><spa=
n class=3D"n">ftruncate</span><span class=3D"p">(</span><span class=3D"n">f=
d</span><span class=3D"p">,</span> <span class=3D"n">len</span><span class=
=3D"p">)</span> <span class=3D"o">!=3D</span> <span class=3D"o">-</span><sp=
an class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</spa=
n></div><div class=3D"line">      <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">write</span><span class=3D"p">(</span><spa=
n class=3D"n">fd</span><span class=3D"p">,</span> <span class=3D"n">buf</sp=
an><span class=3D"p">,</span> <span class=3D"n">len</span><span class=3D"p"=
>)</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">len</span><span=
 class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line"> =
       <span class=3D"n">close</span><span class=3D"p">(</span><span class=
=3D"n">fd</span><span class=3D"p">);</span></div><div class=3D"line">      =
  <span class=3D"n">free</span><span class=3D"p">(</span><span class=3D"n">=
buf</span><span class=3D"p">);</span></div><div class=3D"line">        <spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">dirty</sp=
an> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"=
p">;</span></div><div class=3D"line">        <span class=3D"n">editorSetSta=
tusMessage</span><span class=3D"p">(</span><span class=3D"s">"%d bytes writ=
ten to disk"</span><span class=3D"p">,</span> <span class=3D"n">len</span><=
span class=3D"p">);</span></div><div class=3D"line">        <span class=3D"=
k">return</span><span class=3D"p">;</span></div><div class=3D"line">      <=
span class=3D"p">}</span></div><div class=3D"line">    <span class=3D"p">}<=
/span></div><div class=3D"line">    <span class=3D"n">close</span><span cla=
ss=3D"p">(</span><span class=3D"n">fd</span><span class=3D"p">);</span></di=
v><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"line"=
></div><div class=3D"line">  <span class=3D"n">free</span><span class=3D"p"=
>(</span><span class=3D"n">buf</span><span class=3D"p">);</span></div><div =
class=3D"line">  <span class=3D"n">editorSetStatusMessage</span><span class=
=3D"p">(</span><span class=3D"s">"Can't save! I/O error: %s"</span><span cl=
ass=3D"p">,</span> <span class=3D"n">strerror</span><span class=3D"p">(</sp=
an><span class=3D"n">errno</span><span class=3D"p">));</span></div><div cla=
ss=3D"line"><span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></di=
v><div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></di=
v><div class=3D"line folded"><span class=3D"cm">/*** input ***/</span></div=
><div class=3D"line folded"><span class=3D"cm">/*** init ***/</span></div><=
/code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>Great, we now have basic =E2=80=9CSave as=E2=80=A6=E2=80=9D functionalit=
y. Next, let=E2=80=99s allow the user=20
to press <kbd>Escape</kbd> to cancel the input prompt.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/prompt-escape/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 128</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/prompt-escape">prompt-escape</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><=
div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><=
div class=3D"line"><span class=3D"cm">/*** input ***/</span></div><div clas=
s=3D"line"></div><div class=3D"line"><span class=3D"kt">char</span> <span c=
lass=3D"o">*</span><span class=3D"nf">editorPrompt</span><span class=3D"p">=
(</span><span class=3D"kt">char</span> <span class=3D"o">*</span><span clas=
s=3D"n">prompt</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/div><div class=3D"line">  <span class=3D"kt">size_t</span> <span class=3D"=
n">bufsize</span> <span class=3D"o">=3D</span> <span class=3D"mi">128</span=
><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">c=
har</span> <span class=3D"o">*</span><span class=3D"n">buf</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">malloc</span><span class=3D"p">(</spa=
n><span class=3D"n">bufsize</span><span class=3D"p">);</span></div><div cla=
ss=3D"line"></div><div class=3D"line">  <span class=3D"kt">size_t</span> <s=
pan class=3D"n">buflen</span> <span class=3D"o">=3D</span> <span class=3D"m=
i">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span clas=
s=3D"n">buf</span><span class=3D"p">[</span><span class=3D"mi">0</span><spa=
n class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'=
</span><span class=3D"p">;</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"k">while</span> <span class=3D"p">(</span><span =
class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/div><div class=3D"line">    <span class=3D"n">editorSetStatusMessage</span=
><span class=3D"p">(</span><span class=3D"n">prompt</span><span class=3D"p"=
>,</span> <span class=3D"n">buf</span><span class=3D"p">);</span></div><div=
 class=3D"line">    <span class=3D"n">editorRefreshScreen</span><span class=
=3D"p">();</span></div><div class=3D"line"></div><div class=3D"line">    <s=
pan class=3D"kt">int</span> <span class=3D"n">c</span> <span class=3D"o">=
=3D</span> <span class=3D"n">editorReadKey</span><span class=3D"p">();</spa=
n></div><ins class=3D"line">    <span class=3D"k">if</span> <span class=3D"=
p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span=
 class=3D"sc">'\x1b'</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></ins><ins class=3D"line">      <span class=3D"n">editorSetStatusMessa=
ge</span><span class=3D"p">(</span><span class=3D"s">""</span><span class=
=3D"p">);</span></ins><ins class=3D"line">      <span class=3D"n">free</spa=
n><span class=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">)=
;</span></ins><ins class=3D"line">      <span class=3D"k">return</span> <sp=
an class=3D"nb">NULL</span><span class=3D"p">;</span></ins><ins class=3D"li=
ne">    <span class=3D"p">}</span> <span class=3D"k">else</span> <span clas=
s=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">c</span> <spa=
n class=3D"o">=3D=3D</span> <span class=3D"sc">'\r'</span><span class=3D"p"=
>)</span> <span class=3D"p">{</span></ins><div class=3D"line">      <span c=
lass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">buflen</sp=
an> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span class=3D=
"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">        <s=
pan class=3D"n">editorSetStatusMessage</span><span class=3D"p">(</span><spa=
n class=3D"s">""</span><span class=3D"p">);</span></div><div class=3D"line"=
>        <span class=3D"k">return</span> <span class=3D"n">buf</span><span =
class=3D"p">;</span></div><div class=3D"line">      <span class=3D"p">}</sp=
an></div><div class=3D"line">    <span class=3D"p">}</span> <span class=3D"=
k">else</span> <span class=3D"k">if</span> <span class=3D"p">(</span><span =
class=3D"o">!</span><span class=3D"n">iscntrl</span><span class=3D"p">(</sp=
an><span class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"o">&=
amp;&amp;</span> <span class=3D"n">c</span> <span class=3D"o">&lt;</span> <=
span class=3D"mi">128</span><span class=3D"p">)</span> <span class=3D"p">{<=
/span></div><div class=3D"line">      <span class=3D"k">if</span> <span cla=
ss=3D"p">(</span><span class=3D"n">buflen</span> <span class=3D"o">=3D=3D</=
span> <span class=3D"n">bufsize</span> <span class=3D"o">-</span> <span cla=
ss=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span></di=
v><div class=3D"line">        <span class=3D"n">bufsize</span> <span class=
=3D"o">*=3D</span> <span class=3D"mi">2</span><span class=3D"p">;</span></d=
iv><div class=3D"line">        <span class=3D"n">buf</span> <span class=3D"=
o">=3D</span> <span class=3D"n">realloc</span><span class=3D"p">(</span><sp=
an class=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"n">bufsi=
ze</span><span class=3D"p">);</span></div><div class=3D"line">      <span c=
lass=3D"p">}</span></div><div class=3D"line">      <span class=3D"n">buf</s=
pan><span class=3D"p">[</span><span class=3D"n">buflen</span><span class=3D=
"o">++</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span =
class=3D"n">c</span><span class=3D"p">;</span></div><div class=3D"line">   =
   <span class=3D"n">buf</span><span class=3D"p">[</span><span class=3D"n">=
buflen</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span =
class=3D"sc">'\0'</span><span class=3D"p">;</span></div><div class=3D"line"=
>    <span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"p=
">}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div cl=
ass=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span=
> <span class=3D"n">editorMoveCursor</span><span class=3D"p">(</span><span =
class=3D"kt">int</span> <span class=3D"n">key</span><span class=3D"p">)</sp=
an> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void<=
/span> <span class=3D"n">editorProcessKeypress</span><span class=3D"p">()</=
span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div>=
<div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/**=
* init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>When an input prompt is cancelled, we <code>free()</code> the <code>buf<=
/code> ourselves and return
<code>NULL</code>. So let=E2=80=99s handle a return value of <code>NULL</co=
de> in <code>editorSave()</code> by aborting
the save operation and displaying a =E2=80=9CSave aborted=E2=80=9D message =
to the user.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/abort-save/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 129</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/abort-save">abort-save</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"l=
ine"></div><div class=3D"line folded"><span class=3D"kt">char</span> <span =
class=3D"o">*</span><span class=3D"nf">editorRowsToString</span><span class=
=3D"p">(</span><span class=3D"kt">int</span> <span class=3D"o">*</span><spa=
n class=3D"n">buflen</span><span class=3D"p">)</span> <span class=3D"p">{</=
span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><=
div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf"=
>editorOpen</span><span class=3D"p">(</span><span class=3D"kt">char</span> =
<span class=3D"o">*</span><span class=3D"n">filename</span><span class=3D"p=
">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span><=
/div><div class=3D"line"></div><div class=3D"line"><span class=3D"kt">void<=
/span> <span class=3D"nf">editorSave</span><span class=3D"p">()</span> <spa=
n class=3D"p">{</span></div><div class=3D"line">  <span class=3D"k">if</spa=
n> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">filename</span> <span class=3D"o">=3D=3D</span> <sp=
an class=3D"nb">NULL</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><ins class=3D"line">    <span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">filename</span> <span class=3D"o">=3D</span> =
<span class=3D"n">editorPrompt</span><span class=3D"p">(</span><span class=
=3D"s">"Save as: %s (ESC to cancel)"</span><span class=3D"p">);</span></ins=
><ins class=3D"line">    <span class=3D"k">if</span> <span class=3D"p">(</s=
pan><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">f=
ilename</span> <span class=3D"o">=3D=3D</span> <span class=3D"nb">NULL</spa=
n><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"=
line">      <span class=3D"n">editorSetStatusMessage</span><span class=3D"p=
">(</span><span class=3D"s">"Save aborted"</span><span class=3D"p">);</span=
></ins><ins class=3D"line">      <span class=3D"k">return</span><span class=
=3D"p">;</span></ins><ins class=3D"line">    <span class=3D"p">}</span></in=
s><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"line"=
></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n=
">len</span><span class=3D"p">;</span></div><div class=3D"line">  <span cla=
ss=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">buf</span=
> <span class=3D"o">=3D</span> <span class=3D"n">editorRowsToString</span><=
span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">le=
n</span><span class=3D"p">);</span></div><div class=3D"line"></div><div cla=
ss=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">fd</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">open</span><span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>filename</span><span class=3D"p">,</span> <span class=3D"n">O_RDWR</span> =
<span class=3D"o">|</span> <span class=3D"n">O_CREAT</span><span class=3D"p=
">,</span> <span class=3D"mo">0644</span><span class=3D"p">);</span></div><=
div class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span>=
<span class=3D"n">fd</span> <span class=3D"o">!=3D</span> <span class=3D"o"=
>-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">if</span> <s=
pan class=3D"p">(</span><span class=3D"n">ftruncate</span><span class=3D"p"=
>(</span><span class=3D"n">fd</span><span class=3D"p">,</span> <span class=
=3D"n">len</span><span class=3D"p">)</span> <span class=3D"o">!=3D</span> <=
span class=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</sp=
an> <span class=3D"p">{</span></div><div class=3D"line">      <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">write</span><s=
pan class=3D"p">(</span><span class=3D"n">fd</span><span class=3D"p">,</spa=
n> <span class=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"n"=
>len</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span=
 class=3D"n">len</span><span class=3D"p">)</span> <span class=3D"p">{</span=
></div><div class=3D"line">        <span class=3D"n">close</span><span clas=
s=3D"p">(</span><span class=3D"n">fd</span><span class=3D"p">);</span></div=
><div class=3D"line">        <span class=3D"n">free</span><span class=3D"p"=
>(</span><span class=3D"n">buf</span><span class=3D"p">);</span></div><div =
class=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</span>=
<span class=3D"n">dirty</span> <span class=3D"o">=3D</span> <span class=3D"=
mi">0</span><span class=3D"p">;</span></div><div class=3D"line">        <sp=
an class=3D"n">editorSetStatusMessage</span><span class=3D"p">(</span><span=
 class=3D"s">"%d bytes written to disk"</span><span class=3D"p">,</span> <s=
pan class=3D"n">len</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"k">return</span><span class=3D"p">;</span></div>=
<div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"lin=
e">    <span class=3D"p">}</span></div><div class=3D"line">    <span class=
=3D"n">close</span><span class=3D"p">(</span><span class=3D"n">fd</span><sp=
an class=3D"p">);</span></div><div class=3D"line">  <span class=3D"p">}</sp=
an></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">=
free</span><span class=3D"p">(</span><span class=3D"n">buf</span><span clas=
s=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">editorSetSta=
tusMessage</span><span class=3D"p">(</span><span class=3D"s">"Can't save! I=
/O error: %s"</span><span class=3D"p">,</span> <span class=3D"n">strerror</=
span><span class=3D"p">(</span><span class=3D"n">errno</span><span class=3D=
"p">));</span></div><div class=3D"line"><span class=3D"p">}</span></div><di=
v class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** a=
ppend buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm"=
>/*** output ***/</span></div><div class=3D"line folded"><span class=3D"cm"=
>/*** input ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>(Note: If you=E2=80=99re using <strong>Bash on Windows</strong>, you wil=
l have to press
<kbd>Escape</kbd> 3 times to get one <kbd>Escape</kbd> keypress to register=
 in
our program, because the <code>read()</code> calls in <code>editorReadKey()=
</code> that look for an
escape sequence never time out.)</p>

<p>Now let=E2=80=99s allow the user to press <kbd>Backspace</kbd> (or <kbd>=
Ctrl-H</kbd>,
or <kbd>Delete</kbd>) in the input prompt.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/prompt-backspace/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 130</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/prompt-backspace">prompt-backspace</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** prototypes ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** row operations ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** editor operations ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><=
div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><=
div class=3D"line"><span class=3D"cm">/*** input ***/</span></div><div clas=
s=3D"line"></div><div class=3D"line"><span class=3D"kt">char</span> <span c=
lass=3D"o">*</span><span class=3D"nf">editorPrompt</span><span class=3D"p">=
(</span><span class=3D"kt">char</span> <span class=3D"o">*</span><span clas=
s=3D"n">prompt</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/div><div class=3D"line">  <span class=3D"kt">size_t</span> <span class=3D"=
n">bufsize</span> <span class=3D"o">=3D</span> <span class=3D"mi">128</span=
><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">c=
har</span> <span class=3D"o">*</span><span class=3D"n">buf</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">malloc</span><span class=3D"p">(</spa=
n><span class=3D"n">bufsize</span><span class=3D"p">);</span></div><div cla=
ss=3D"line"></div><div class=3D"line">  <span class=3D"kt">size_t</span> <s=
pan class=3D"n">buflen</span> <span class=3D"o">=3D</span> <span class=3D"m=
i">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span clas=
s=3D"n">buf</span><span class=3D"p">[</span><span class=3D"mi">0</span><spa=
n class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'=
</span><span class=3D"p">;</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"k">while</span> <span class=3D"p">(</span><span =
class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span><=
/div><div class=3D"line">    <span class=3D"n">editorSetStatusMessage</span=
><span class=3D"p">(</span><span class=3D"n">prompt</span><span class=3D"p"=
>,</span> <span class=3D"n">buf</span><span class=3D"p">);</span></div><div=
 class=3D"line">    <span class=3D"n">editorRefreshScreen</span><span class=
=3D"p">();</span></div><div class=3D"line"></div><div class=3D"line">    <s=
pan class=3D"kt">int</span> <span class=3D"n">c</span> <span class=3D"o">=
=3D</span> <span class=3D"n">editorReadKey</span><span class=3D"p">();</spa=
n></div><ins class=3D"line">    <span class=3D"k">if</span> <span class=3D"=
p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span=
 class=3D"n">DEL_KEY</span> <span class=3D"o">||</span> <span class=3D"n">c=
</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">CTRL_KEY</span><s=
pan class=3D"p">(</span><span class=3D"sc">'h'</span><span class=3D"p">)</s=
pan> <span class=3D"o">||</span> <span class=3D"n">c</span> <span class=3D"=
o">=3D=3D</span> <span class=3D"n">BACKSPACE</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span></ins><ins class=3D"line">      <span class=3D=
"k">if</span> <span class=3D"p">(</span><span class=3D"n">buflen</span> <sp=
an class=3D"o">!=3D</span> <span class=3D"mi">0</span><span class=3D"p">)</=
span> <span class=3D"n">buf</span><span class=3D"p">[</span><span class=3D"=
o">--</span><span class=3D"n">buflen</span><span class=3D"p">]</span> <span=
 class=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span class=3D"p">;</=
span></ins><ins class=3D"line">    <span class=3D"p">}</span> <span class=
=3D"k">else</span> <span class=3D"k">if</span> <span class=3D"p">(</span><s=
pan class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc"=
>'\x1b'</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><d=
iv class=3D"line">      <span class=3D"n">editorSetStatusMessage</span><spa=
n class=3D"p">(</span><span class=3D"s">""</span><span class=3D"p">);</span=
></div><div class=3D"line">      <span class=3D"n">free</span><span class=
=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">);</span></div=
><div class=3D"line">      <span class=3D"k">return</span> <span class=3D"n=
b">NULL</span><span class=3D"p">;</span></div><div class=3D"line">    <span=
 class=3D"p">}</span> <span class=3D"k">else</span> <span class=3D"k">if</s=
pan> <span class=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o"=
>=3D=3D</span> <span class=3D"sc">'\r'</span><span class=3D"p">)</span> <sp=
an class=3D"p">{</span></div><div class=3D"line">      <span class=3D"k">if=
</span> <span class=3D"p">(</span><span class=3D"n">buflen</span> <span cla=
ss=3D"o">!=3D</span> <span class=3D"mi">0</span><span class=3D"p">)</span> =
<span class=3D"p">{</span></div><div class=3D"line">        <span class=3D"=
n">editorSetStatusMessage</span><span class=3D"p">(</span><span class=3D"s"=
>""</span><span class=3D"p">);</span></div><div class=3D"line">        <spa=
n class=3D"k">return</span> <span class=3D"n">buf</span><span class=3D"p">;=
</span></div><div class=3D"line">      <span class=3D"p">}</span></div><div=
 class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">else</span=
> <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"o">!=
</span><span class=3D"n">iscntrl</span><span class=3D"p">(</span><span clas=
s=3D"n">c</span><span class=3D"p">)</span> <span class=3D"o">&amp;&amp;</sp=
an> <span class=3D"n">c</span> <span class=3D"o">&lt;</span> <span class=3D=
"mi">128</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><=
div class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</s=
pan><span class=3D"n">buflen</span> <span class=3D"o">=3D=3D</span> <span c=
lass=3D"n">bufsize</span> <span class=3D"o">-</span> <span class=3D"mi">1</=
span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=
=3D"line">        <span class=3D"n">bufsize</span> <span class=3D"o">*=3D</=
span> <span class=3D"mi">2</span><span class=3D"p">;</span></div><div class=
=3D"line">        <span class=3D"n">buf</span> <span class=3D"o">=3D</span>=
 <span class=3D"n">realloc</span><span class=3D"p">(</span><span class=3D"n=
">buf</span><span class=3D"p">,</span> <span class=3D"n">bufsize</span><spa=
n class=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}<=
/span></div><div class=3D"line">      <span class=3D"n">buf</span><span cla=
ss=3D"p">[</span><span class=3D"n">buflen</span><span class=3D"o">++</span>=
<span class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"n">c=
</span><span class=3D"p">;</span></div><div class=3D"line">      <span clas=
s=3D"n">buf</span><span class=3D"p">[</span><span class=3D"n">buflen</span>=
<span class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">=
'\0'</span><span class=3D"p">;</span></div><div class=3D"line">    <span cl=
ass=3D"p">}</span></div><div class=3D"line">  <span class=3D"p">}</span></d=
iv><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line folded"><span class=3D"kt">void</span> <span class=
=3D"n">editorMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">=
int</span> <span class=3D"n">key</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"l=
ine"></div><div class=3D"line folded"><span class=3D"kt">void</span> <span =
class=3D"n">editorProcessKeypress</span><span class=3D"p">()</span> <span c=
lass=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D=
"line"></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/</=
span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>In the <a href=3D"https://viewsourcecode.org/snaptoken/kilo/06.search.ht=
ml">next chapter</a>, we=E2=80=99ll make use of <code>editorPrompt()</code>=
 to
implement an incremental search feature in our editor.</p>

    </div>
    <div id=3D"version">
      <a href=3D"https://github.com/snaptoken/kilo-tutorial/tree/v1.0.0beta=
11">1.0.0beta11</a>
      (<a href=3D"https://github.com/snaptoken/kilo-tutorial/blob/master/CH=
ANGELOG.md">changelog</a>)
    </div>
    <footer class=3D"bar">
      <nav>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/05.aTextEditor=
.html#">top of page</a>
      </nav>
    </footer>
 =20


</body><grammarly-desktop-integration data-grammarly-shadow-root=3D"true"><=
template shadowmode=3D"open"><div aria-label=3D"grammarly-integration" role=
=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-integration" data-con=
tent=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActive&quot;:true,&quot;=
isUserDisabled&quot;:false}"></div></template></grammarly-desktop-integrati=
on></html>
------MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://viewsourcecode.org/snaptoken/kilo/i/x.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAMFWlDQ1BJQ0MgUHJvZmlsZQAASImV
VwdYU8kWnltSCEkogQhICb0jvQqEDoKAdLARkgChREgICnZlUcG1iwUruipiWwsgi4rYFRGw1wcq
Ksq6WMCCypsU0PW1753vmzt/zpxz5j9zz53MAKBiz8nLy0FVAcgVFohiQvxZSckpLFIXwIAeoAN9
QOJwxXl+0dERAMpw/3cZuAUQaX/dVhrrX8f/q6jx+GIuAEg0xGk8MTcX4qMA4FrcPFEBAIQWqDee
XpAnxX0Qa4ggQQCIuBRnyLGWFKfJsY3MJi4mAGI2AGQqhyPKAIAu5c0q5GbAOHQpR3shTyCEeBPE
PtxMDg/iBxDb5OZOg1iFDLFF2g9xMv4WM20kJoeTMYLluciEHCgQ5+Vwiv7P5fjfkpsjGZ7DCDZq
pig0RpozXLc92dPCpZgKcaMwLTIKYnWILwp4MnspvpcpCY1X2PdyxQFwzQATABTwOIHhEOtCzJRk
x/spsCNHJPOF9mikoCAsToHTRNNiFPHRQmFOZIQizuJMftgw3sIXB8UO26QLgsMghpWGHi3OjEuU
80TPFgoSIiGmQ9wmzo4NV/g+Ks4MiBy2EUlipJxNIH6fLgqOkdtgWrni4bwwOy5HNhesBYxdkBkX
KvfFkvjipIhhDjx+YJCcA8bjC+MV3DBYXf4xCt/SvJxohT22hZ8TEiNfZ+yQuDB22LejABaYfB2w
x1mccdGKuQbyCqLj5NxwFESAABAIWEACWxqYBrKAoLW3rhf+ko8EAw4QgQzAB7YKzbBHomxECJ+x
oBj8CREfiEf8/GWjfFAI9V9HtPKnLUiXjRbKPLLBM4hzcR3cB/fCI+CTDZsj7o57DPuxVIZnJQYR
A4mhxGCi5QgPLmSdA5sICP6NLhz2fJidlItwOIfv8QjPCO2Ex4SbhE7CXZAAnsqiKKymChaIfmLO
AuNBJ4wWrMgu7cfscDPI2gX3x70hf8gdZ+I6wBZ3hpn44b4wNxeo/ZGhZITb97X8eT4p6x/zUejp
VnQXBYu0kTcTMGL1c5SAH9aIB/vwny2xxdgR7AJ2GruENWJ1gIWdwuqxFuyEFI9UwlNZJQzPFiPj
lg3jCIZt7Gvse+y//DQ3RzG/dL3EBfwZBdKPIWBaXpFIkJFZwPKDuzGfFSbk2tmwHO0d3ACQ7u3y
reMdU7ZnI8zL33X5TQB4lEFlxncdxxiA488AYAx81xm/heW+AoATbVyJqFCuk27HgAAoQAV+Fdrw
f8MYWMB8HIEr8AJsEATGgSgQB5LBFLjimSAXcp4OZoH5oBSUgxVgLdgItoIdYA/YDw6DOtAIToPz
4ApoAzfBfVgX3eAV6AMDYBBBEBJCQxiINmKAmCLWiCPijvggQUgEEoMkI6lIBiJEJMgsZCFSjqxC
NiLbkWrkd+Q4chq5hLQjd5EupAd5i3xGMZSKaqB6qBk6BnVH/dBwNA6djGag+WgxWoIuQ9ejVeg+
tBY9jV5Bb6Kd6Cu0HwOYMsbEDDFbzB0LwKKwFCwdE2FzsDKsAqvCDmAN8D1fxzqxXuwTTsQZOAu3
hbUZisfjXDwfn4MvxTfie/Ba/Cx+He/C+/BvBBpBl2BN8CSEEZIIGYTphFJCBWEX4RjhHPxuugkD
RCKRSTQnusHvMpmYRZxJXErcTDxIbCK2E58Q+0kkkjbJmuRNiiJxSAWkUtIG0j7SKVIHqZv0kaxM
NiA7koPJKWQheQG5gryXfJLcQX5OHlRSVTJV8lSKUuIpFSktV9qp1KB0TalbaZCiRjGneFPiKFmU
+ZT1lAOUc5QHlHfKyspGyh7KE5QFyvOU1ysfUr6o3KX8iapOtaIGUCdRJdRl1N3UJupd6jsajWZG
Y9NSaAW0ZbRq2hnaI9pHOoNuRw+j8+hz6ZX0WnoH/bWKkoqpip/KFJVilQqVIyrXVHpVlVTNVANU
OapzVCtVj6veVu1XY6g5qEWp5aotVdurdknthTpJ3Uw9SJ2nXqK+Q/2M+hMGxjBmBDC4jIWMnYxz
jG4Nooa5RphGlka5xn6NVo0+TXVNZ80EzRmalZonNDuZGNOMGcbMYS5nHmbeYn4epTfKbxR/1JJR
B0Z1jPqgNVqLrcXXKtM6qHVT67M2SztIO1t7pXad9kMdXMdKZ4LOdJ0tOud0ekdrjPYazR1dNvrw
6Hu6qK6VbozuTN0dui26/Xr6eiF6eXob9M7o9eoz9dn6Wfpr9E/q9xgwDHwMBAZrDE4ZvGRpsvxY
Oaz1rLOsPkNdw1BDieF2w1bDQSNzo3ijBUYHjR4aU4zdjdON1xg3G/eZGJiMN5llUmNyz1TJ1N00
03Sd6QXTD2bmZolmi8zqzF6Ya5mHmReb15g/sKBZ+FrkW1RZ3LAkWrpbZltutmyzQq1crDKtKq2u
WaPWrtYC683W7TYEGw8boU2VzW1bqq2fbaFtjW2XHdMuwm6BXZ3d6zEmY1LGrBxzYcw3exf7HPud
9vcd1B3GOSxwaHB462jlyHWsdLzhRHMKdprrVO/0xtname+8xfmOC8NlvMsil2aXr65uriLXA649
biZuqW6b3G67a7hHuy91v+hB8PD3mOvR6PHJ09WzwPOw519etl7ZXnu9Xow1H8sfu3PsE28jb473
du9OH5ZPqs82n05fQ1+Ob5XvY7Yxm8fexX7uZ+mX5bfP77W/vb/I/5j/hwDPgNkBTYFYYEhgWWBr
kHpQfNDGoEfBRsEZwTXBfSEuITNDmkIJoeGhK0Nvh+mFccOqw/rGuY2bPe5sODU8Nnxj+OMIqwhR
RMN4dPy48avHP4g0jRRG1kWBqLCo1VEPo82j86P/mECcED2hcsKzGIeYWTEXYhmxU2P3xg7E+cct
j7sfbxEviW9OUEmYlFCd8CExMHFVYmfSmKTZSVeSdZIFyfUppJSElF0p/RODJq6d2D3JZVLppFuT
zSfPmHxpis6UnCknpqpM5Uw9kkpITUzdm/qFE8Wp4vSnhaVtSuvjBnDXcV/x2Lw1vB6+N38V/3m6
d/qq9BcZ3hmrM3oyfTMrMnsFAYKNgjdZoVlbsz5kR2Xvzh7KScw5mEvOTc09LlQXZgvPTtOfNmNa
e551XmleZ75n/tr8PlG4aJcYEU8W1xdowGNOi8RC8oukq9CnsLLw4/SE6UdmqM0QzmgpsipaUvS8
OLj4t5n4TO7M5lmGs+bP6prtN3v7HGRO2pzmucZzS+Z2zwuZt2c+ZX72/KsL7BesWvB+YeLChhK9
knklT34J+aWmlF4qKr29yGvR1sX4YsHi1iVOSzYs+VbGK7tcbl9eUf5lKXfp5V8dfl3/69Cy9GWt
y12Xb1lBXCFccWul78o9q9RWFa96snr86to1rDVla96vnbr2UoVzxdZ1lHWSdZ3rI9bXbzDZsGLD
l42ZG29W+lce3KS7acmmD5t5mzu2sLcc2Kq3tXzr522CbXe2h2yvrTKrqthB3FG449nOhJ0XfnP/
rXqXzq7yXV93C3d37onZc7barbp6r+7e5TVojaSmZ9+kfW37A/fXH7A9sP0g82D5IXBIcujl76m/
3zocfrj5iPuRA0dNj246xjhWVovUFtX21WXWddYn17cfH3e8ucGr4dgfdn/sbjRsrDyheWL5ScrJ
kpNDp4pP9TflNfWezjj9pHlq8/0zSWdunJ1wtvVc+LmL54PPn7ngd+HURe+LjZc8Lx2/7H657orr
ldoWl5ZjV12uHmt1ba295natvs2jraF9bPvJDt+O09cDr5+/EXbjys3Im+234m/duT3pducd3p0X
d3PuvrlXeG/w/rwHhAdlD1UfVjzSfVT1D8t/HOx07TzRFdjV8jj28f0n3CevnoqffukueUZ7VvHc
4Hn1C8cXjT3BPW0vJ77sfpX3arC39E+1Pze9tnh99C/2Xy19SX3db0Rvht4ufaf9bvd75/fN/dH9
jwZyBwY/lH3U/rjnk/unC58TPz8fnP6F9GX9V8uvDd/Cvz0Yyh0ayuOIOLKjAAYbmp4OwNvdANCS
4dmhDQAKXX73kgkivy/KEPhPWH4/k4krALvZAMTPAyACnlG2wGYKMRX20qN3HBugTk4jTSHidCdH
eSwqvMEQPg4NvdMDgNQAwFfR0NDg5qGhrzsh2bsANOXL73xSIcLz/TbZOeeqcVEg+En+Cd8+bBGE
+qe9AAAACXBIWXMAABYlAAAWJQFJUiTwAAACBGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6
eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAi
PgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRm
LXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAg
ICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIKICAgICAgICAg
ICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8
ZXhpZjpQaXhlbFlEaW1lbnNpb24+NTg0PC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAg
PGV4aWY6UGl4ZWxYRGltZW5zaW9uPjE1ODwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAg
IDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2Ny
aXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgrYaV7IAAAB2UlEQVRYCe2WoV/CQBTH
HxaSyUayWWyzaLMMi/wBGrStKMkCBD4GTKZhMQkdypJQsGDCMgiQoGxJixRJ844xNt1t4919+HwW
7spu7969++179+4t45AGKW47Kda2lCYFiu6QJCgJihIQnS/PoCQoSkB0PvcZnA0nMN9g9c/JEOzF
Bo5RLvRnAdvGRslRFMVRSq/Od8xkq//i+qm6M/2JcYwZQhNc2B24vO+639utwGm5wyRpv9ehUHxy
/b6aUG5PohjF2tECs7k8GPqVH5Qh0hXX9H3UKjxfHPjviF6G0kX4r13DImrQf8jDnJA7KwbEHVeh
Vz+H3fVMXIdbIF0mJPL/2oLiaDj0Fgc15E5uwXgMbHdgcI9sqwg5L5QQQS/I2/UR3I28N/o8hNag
AftBE2dfiCBdk27zX3HUOgItIrvpKKYJEUw8g2oNeiRxeBOEfgg3wZA4khD9wSDxCsLQ4xZofzTI
JRy+SrIk4jJxEu5JjEg8QVJJCtqqQtCVGFcJS6TWnmF0+b4xZTByyGzdrGqxkVCLdeFaDJEqEgam
5jhWnDfdGpuOxfmjQGMIZbG/D9vr4c/g9rQwI0uBTCwIoySIgMV0lQSZWBBGSRABi+kqCTKxIIyp
J/gL86pOZRzqaU0AAAAASUVORK5CYII=

------MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://viewsourcecode.org/snaptoken/kilo/i/arrow.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAMFWlDQ1BJQ0MgUHJvZmlsZQAASImV
VwdYU8kWnltSCEkogQhICb0jvQqEDoKAdLARkgChREgICnZlUcG1iwUruipiWwsgi4rYFRGw1wcq
Ksq6WMCCypsU0PW1753vmzt/zpxz5j9zz53MAKBiz8nLy0FVAcgVFohiQvxZSckpLFIXwIAeoAN9
QOJwxXl+0dERAMpw/3cZuAUQaX/dVhrrX8f/q6jx+GIuAEg0xGk8MTcX4qMA4FrcPFEBAIQWqDee
XpAnxX0Qa4ggQQCIuBRnyLGWFKfJsY3MJi4mAGI2AGQqhyPKAIAu5c0q5GbAOHQpR3shTyCEeBPE
PtxMDg/iBxDb5OZOg1iFDLFF2g9xMv4WM20kJoeTMYLluciEHCgQ5+Vwiv7P5fjfkpsjGZ7DCDZq
pig0RpozXLc92dPCpZgKcaMwLTIKYnWILwp4MnspvpcpCY1X2PdyxQFwzQATABTwOIHhEOtCzJRk
x/spsCNHJPOF9mikoCAsToHTRNNiFPHRQmFOZIQizuJMftgw3sIXB8UO26QLgsMghpWGHi3OjEuU
80TPFgoSIiGmQ9wmzo4NV/g+Ks4MiBy2EUlipJxNIH6fLgqOkdtgWrni4bwwOy5HNhesBYxdkBkX
KvfFkvjipIhhDjx+YJCcA8bjC+MV3DBYXf4xCt/SvJxohT22hZ8TEiNfZ+yQuDB22LejABaYfB2w
x1mccdGKuQbyCqLj5NxwFESAABAIWEACWxqYBrKAoLW3rhf+ko8EAw4QgQzAB7YKzbBHomxECJ+x
oBj8CREfiEf8/GWjfFAI9V9HtPKnLUiXjRbKPLLBM4hzcR3cB/fCI+CTDZsj7o57DPuxVIZnJQYR
A4mhxGCi5QgPLmSdA5sICP6NLhz2fJidlItwOIfv8QjPCO2Ex4SbhE7CXZAAnsqiKKymChaIfmLO
AuNBJ4wWrMgu7cfscDPI2gX3x70hf8gdZ+I6wBZ3hpn44b4wNxeo/ZGhZITb97X8eT4p6x/zUejp
VnQXBYu0kTcTMGL1c5SAH9aIB/vwny2xxdgR7AJ2GruENWJ1gIWdwuqxFuyEFI9UwlNZJQzPFiPj
lg3jCIZt7Gvse+y//DQ3RzG/dL3EBfwZBdKPIWBaXpFIkJFZwPKDuzGfFSbk2tmwHO0d3ACQ7u3y
reMdU7ZnI8zL33X5TQB4lEFlxncdxxiA488AYAx81xm/heW+AoATbVyJqFCuk27HgAAoQAV+Fdrw
f8MYWMB8HIEr8AJsEATGgSgQB5LBFLjimSAXcp4OZoH5oBSUgxVgLdgItoIdYA/YDw6DOtAIToPz
4ApoAzfBfVgX3eAV6AMDYBBBEBJCQxiINmKAmCLWiCPijvggQUgEEoMkI6lIBiJEJMgsZCFSjqxC
NiLbkWrkd+Q4chq5hLQjd5EupAd5i3xGMZSKaqB6qBk6BnVH/dBwNA6djGag+WgxWoIuQ9ejVeg+
tBY9jV5Bb6Kd6Cu0HwOYMsbEDDFbzB0LwKKwFCwdE2FzsDKsAqvCDmAN8D1fxzqxXuwTTsQZOAu3
hbUZisfjXDwfn4MvxTfie/Ba/Cx+He/C+/BvBBpBl2BN8CSEEZIIGYTphFJCBWEX4RjhHPxuugkD
RCKRSTQnusHvMpmYRZxJXErcTDxIbCK2E58Q+0kkkjbJmuRNiiJxSAWkUtIG0j7SKVIHqZv0kaxM
NiA7koPJKWQheQG5gryXfJLcQX5OHlRSVTJV8lSKUuIpFSktV9qp1KB0TalbaZCiRjGneFPiKFmU
+ZT1lAOUc5QHlHfKyspGyh7KE5QFyvOU1ysfUr6o3KX8iapOtaIGUCdRJdRl1N3UJupd6jsajWZG
Y9NSaAW0ZbRq2hnaI9pHOoNuRw+j8+hz6ZX0WnoH/bWKkoqpip/KFJVilQqVIyrXVHpVlVTNVANU
OapzVCtVj6veVu1XY6g5qEWp5aotVdurdknthTpJ3Uw9SJ2nXqK+Q/2M+hMGxjBmBDC4jIWMnYxz
jG4Nooa5RphGlka5xn6NVo0+TXVNZ80EzRmalZonNDuZGNOMGcbMYS5nHmbeYn4epTfKbxR/1JJR
B0Z1jPqgNVqLrcXXKtM6qHVT67M2SztIO1t7pXad9kMdXMdKZ4LOdJ0tOud0ekdrjPYazR1dNvrw
6Hu6qK6VbozuTN0dui26/Xr6eiF6eXob9M7o9eoz9dn6Wfpr9E/q9xgwDHwMBAZrDE4ZvGRpsvxY
Oaz1rLOsPkNdw1BDieF2w1bDQSNzo3ijBUYHjR4aU4zdjdON1xg3G/eZGJiMN5llUmNyz1TJ1N00
03Sd6QXTD2bmZolmi8zqzF6Ya5mHmReb15g/sKBZ+FrkW1RZ3LAkWrpbZltutmyzQq1crDKtKq2u
WaPWrtYC683W7TYEGw8boU2VzW1bqq2fbaFtjW2XHdMuwm6BXZ3d6zEmY1LGrBxzYcw3exf7HPud
9vcd1B3GOSxwaHB462jlyHWsdLzhRHMKdprrVO/0xtname+8xfmOC8NlvMsil2aXr65uriLXA649
biZuqW6b3G67a7hHuy91v+hB8PD3mOvR6PHJ09WzwPOw519etl7ZXnu9Xow1H8sfu3PsE28jb473
du9OH5ZPqs82n05fQ1+Ob5XvY7Yxm8fexX7uZ+mX5bfP77W/vb/I/5j/hwDPgNkBTYFYYEhgWWBr
kHpQfNDGoEfBRsEZwTXBfSEuITNDmkIJoeGhK0Nvh+mFccOqw/rGuY2bPe5sODU8Nnxj+OMIqwhR
RMN4dPy48avHP4g0jRRG1kWBqLCo1VEPo82j86P/mECcED2hcsKzGIeYWTEXYhmxU2P3xg7E+cct
j7sfbxEviW9OUEmYlFCd8CExMHFVYmfSmKTZSVeSdZIFyfUppJSElF0p/RODJq6d2D3JZVLppFuT
zSfPmHxpis6UnCknpqpM5Uw9kkpITUzdm/qFE8Wp4vSnhaVtSuvjBnDXcV/x2Lw1vB6+N38V/3m6
d/qq9BcZ3hmrM3oyfTMrMnsFAYKNgjdZoVlbsz5kR2Xvzh7KScw5mEvOTc09LlQXZgvPTtOfNmNa
e551XmleZ75n/tr8PlG4aJcYEU8W1xdowGNOi8RC8oukq9CnsLLw4/SE6UdmqM0QzmgpsipaUvS8
OLj4t5n4TO7M5lmGs+bP6prtN3v7HGRO2pzmucZzS+Z2zwuZt2c+ZX72/KsL7BesWvB+YeLChhK9
knklT34J+aWmlF4qKr29yGvR1sX4YsHi1iVOSzYs+VbGK7tcbl9eUf5lKXfp5V8dfl3/69Cy9GWt
y12Xb1lBXCFccWul78o9q9RWFa96snr86to1rDVla96vnbr2UoVzxdZ1lHWSdZ3rI9bXbzDZsGLD
l42ZG29W+lce3KS7acmmD5t5mzu2sLcc2Kq3tXzr522CbXe2h2yvrTKrqthB3FG449nOhJ0XfnP/
rXqXzq7yXV93C3d37onZc7barbp6r+7e5TVojaSmZ9+kfW37A/fXH7A9sP0g82D5IXBIcujl76m/
3zocfrj5iPuRA0dNj246xjhWVovUFtX21WXWddYn17cfH3e8ucGr4dgfdn/sbjRsrDyheWL5ScrJ
kpNDp4pP9TflNfWezjj9pHlq8/0zSWdunJ1wtvVc+LmL54PPn7ngd+HURe+LjZc8Lx2/7H657orr
ldoWl5ZjV12uHmt1ba295natvs2jraF9bPvJDt+O09cDr5+/EXbjys3Im+234m/duT3pducd3p0X
d3PuvrlXeG/w/rwHhAdlD1UfVjzSfVT1D8t/HOx07TzRFdjV8jj28f0n3CevnoqffukueUZ7VvHc
4Hn1C8cXjT3BPW0vJ77sfpX3arC39E+1Pze9tnh99C/2Xy19SX3db0Rvht4ufaf9bvd75/fN/dH9
jwZyBwY/lH3U/rjnk/unC58TPz8fnP6F9GX9V8uvDd/Cvz0Yyh0ayuOIOLKjAAYbmp4OwNvdANCS
4dmhDQAKXX73kgkivy/KEPhPWH4/k4krALvZAMTPAyACnlG2wGYKMRX20qN3HBugTk4jTSHidCdH
eSwqvMEQPg4NvdMDgNQAwFfR0NDg5qGhrzsh2bsANOXL73xSIcLz/TbZOeeqcVEg+En+Cd8+bBGE
+qe9AAAACXBIWXMAABYlAAAWJQFJUiTwAAACBGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6
eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAi
PgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRm
LXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAg
ICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIKICAgICAgICAg
ICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8
ZXhpZjpQaXhlbFlEaW1lbnNpb24+NTg0PC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAg
PGV4aWY6UGl4ZWxYRGltZW5zaW9uPjE1ODwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAg
IDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2Ny
aXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgrYaV7IAAABPklEQVRYCWP8DwQMgxgw
DWK3gZ026kBKY2g0BEdDkNIQoFT/aBocDUFKQ4BS/aNpcDQEKQ0BSvWTnwZ/PmN48OwzpfYT1E+e
Az+fZci19mMIqTrG8JOgFRQqALWoSQGf7u/4H2ls/N/YOP7/mU+k6CRPLQvx/vvMcGByFUPJwuNQ
Lc8ZHhzbzPDgyy+ijfgJDG5j32AGdV6itTCQ5MDLx2GOA1nwlmHt8uUMb5+/Jdq2t2+FGVqtfIAO
ZCdaDwOpAX9/xyRg9IKiuPL//R+k6iZdPckOBFnx6dIaiCNbj5JuI4k6SIhiRKzw6gYz7JjPw7Dr
mTBCkEYsRpCHaGQ2VYwlrxykitXEGTLqQOLCCbeq0RDEHTbEyYyGIHHhhFvVaAjiDhviZEZDkLhw
wq1qNARxhw1xMqMhSFw44VYFAJIg/q91M+6jAAAAAElFTkSuQmCC

------MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=PT+Serif:400,400i,700|Work+Sans:700|Fira+Mono:400,500

@charset "utf-8";

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgK_=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, =
U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgIv=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-=
491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgKv=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgJf=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+370-377, U+37A-37F, U+=
384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgnN=
_3nP3TaZFxBQ.woff2") format("woff2"); unicode-range: U+2000-2001, U+2004-20=
08, U+200A, U+23B8-23BD, U+2500-259F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgKP=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+=
2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9=
F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A7=
20-A7FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgJv=
7Ss9XZYQ.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, =
U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U=
+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3Hk_fUS5NBBASF.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C=
8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HmvfUS5NBBASF.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+=
490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HkvfUS5NBBASF.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HnffUS5NBBASF.woff2") format("woff2"); unicode-range: U+370-377, U+37A-37F=
, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HJNbxZLtLDDy8Rg.woff2") format("woff2"); unicode-range: U+2000-2001, U+200=
4-2008, U+200A, U+23B8-23BD, U+2500-259F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HkPfUS5NBBASF.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5=
, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00=
-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, =
U+A720-A7FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HnvfUS5NBBA.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-1=
53, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20A=
C, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_rC1=
cgT9rct48Q.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, =
U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_rm1=
cgT9rct48Q.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-=
491, U+4B0-4B1, U+2116; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_rO1=
cgT9rct48Q.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+=
2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9=
F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A7=
20-A7FF; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_r21=
cgT9rcs.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U=
+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+=
2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFbzr-_=
dSb_nco.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, U+2=
0B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFSzr-_=
dSb_nco.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491=
, U+4B0-4B1, U+2116; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFYzr-_=
dSb_nco.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+2C7=
-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, =
U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-=
A7FF; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFWzr-_=
dSb_.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2B=
B-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+212=
2, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qf=
VyvVp8NAyIw.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A,=
 U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qW=
VyvVp8NAyIw.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490=
-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qc=
VyvVp8NAyIw.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U=
+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E=
9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A=
720-A7FF; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qS=
VyvVp8NA.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, =
U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U=
+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v24/QGY_z_wNahGAdqQ43RhVcI=
gYT2Xz5u32K67QBiAJpo3ZKyHaQfhf.woff2") format("woff2"); unicode-range: U+10=
2-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+=
303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v24/QGY_z_wNahGAdqQ43RhVcI=
gYT2Xz5u32K67QBiEJpo3ZKyHaQfhf.woff2") format("woff2"); unicode-range: U+10=
0-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1=
D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+211=
3, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v24/QGY_z_wNahGAdqQ43RhVcI=
gYT2Xz5u32K67QBi8Jpo3ZKyHaQQ.woff2") format("woff2"); unicode-range: U+0-FF=
, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+=
2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://viewsourcecode.org/snaptoken/kilo/style.css

@charset "utf-8";

@import url("https://fonts.googleapis.com/css?family=3DPT+Serif:400,400i,70=
0|Work+Sans:700|Fira+Mono:400,500");

* { margin: 0px; padding: 0px; box-sizing: border-box; }

body { font-family: "PT Serif", Utopia, Georgia, Times, "Apple Symbols", se=
rif; line-height: 140%; color: rgb(51, 51, 51); font-size: 18px; }

#container { width: 700px; margin: 18px auto; }

.bar { display: block; width: 100%; background-color: rgb(204, 238, 187); b=
ox-shadow: rgb(221, 221, 221) 0px 0px 15px 1px; }

.bar > nav { display: flex; justify-content: space-between; width: 700px; m=
argin: 0px auto; }

footer.bar > nav { justify-content: center; }

.bar > nav > a { display: block; padding: 2px 0px 4px; color: rgb(17, 85, 3=
4); }

#version { text-align: right; font-size: 12px; font-family: "Fira Mono", mo=
nospace; padding-right: 5px; }

#version a { color: rgb(51, 51, 51); }

h1, h2, h3, h4, h5, h6 { font-family: "Work Sans", Futura, Helvetica, Arial=
, sans-serif; color: rgb(34, 34, 34); line-height: 100%; margin-top: 32px; =
}

h2 a, h3 a, h4 a { color: inherit; text-decoration: none; }

h2 a::before, h3 a::before, h4 a::before { content: "#"; color: rgb(255, 25=
5, 255); font-weight: normal; transition: color 0.15s; display: block; floa=
t: left; width: 32px; margin-left: -32px; }

h2 a:hover::before, h3 a:hover::before, h4 a:hover::before { color: rgb(204=
, 204, 204); }

h1 { margin-top: 0px; font-size: 38px; border-bottom: 3px solid rgb(238, 11=
9, 204); display: inline-block; }

h2 { font-size: 26px; }

p { margin-top: 18px; }

ul, ol { margin-top: 18px; margin-left: 36px; }

hr { border-top: none; border-right: none; border-left: none; border-image:=
 initial; border-bottom: 1px solid rgb(136, 136, 136); }

a { color: rgb(34, 102, 221); }

code { font-family: "Fira Mono", monospace; font-size: inherit; white-space=
: nowrap; background-color: rgb(239, 244, 234); padding: 1px 3px; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { font-weight: normal;=
 }

kbd { font-family: "Fira Mono", monospace; border-radius: 3px; padding: 2px=
 3px; box-shadow: rgb(119, 119, 119) 1px 1px 1px; margin: 2px; font-size: 1=
4px; background: rgb(247, 247, 247); font-weight: 500; color: rgb(85, 85, 8=
5); white-space: nowrap; }

h1 kbd, h2 kbd, h3 kbd, h4 kbd, h5 kbd, h6 kbd { font-size: 80%; }

.diff code { font-size: 14px; line-height: 20px; padding: 0px; margin-botto=
m: 18px; white-space: inherit; }

.diff pre { background-color: rgb(255, 252, 250); padding: 5px 0px; }

.diff { border: 1px solid rgb(237, 231, 227); border-radius: 3px; margin-to=
p: 18px; }

.diff .diff-header { display: flex; justify-content: space-between; padding=
: 0px 5px; background-color: rgb(237, 231, 227); font-size: 16px; color: rg=
b(102, 102, 102); }

.diff .step-number { font-weight: bold; }

.diff .step-filename { font-weight: bold; }

.diff .step-name { font-family: "Fira Mono", monospace; font-size: 12px; }

.diff .diff-header a { text-decoration: none; color: rgb(102, 102, 102); }

.diff .diff-header a:hover { text-decoration: underline; }

.diff .step-filename a { text-decoration: underline; }

.diff .diff-footer { background-color: rgb(237, 231, 227); }

.diff .diff-footer > div { font-size: 12px; line-height: 16px; height: 16px=
; padding-right: 5px; text-align: right; }

.diff .diff-tag-c0 { color: rgb(187, 51, 51); }

.diff .diff-tag-c1 { color: rgb(51, 51, 187); }

.diff .diff-tag-c2 { color: rgb(51, 187, 51); }

.diff .diff-tag-c-unknown { color: rgb(170, 102, 34); }

.diff .line { display: block; height: 20px; padding: 0px 5px; position: rel=
ative; }

.diff .line.folded { background-color: rgb(238, 238, 255); opacity: 0.5; }

.diff ins.line { background-color: rgb(255, 255, 221); text-decoration: non=
e; }

.diff ins.line::after { display: block; content: ""; width: 20px; height: 2=
0px; background-image: url("i/arrow.png"); background-size: 20px 20px; posi=
tion: absolute; right: -24px; top: 0px; }

.diff del.line { background-color: rgb(255, 221, 221); text-decoration: lin=
e-through; }

.diff del.line::after { display: block; content: ""; width: 20px; height: 2=
0px; background-image: url("i/x.png"); background-size: 20px 20px; position=
: absolute; right: -24px; top: 0px; }

@media screen and (max-width: 700px) {
  #container { width: auto; margin: 18px 0px; padding: 0px 5px; }
  .bar > nav { width: auto; margin: 0px; padding: 0px 5px; }
  .highlight { overflow-x: scroll; }
  .diff .line { width: 700px; }
  .diff ins.line::after, .diff del.line::after { display: none; }
}

.highlight table td { padding: 5px; }

.highlight table pre { margin: 0px; }

.highlight .cm { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cp { color: rgb(153, 153, 153); font-weight: 500; }

.highlight .c1 { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cs { color: rgb(153, 153, 153); }

.highlight .c, .highlight .cd { color: rgb(153, 153, 136); font-style: ital=
ic; }

.highlight .err { color: rgb(166, 23, 23); background-color: rgb(227, 210, =
210); }

.highlight .gd { color: rgb(0, 0, 0); background-color: rgb(255, 221, 221);=
 }

.highlight .ge { color: rgb(0, 0, 0); font-style: italic; }

.highlight .gr { color: rgb(170, 0, 0); }

.highlight .gh { color: rgb(153, 153, 153); }

.highlight .gi { color: rgb(0, 0, 0); background-color: rgb(221, 255, 221);=
 }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(85, 85, 85); }

.highlight .gs { font-weight: 500; }

.highlight .gu { color: rgb(170, 170, 170); }

.highlight .gt { color: rgb(170, 0, 0); }

.highlight .kc { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kd { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kn { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kp { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kr { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kt { color: rgb(68, 85, 136); font-weight: 500; }

.highlight .k, .highlight .kv { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .mf { color: rgb(0, 153, 153); }

.highlight .mh { color: rgb(0, 153, 153); }

.highlight .il { color: rgb(0, 153, 153); }

.highlight .mi { color: rgb(0, 153, 153); }

.highlight .mo { color: rgb(0, 153, 153); }

.highlight .m, .highlight .mb, .highlight .mx { color: rgb(0, 153, 153); }

.highlight .sb { color: rgb(221, 17, 68); }

.highlight .sc { color: rgb(221, 17, 68); }

.highlight .sd { color: rgb(221, 17, 68); }

.highlight .s2 { color: rgb(221, 17, 68); }

.highlight .se { color: rgb(221, 17, 68); }

.highlight .sh { color: rgb(221, 17, 68); }

.highlight .si { color: rgb(221, 17, 68); }

.highlight .sx { color: rgb(221, 17, 68); }

.highlight .sr { color: rgb(0, 153, 38); }

.highlight .s1 { color: rgb(221, 17, 68); }

.highlight .ss { color: rgb(153, 0, 115); }

.highlight .s { color: rgb(221, 17, 68); }

.highlight .na { color: rgb(0, 128, 128); }

.highlight .bp { color: rgb(153, 153, 153); }

.highlight .nb { color: rgb(0, 134, 179); }

.highlight .nc { color: rgb(68, 85, 136); font-weight: 500; }

.highlight .no { color: rgb(0, 128, 128); }

.highlight .nd { color: rgb(60, 93, 93); font-weight: 500; }

.highlight .ni { color: rgb(128, 0, 128); }

.highlight .ne { color: rgb(153, 0, 0); font-weight: 500; }

.highlight .nf { color: rgb(153, 0, 0); font-weight: 500; }

.highlight .nl { color: rgb(153, 0, 0); font-weight: 500; }

.highlight .nn { color: rgb(85, 85, 85); }

.highlight .nt { color: rgb(0, 0, 128); }

.highlight .vc { color: rgb(0, 128, 128); }

.highlight .vg { color: rgb(0, 128, 128); }

.highlight .vi { color: rgb(0, 128, 128); }

.highlight .nv { color: rgb(0, 128, 128); }

.highlight .ow { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .o { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight { background-color: rgb(248, 248, 248); }
------MultipartBoundary--TnGmCYCyATj8qkkfT4jKUmfH4KLMTJ4IoXC9QFflPO------
