From: <Saved by Blink>
Snapshot-Content-Location: https://viewsourcecode.org/snaptoken/kilo/04.aTextViewer.html
Subject: 4. A text viewer | Build Your Own Text Editor
Date: Tue, 23 Sep 2025 12:37:50 +0100
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I----"


------MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I----
Content-Type: text/html
Content-ID: <frame-52DD9075882A8A50928F6BAC7A5437A4@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://viewsourcecode.org/snaptoken/kilo/04.aTextViewer.html

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0, maximum-scale=3D1.0">
    <title>4. A text viewer | Build Your Own Text Editor</title>
    <link href=3D"https://viewsourcecode.org/snaptoken/kilo/style.css" rel=
=3D"stylesheet">
  </head>
  <body data-new-gr-c-s-check-loaded=3D"14.1254.0" data-gr-ext-installed=3D=
"">
    <header class=3D"bar">
      <nav>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/03.rawInputAnd=
Output.html">=E2=86=90 prev</a>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/index.html">co=
ntents</a>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/05.aTextEditor=
.html">next =E2=86=92</a>
      </nav>
    </header>
    <div id=3D"container">
      <h1 id=3D"a-text-viewer">A text viewer</h1>
<h2 id=3D"a-line-viewer"><a href=3D"https://viewsourcecode.org/snaptoken/ki=
lo/04.aTextViewer.html#a-line-viewer">A line viewer</a></h2>

<p>Let=E2=80=99s create a data type for storing a row of text in our editor=
.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/erow/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 55</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/erow">erow</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><ins class=3D"line=
"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <span cl=
ass=3D"n">erow</span> <span class=3D"p">{</span></ins><ins class=3D"line"> =
 <span class=3D"kt">int</span> <span class=3D"n">size</span><span class=3D"=
p">;</span></ins><ins class=3D"line">  <span class=3D"kt">char</span> <span=
 class=3D"o">*</span><span class=3D"n">chars</span><span class=3D"p">;</spa=
n></ins><ins class=3D"line"><span class=3D"p">}</span> <span class=3D"n">er=
ow</span><span class=3D"p">;</span></ins><div class=3D"line"></div><div cla=
ss=3D"line"><span class=3D"k">struct</span> <span class=3D"n">editorConfig<=
/span> <span class=3D"p">{</span></div><div class=3D"line">  <span class=3D=
"kt">int</span> <span class=3D"n">cx</span><span class=3D"p">,</span> <span=
 class=3D"n">cy</span><span class=3D"p">;</span></div><div class=3D"line"> =
 <span class=3D"kt">int</span> <span class=3D"n">screenrows</span><span cla=
ss=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> =
<span class=3D"n">screencols</span><span class=3D"p">;</span></div><ins cla=
ss=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">numrows</span=
><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">er=
ow</span> <span class=3D"n">row</span><span class=3D"p">;</span></ins><div =
class=3D"line">  <span class=3D"k">struct</span> <span class=3D"n">termios<=
/span> <span class=3D"n">orig_termios</span><span class=3D"p">;</span></div=
><div class=3D"line"><span class=3D"p">};</span></div><div class=3D"line"><=
/div><div class=3D"line"><span class=3D"k">struct</span> <span class=3D"n">=
editorConfig</span> <span class=3D"n">E</span><span class=3D"p">;</span></d=
iv><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">=
/*** terminal ***/</span></div><div class=3D"line folded"><span class=3D"cm=
">/*** append buffer ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** input ***/</span></div><div class=3D"line"><span class=3D"cm"=
>/*** init ***/</span></div><div class=3D"line"></div><div class=3D"line"><=
span class=3D"kt">void</span> <span class=3D"nf">initEditor</span><span cla=
ss=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D"line">  <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</spa=
n> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p=
">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span><span class=3D"p">;</span></div><ins class=3D"line"=
>  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">nu=
mrows</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span =
class=3D"p">;</span></ins><div class=3D"line"></div><div class=3D"line">  <=
span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">getW=
indowSize</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenro=
ws</span><span class=3D"p">,</span> <span class=3D"o">&amp;</span><span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</sp=
an><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span =
class=3D"n">die</span><span class=3D"p">(</span><span class=3D"s">"getWindo=
wSize"</span><span class=3D"p">);</span></div><div class=3D"line"><span cla=
ss=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded"=
><span class=3D"kt">int</span> <span class=3D"nf">main</span><span class=3D=
"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</spa=
n></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>erow</code> stands for =E2=80=9Ceditor row=E2=80=9D, and stores a =
line of text as a pointer to the
dynamically-allocated character data and a length. The <code>typedef</code>=
 lets us refer
to the type as <code>erow</code> instead of <code>struct erow</code>.</p>

<p>We add an <code>erow</code> value to the editor global state, as well as=
 a <code>numrows</code>
variable. For now, the editor will only display a single line of text, and =
so
<code>numrows</code> can be either <code>0</code> or <code>1</code>. We ini=
tialize it to <code>0</code> in <code>initEditor()</code>.</p>

<p>Let=E2=80=99s fill that <code>erow</code> with some text now. We won=E2=
=80=99t worry about reading from a
file just yet. Instead, we=E2=80=99ll hardcode a =E2=80=9CHello, world=E2=
=80=9D string into it.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/hello-world/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 56</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/hello-world">hello-world</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line"><span class=3D"cm"=
>/*** includes ***/</span></div><div class=3D"line"></div><div class=3D"lin=
e"><span class=3D"cp">#include &lt;ctype.h&gt;</span></div><div class=3D"li=
ne"><span class=3D"cp">#include &lt;errno.h&gt;</span></div><div class=3D"l=
ine"><span class=3D"cp">#include &lt;stdio.h&gt;</span></div><div class=3D"=
line"><span class=3D"cp">#include &lt;stdlib.h&gt;</span></div><div class=
=3D"line"><span class=3D"cp">#include &lt;string.h&gt;</span></div><div cla=
ss=3D"line"><span class=3D"cp">#include &lt;sys/ioctl.h&gt;</span></div><in=
s class=3D"line"><span class=3D"cp">#include &lt;sys/types.h&gt;</span></in=
s><div class=3D"line"><span class=3D"cp">#include &lt;termios.h&gt;</span><=
/div><div class=3D"line"><span class=3D"cp">#include &lt;unistd.h&gt;</span=
></div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"=
cm">/*** defines ***/</span></div><div class=3D"line folded"><span class=3D=
"cm">/*** data ***/</span></div><div class=3D"line"><span class=3D"cm">/***=
 terminal ***/</span></div><div class=3D"line"></div><div class=3D"line fol=
ded"><span class=3D"kt">void</span> <span class=3D"nf">die</span><span clas=
s=3D"p">(</span><span class=3D"k">const</span> <span class=3D"kt">char</spa=
n> <span class=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">)<=
/span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div=
><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">vo=
id</span> <span class=3D"nf">disableRawMode</span><span class=3D"p">()</spa=
n> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><di=
v class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</=
span> <span class=3D"nf">enableRawMode</span><span class=3D"p">()</span> <s=
pan class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div cla=
ss=3D"line"></div><div class=3D"line folded"><span class=3D"kt">int</span> =
<span class=3D"nf">editorReadKey</span><span class=3D"p">()</span> <span cl=
ass=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"=
line"></div><div class=3D"line folded"><span class=3D"kt">int</span> <span =
class=3D"nf">getCursorPosition</span><span class=3D"p">(</span><span class=
=3D"kt">int</span> <span class=3D"o">*</span><span class=3D"n">rows</span><=
span class=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D"o">*=
</span><span class=3D"n">cols</span><span class=3D"p">)</span> <span class=
=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"lin=
e"></div><div class=3D"line folded"><span class=3D"kt">int</span> <span cla=
ss=3D"nf">getWindowSize</span><span class=3D"p">(</span><span class=3D"kt">=
int</span> <span class=3D"o">*</span><span class=3D"n">rows</span><span cla=
ss=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D"o">*</span><=
span class=3D"n">cols</span><span class=3D"p">)</span> <span class=3D"p">{<=
/span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div>=
<ins class=3D"line"><span class=3D"cm">/*** file i/o ***/</span></ins><ins =
class=3D"line"></ins><ins class=3D"line"><span class=3D"kt">void</span> <sp=
an class=3D"nf">editorOpen</span><span class=3D"p">()</span> <span class=3D=
"p">{</span></ins><ins class=3D"line">  <span class=3D"kt">char</span> <spa=
n class=3D"o">*</span><span class=3D"n">line</span> <span class=3D"o">=3D</=
span> <span class=3D"s">"Hello, world!"</span><span class=3D"p">;</span></i=
ns><ins class=3D"line">  <span class=3D"kt">ssize_t</span> <span class=3D"n=
">linelen</span> <span class=3D"o">=3D</span> <span class=3D"mi">13</span><=
span class=3D"p">;</span></ins><ins class=3D"line"></ins><ins class=3D"line=
">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">r=
ow</span><span class=3D"p">.</span><span class=3D"n">size</span> <span clas=
s=3D"o">=3D</span> <span class=3D"n">linelen</span><span class=3D"p">;</spa=
n></ins><ins class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">row</span><span class=3D"p">.</span><span class=3D=
"n">chars</span> <span class=3D"o">=3D</span> <span class=3D"n">malloc</spa=
n><span class=3D"p">(</span><span class=3D"n">linelen</span> <span class=3D=
"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</span></ins><i=
ns class=3D"line">  <span class=3D"n">memcpy</span><span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row=
</span><span class=3D"p">.</span><span class=3D"n">chars</span><span class=
=3D"p">,</span> <span class=3D"n">line</span><span class=3D"p">,</span> <sp=
an class=3D"n">linelen</span><span class=3D"p">);</span></ins><ins class=3D=
"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D=
"n">row</span><span class=3D"p">.</span><span class=3D"n">chars</span><span=
 class=3D"p">[</span><span class=3D"n">linelen</span><span class=3D"p">]</s=
pan> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span class=
=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">numrows</span> <span class=3D"o">=3D<=
/span> <span class=3D"mi">1</span><span class=3D"p">;</span></ins><ins clas=
s=3D"line"><span class=3D"p">}</span></ins><div class=3D"line"></div><div c=
lass=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></div=
><div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></div=
><div class=3D"line folded"><span class=3D"cm">/*** input ***/</span></div>=
<div class=3D"line"><span class=3D"cm">/*** init ***/</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> =
<span class=3D"nf">initEditor</span><span class=3D"p">()</span> <span class=
=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"lin=
e"></div><div class=3D"line"><span class=3D"kt">int</span> <span class=3D"n=
f">main</span><span class=3D"p">()</span> <span class=3D"p">{</span></div><=
div class=3D"line">  <span class=3D"n">enableRawMode</span><span class=3D"p=
">();</span></div><div class=3D"line">  <span class=3D"n">initEditor</span>=
<span class=3D"p">();</span></div><ins class=3D"line">  <span class=3D"n">e=
ditorOpen</span><span class=3D"p">();</span></ins><div class=3D"line"></div=
><div class=3D"line">  <span class=3D"k">while</span> <span class=3D"p">(</=
span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p=
">{</span></div><div class=3D"line">    <span class=3D"n">editorRefreshScre=
en</span><span class=3D"p">();</span></div><div class=3D"line">    <span cl=
ass=3D"n">editorProcessKeypress</span><span class=3D"p">();</span></div><di=
v class=3D"line">  <span class=3D"p">}</span></div><div class=3D"line"></di=
v><div class=3D"line">  <span class=3D"k">return</span> <span class=3D"mi">=
0</span><span class=3D"p">;</span></div><div class=3D"line"><span class=3D"=
p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>malloc()</code> comes from <code>&lt;stdlib.h&gt;</code>. <code>ss=
ize_t</code> comes from <code>&lt;sys/types.h&gt;</code>.</p>

<p><code>editorOpen()</code> will eventually be for opening and reading a f=
ile from disk, so
we put it in a new <code>/*** file i/o ***/</code> section. To load our =E2=
=80=9CHello, world=E2=80=9D
message into the editor=E2=80=99s <code>erow</code> struct, we set the <cod=
e>size</code> field to the length
of our message, <code>malloc()</code> the necessary memory, and <code>memcp=
y()</code> the message to
the <code>chars</code> field which points to the memory we allocated. Final=
ly, we set the
<code>E.numrows</code> variable to <code>1</code>, to indicate that the <co=
de>erow</code> now contains a line
that should be displayed.</p>

<p>Let=E2=80=99s display it then.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/draw-erow/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 57</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/draw-erow">draw-erow</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line"><span =
class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div><div cl=
ass=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorDrawRo=
ws</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span cl=
ass=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span>=
<span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"li=
ne">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</span> <sp=
an class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=3D</sp=
an> <span class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n"=
>y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</sp=
an> <span class=3D"n">y</span><span class=3D"o">++</span><span class=3D"p">=
)</span> <span class=3D"p">{</span></div><ins class=3D"line">    <span clas=
s=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">y</span> <spa=
n class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">numrows</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span></ins><div class=3D"line">      <span class=3D"k">if</span>=
 <span class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screenrows</span> <span class=3D"o">/</span> <span class=3D"mi">3</s=
pan><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=
=3D"line">        <span class=3D"kt">char</span> <span class=3D"n">welcome<=
/span><span class=3D"p">[</span><span class=3D"mi">80</span><span class=3D"=
p">];</span></div><div class=3D"line">        <span class=3D"kt">int</span>=
 <span class=3D"n">welcomelen</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"n">snprintf</span><span class=3D"p">(</span><span class=3D"n">welcome=
</span><span class=3D"p">,</span> <span class=3D"k">sizeof</span><span clas=
s=3D"p">(</span><span class=3D"n">welcome</span><span class=3D"p">),</span>=
</div><div class=3D"line">          <span class=3D"s">"Kilo editor -- versi=
on %s"</span><span class=3D"p">,</span> <span class=3D"n">KILO_VERSION</spa=
n><span class=3D"p">);</span></div><div class=3D"line">        <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">welcomelen</sp=
an> <span class=3D"o">&gt;</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">screencols</span><span class=3D"p">)</span> <s=
pan class=3D"n">welcomelen</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span=
><span class=3D"p">;</span></div><div class=3D"line">        <span class=3D=
"kt">int</span> <span class=3D"n">padding</span> <span class=3D"o">=3D</spa=
n> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">screencols</span> <span class=3D"o">-</span> <span =
class=3D"n">welcomelen</span><span class=3D"p">)</span> <span class=3D"o">/=
</span> <span class=3D"mi">2</span><span class=3D"p">;</span></div><div cla=
ss=3D"line">        <span class=3D"k">if</span> <span class=3D"p">(</span><=
span class=3D"n">padding</span><span class=3D"p">)</span> <span class=3D"p"=
>{</span></div><div class=3D"line">          <span class=3D"n">abAppend</sp=
an><span class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,=
</span> <span class=3D"s">"~"</span><span class=3D"p">,</span> <span class=
=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">      =
    <span class=3D"n">padding</span><span class=3D"o">--</span><span class=
=3D"p">;</span></div><div class=3D"line">        <span class=3D"p">}</span>=
</div><div class=3D"line">        <span class=3D"k">while</span> <span clas=
s=3D"p">(</span><span class=3D"n">padding</span><span class=3D"o">--</span>=
<span class=3D"p">)</span> <span class=3D"n">abAppend</span><span class=3D"=
p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span clas=
s=3D"s">" "</span><span class=3D"p">,</span> <span class=3D"mi">1</span><sp=
an class=3D"p">);</span></div><div class=3D"line">        <span class=3D"n"=
>abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span =
class=3D"p">,</span> <span class=3D"n">welcome</span><span class=3D"p">,</s=
pan> <span class=3D"n">welcomelen</span><span class=3D"p">);</span></div><d=
iv class=3D"line">      <span class=3D"p">}</span> <span class=3D"k">else</=
span> <span class=3D"p">{</span></div><div class=3D"line">        <span cla=
ss=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</spa=
n><span class=3D"p">,</span> <span class=3D"s">"~"</span><span class=3D"p">=
,</span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><div c=
lass=3D"line">      <span class=3D"p">}</span></div><ins class=3D"line">   =
 <span class=3D"p">}</span> <span class=3D"k">else</span> <span class=3D"p"=
>{</span></ins><ins class=3D"line">      <span class=3D"kt">int</span> <spa=
n class=3D"n">len</span> <span class=3D"o">=3D</span> <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p=
">.</span><span class=3D"n">size</span><span class=3D"p">;</span></ins><ins=
 class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</span=
><span class=3D"n">len</span> <span class=3D"o">&gt;</span> <span class=3D"=
n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><sp=
an class=3D"p">)</span> <span class=3D"n">len</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">screencols</span><span class=3D"p">;</span></ins><ins class=3D"line">    =
  <span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D=
"n">ab</span><span class=3D"p">,</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">.</span><spa=
n class=3D"n">chars</span><span class=3D"p">,</span> <span class=3D"n">len<=
/span><span class=3D"p">);</span></ins><ins class=3D"line">    <span class=
=3D"p">}</span></ins><div class=3D"line"></div><div class=3D"line">    <spa=
n class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab=
</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"=
se">\x1b</span><span class=3D"s">[K"</span><span class=3D"p">,</span> <span=
 class=3D"mi">3</span><span class=3D"p">);</span></div><div class=3D"line">=
    <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n"=
>y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">-</s=
pan> <span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p=
">{</span></div><div class=3D"line">      <span class=3D"n">abAppend</span>=
<span class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</s=
pan> <span class=3D"s">"</span><span class=3D"se">\r\n</span><span class=3D=
"s">"</span><span class=3D"p">,</span> <span class=3D"mi">2</span><span cla=
ss=3D"p">);</span></div><div class=3D"line">    <span class=3D"p">}</span><=
/div><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"li=
ne"><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D=
"line folded"><span class=3D"kt">void</span> <span class=3D"nf">editorRefre=
shScreen</span><span class=3D"p">()</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code></pre=
>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We wrap our previous row-drawing code in an <code>if</code> statement th=
at checks whether
we are currently drawing a row that is part of the text buffer, or a row th=
at
comes after the end of the text buffer.</p>

<p>To draw a row that=E2=80=99s part of the text buffer, we simply write ou=
t the <code>chars</code>
field of the <code>erow</code>. But first, we take care to truncate the ren=
dered line if
it would go past the end of the screen.</p>

<p>Next, let=E2=80=99s allow the user to open an actual file. We=E2=80=99ll=
 read and display the
first line of the file.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/open-file/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 58</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/open-file">open-file</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** file i/o ***/</span></div><div class=3D"line"></div><ins class=3D"=
line"><span class=3D"kt">void</span> <span class=3D"n">editorOpen</span><sp=
an class=3D"p">(</span><span class=3D"kt">char</span> <span class=3D"o">*</=
span><span class=3D"n">filename</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"kt">FILE</span> =
<span class=3D"o">*</span><span class=3D"n">fp</span> <span class=3D"o">=3D=
</span> <span class=3D"n">fopen</span><span class=3D"p">(</span><span class=
=3D"n">filename</span><span class=3D"p">,</span> <span class=3D"s">"r"</spa=
n><span class=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"o">!</span><span class=
=3D"n">fp</span><span class=3D"p">)</span> <span class=3D"n">die</span><spa=
n class=3D"p">(</span><span class=3D"s">"fopen"</span><span class=3D"p">);<=
/span></ins><div class=3D"line"></div><ins class=3D"line">  <span class=3D"=
kt">char</span> <span class=3D"o">*</span><span class=3D"n">line</span> <sp=
an class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;=
</span></ins><ins class=3D"line">  <span class=3D"kt">size_t</span> <span c=
lass=3D"n">linecap</span> <span class=3D"o">=3D</span> <span class=3D"mi">0=
</span><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D=
"kt">ssize_t</span> <span class=3D"n">linelen</span><span class=3D"p">;</sp=
an></ins><ins class=3D"line">  <span class=3D"n">linelen</span> <span class=
=3D"o">=3D</span> <span class=3D"n">getline</span><span class=3D"p">(</span=
><span class=3D"o">&amp;</span><span class=3D"n">line</span><span class=3D"=
p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">linecap</span><=
span class=3D"p">,</span> <span class=3D"n">fp</span><span class=3D"p">);</=
span></ins><ins class=3D"line">  <span class=3D"k">if</span> <span class=3D=
"p">(</span><span class=3D"n">linelen</span> <span class=3D"o">!=3D</span> =
<span class=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</s=
pan> <span class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D=
"k">while</span> <span class=3D"p">(</span><span class=3D"n">linelen</span>=
 <span class=3D"o">&gt;</span> <span class=3D"mi">0</span> <span class=3D"o=
">&amp;&amp;</span> <span class=3D"p">(</span><span class=3D"n">line</span>=
<span class=3D"p">[</span><span class=3D"n">linelen</span> <span class=3D"o=
">-</span> <span class=3D"mi">1</span><span class=3D"p">]</span> <span clas=
s=3D"o">=3D=3D</span> <span class=3D"sc">'\n'</span> <span class=3D"o">||</=
span></ins><ins class=3D"line">                           <span class=3D"n"=
>line</span><span class=3D"p">[</span><span class=3D"n">linelen</span> <spa=
n class=3D"o">-</span> <span class=3D"mi">1</span><span class=3D"p">]</span=
> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'\r'</span><span class=
=3D"p">))</span></ins><ins class=3D"line">      <span class=3D"n">linelen</=
span><span class=3D"o">--</span><span class=3D"p">;</span></ins><div class=
=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span><span cla=
ss=3D"n">row</span><span class=3D"p">.</span><span class=3D"n">size</span> =
<span class=3D"o">=3D</span> <span class=3D"n">linelen</span><span class=3D=
"p">;</span></div><div class=3D"line">    <span class=3D"n">E</span><span c=
lass=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">.</span><s=
pan class=3D"n">chars</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>malloc</span><span class=3D"p">(</span><span class=3D"n">linelen</span> <s=
pan class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</s=
pan></div><div class=3D"line">    <span class=3D"n">memcpy</span><span clas=
s=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">row</span><span class=3D"p">.</span><span class=3D"n">chars</spa=
n><span class=3D"p">,</span> <span class=3D"n">line</span><span class=3D"p"=
>,</span> <span class=3D"n">linelen</span><span class=3D"p">);</span></div>=
<div class=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">row</span><span class=3D"p">.</span><span class=3D"n">ch=
ars</span><span class=3D"p">[</span><span class=3D"n">linelen</span><span c=
lass=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'</s=
pan><span class=3D"p">;</span></div><div class=3D"line">    <span class=3D"=
n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span> <span=
 class=3D"o">=3D</span> <span class=3D"mi">1</span><span class=3D"p">;</spa=
n></div><ins class=3D"line">  <span class=3D"p">}</span></ins><ins class=3D=
"line">  <span class=3D"n">free</span><span class=3D"p">(</span><span class=
=3D"n">line</span><span class=3D"p">);</span></ins><ins class=3D"line">  <s=
pan class=3D"n">fclose</span><span class=3D"p">(</span><span class=3D"n">fp=
</span><span class=3D"p">);</span></ins><div class=3D"line"><span class=3D"=
p">}</span></div><div class=3D"line"></div><div class=3D"line folded"><span=
 class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"><span =
class=3D"cm">/*** init ***/</span></div><div class=3D"line"></div><div clas=
s=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n">initEdit=
or</span><span class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <=
span class=3D"p">}</span></div><div class=3D"line"></div><ins class=3D"line=
"><span class=3D"kt">int</span> <span class=3D"n">main</span><span class=3D=
"p">(</span><span class=3D"kt">int</span> <span class=3D"n">argc</span><spa=
n class=3D"p">,</span> <span class=3D"kt">char</span> <span class=3D"o">*</=
span><span class=3D"n">argv</span><span class=3D"p">[])</span> <span class=
=3D"p">{</span></ins><div class=3D"line">  <span class=3D"n">enableRawMode<=
/span><span class=3D"p">();</span></div><div class=3D"line">  <span class=
=3D"n">initEditor</span><span class=3D"p">();</span></div><ins class=3D"lin=
e">  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n=
">argc</span> <span class=3D"o">&gt;=3D</span> <span class=3D"mi">2</span><=
span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"lin=
e">    <span class=3D"n">editorOpen</span><span class=3D"p">(</span><span c=
lass=3D"n">argv</span><span class=3D"p">[</span><span class=3D"mi">1</span>=
<span class=3D"p">]);</span></ins><ins class=3D"line">  <span class=3D"p">}=
</span></ins><div class=3D"line"></div><div class=3D"line">  <span class=3D=
"k">while</span> <span class=3D"p">(</span><span class=3D"mi">1</span><span=
 class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line"> =
   <span class=3D"n">editorRefreshScreen</span><span class=3D"p">();</span>=
</div><div class=3D"line">    <span class=3D"n">editorProcessKeypress</span=
><span class=3D"p">();</span></div><div class=3D"line">  <span class=3D"p">=
}</span></div><div class=3D"line"></div><div class=3D"line">  <span class=
=3D"k">return</span> <span class=3D"mi">0</span><span class=3D"p">;</span><=
/div><div class=3D"line"><span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c-unknown">=E2=99=8B=EF=B8=8E may or may not compi=
le</div>
</div>
</div>


<p><code>FILE</code>, <code>fopen()</code>, and <code>getline()</code> come=
 from <code>&lt;stdio.h&gt;</code>.</p>

<p>The core of <code>editorOpen()</code> is the same, we just get the <code=
>line</code> and <code>linelen</code>
values from <code>getline()</code> now, instead of hardcoded values.</p>

<p><code>editorOpen()</code> now takes a filename and opens the file for re=
ading using
<code>fopen()</code>. We allow the user to choose a file to open by checkin=
g if they
passed a filename as a command line argument. If they did, we call
<code>editorOpen()</code> and pass it the filename. If they ran <code>./kil=
o</code> with no
arguments, <code>editorOpen()</code> will not be called and they=E2=80=99ll=
 start with a blank
file.</p>

<p><code>getline()</code> is useful for reading lines from a file when we d=
on=E2=80=99t know how much
memory to allocate for each line. It takes care of memory management for yo=
u.
First, we pass it a null <code>line</code> pointer and a <code>linecap</cod=
e> (line capacity) of <code>0</code>.
That makes it allocate new memory for the next line it reads, and set <code=
>line</code> to
point to the memory, and set <code>linecap</code> to let you know how much =
memory it
allocated. Its return value is the length of the line it read, or <code>-1<=
/code> if it=E2=80=99s
at the end of the file and there are no more lines to read. Later, when we =
have
<code>editorOpen()</code> read multiple lines of a file, we will be able to=
 feed the new
<code>line</code> and <code>linecap</code> values back into <code>getline()=
</code> over and over, and it will
try and reuse the memory that <code>line</code> points to as long as the <c=
ode>linecap</code> is big
enough to fit the next line it reads. For now, we just copy the one line it
reads into <code>E.row.chars</code>, and then <code>free()</code> the <code=
>line</code> that <code>getline()</code>
allocated.</p>

<p>We also strip off the newline or carriage return at the end of the line =
before
copying it into our <code>erow</code>. We know each <code>erow</code> repre=
sents one line of text, so
there=E2=80=99s no use storing a newline character at the end of each one.<=
/p>

<p>If your compiler complains about <code>getline()</code>, you may need to=
 define a <a href=3D"https://www.gnu.org/software/libc/manual/html_node/Fea=
ture-Test-Macros.html">feature
test macro</a>.
Even if it compiles fine on your machine without them, let=E2=80=99s add th=
em to make
our code more portable.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/feature-test-macros/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 59</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/feature-test-macros">feature-test-macros</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line"><span class=3D"cm"=
>/*** includes ***/</span></div><div class=3D"line"></div><ins class=3D"lin=
e"><span class=3D"cp">#define _DEFAULT_SOURCE</span></ins><ins class=3D"lin=
e"><span class=3D"cp">#define _BSD_SOURCE</span></ins><ins class=3D"line"><=
span class=3D"cp">#define _GNU_SOURCE</span></ins><div class=3D"line"></div=
><div class=3D"line"><span class=3D"cp">#include &lt;ctype.h&gt;</span></di=
v><div class=3D"line"><span class=3D"cp">#include &lt;errno.h&gt;</span></d=
iv><div class=3D"line"><span class=3D"cp">#include &lt;stdio.h&gt;</span></=
div><div class=3D"line"><span class=3D"cp">#include &lt;stdlib.h&gt;</span>=
</div><div class=3D"line"><span class=3D"cp">#include &lt;string.h&gt;</spa=
n></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/ioctl.h&gt;=
</span></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/types.=
h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;termi=
os.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;un=
istd.h&gt;</span></div><div class=3D"line"></div><div class=3D"line folded"=
><span class=3D"cm">/*** defines ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** data ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"li=
ne folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"li=
ne folded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"lin=
e folded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We add them above our includes, because the header files we=E2=80=99re i=
ncluding use
the macros to decide what features to expose.</p>

<p>Now let=E2=80=99s fix a quick bug. We want the welcome message to only d=
isplay when the
user starts the program with no arguments, and not when they open a file, a=
s
the welcome message could get in the way of displaying the file.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/hide-welcome/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 60</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/hide-welcome">hide-welcome</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><span =
class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line"><span =
class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div><div cl=
ass=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorDrawRo=
ws</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span cl=
ass=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span>=
<span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"li=
ne">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</span> <sp=
an class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=3D</sp=
an> <span class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n"=
>y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</sp=
an> <span class=3D"n">y</span><span class=3D"o">++</span><span class=3D"p">=
)</span> <span class=3D"p">{</span></div><div class=3D"line">    <span clas=
s=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">y</span> <spa=
n class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">numrows</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span></div><ins class=3D"line">      <span class=3D"k">if</span>=
 <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">numrows</span> <span class=3D"o">=3D=3D</span> <span =
class=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n"=
>y</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</span><span c=
lass=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">/<=
/span> <span class=3D"mi">3</span><span class=3D"p">)</span> <span class=3D=
"p">{</span></ins><div class=3D"line">        <span class=3D"kt">char</span=
> <span class=3D"n">welcome</span><span class=3D"p">[</span><span class=3D"=
mi">80</span><span class=3D"p">];</span></div><div class=3D"line">        <=
span class=3D"kt">int</span> <span class=3D"n">welcomelen</span> <span clas=
s=3D"o">=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</sp=
an><span class=3D"n">welcome</span><span class=3D"p">,</span> <span class=
=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">welcome</sp=
an><span class=3D"p">),</span></div><div class=3D"line">          <span cla=
ss=3D"s">"Kilo editor -- version %s"</span><span class=3D"p">,</span> <span=
 class=3D"n">KILO_VERSION</span><span class=3D"p">);</span></div><div class=
=3D"line">        <span class=3D"k">if</span> <span class=3D"p">(</span><sp=
an class=3D"n">welcomelen</span> <span class=3D"o">&gt;</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span=
><span class=3D"p">)</span> <span class=3D"n">welcomelen</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">screencols</span><span class=3D"p">;</span></div><div class=3D=
"line">        <span class=3D"kt">int</span> <span class=3D"n">padding</spa=
n> <span class=3D"o">=3D</span> <span class=3D"p">(</span><span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">screencols</span> <spa=
n class=3D"o">-</span> <span class=3D"n">welcomelen</span><span class=3D"p"=
>)</span> <span class=3D"o">/</span> <span class=3D"mi">2</span><span class=
=3D"p">;</span></div><div class=3D"line">        <span class=3D"k">if</span=
> <span class=3D"p">(</span><span class=3D"n">padding</span><span class=3D"=
p">)</span> <span class=3D"p">{</span></div><div class=3D"line">          <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"~"</span><span clas=
s=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"p">);</span></di=
v><div class=3D"line">          <span class=3D"n">padding</span><span class=
=3D"o">--</span><span class=3D"p">;</span></div><div class=3D"line">       =
 <span class=3D"p">}</span></div><div class=3D"line">        <span class=3D=
"k">while</span> <span class=3D"p">(</span><span class=3D"n">padding</span>=
<span class=3D"o">--</span><span class=3D"p">)</span> <span class=3D"n">abA=
ppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span clas=
s=3D"p">,</span> <span class=3D"s">" "</span><span class=3D"p">,</span> <sp=
an class=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line=
">        <span class=3D"n">abAppend</span><span class=3D"p">(</span><span =
class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">welcome</=
span><span class=3D"p">,</span> <span class=3D"n">welcomelen</span><span cl=
ass=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</spa=
n> <span class=3D"k">else</span> <span class=3D"p">{</span></div><div class=
=3D"line">        <span class=3D"n">abAppend</span><span class=3D"p">(</spa=
n><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"=
~"</span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span><=
/div><div class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">e=
lse</span> <span class=3D"p">{</span></div><div class=3D"line">      <span =
class=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">row</span><span class=3D"p">.</span><span class=3D"n">size</span><span cl=
ass=3D"p">;</span></div><div class=3D"line">      <span class=3D"k">if</spa=
n> <span class=3D"p">(</span><span class=3D"n">len</span> <span class=3D"o"=
>&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">screencols</span><span class=3D"p">)</span> <span class=3D"n">len</=
span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">screencols</span><span class=3D"p">;</span></=
div><div class=3D"line">      <span class=3D"n">abAppend</span><span class=
=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><=
span class=3D"p">.</span><span class=3D"n">chars</span><span class=3D"p">,<=
/span> <span class=3D"n">len</span><span class=3D"p">);</span></div><div cl=
ass=3D"line">    <span class=3D"p">}</span></div><div class=3D"line"></div>=
<div class=3D"line">    <span class=3D"n">abAppend</span><span class=3D"p">=
(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=
=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[K"</span><s=
pan class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</s=
pan></div><div class=3D"line">    <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">&lt;</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenro=
ws</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=
=3D"se">\r\n</span><span class=3D"s">"</span><span class=3D"p">,</span> <sp=
an class=3D"mi">2</span><span class=3D"p">);</span></div><div class=3D"line=
">    <span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"=
p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</spa=
n> <span class=3D"n">editorRefreshScreen</span><span class=3D"p">()</span> =
<span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** inpu=
t ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** init =
***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>There, now the welcome message only displays if the text buffer is compl=
etely
empty.</p>
<h2 id=3D"multiple-lines"><a href=3D"https://viewsourcecode.org/snaptoken/k=
ilo/04.aTextViewer.html#multiple-lines">Multiple lines</a></h2>

<p>To store multiple lines, let=E2=80=99s make <code>E.row</code> an array =
of <code>erow</code> structs. It will
be a dynamically-allocated array, so we=E2=80=99ll make it a pointer to <co=
de>erow</code>, and
initialize the pointer to <code>NULL</code>. (This will break a bunch of ou=
r code that
doesn=E2=80=99t expect <code>E.row</code> to be a pointer, so the program w=
ill fail to compile for
the next few steps.)</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/erow-array/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 61</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/erow-array">erow-array</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span></di=
v><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">cy</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">screenrows</span><span class=3D"p">;</span></div><div class=3D"=
line">  <span class=3D"kt">int</span> <span class=3D"n">screencols</span><s=
pan class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int<=
/span> <span class=3D"n">numrows</span><span class=3D"p">;</span></div><ins=
 class=3D"line">  <span class=3D"n">erow</span> <span class=3D"o">*</span><=
span class=3D"n">row</span><span class=3D"p">;</span></ins><div class=3D"li=
ne">  <span class=3D"k">struct</span> <span class=3D"n">termios</span> <spa=
n class=3D"n">orig_termios</span><span class=3D"p">;</span></div><div class=
=3D"line"><span class=3D"p">};</span></div><div class=3D"line"></div><div c=
lass=3D"line"><span class=3D"k">struct</span> <span class=3D"n">editorConfi=
g</span> <span class=3D"n">E</span><span class=3D"p">;</span></div><div cla=
ss=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** termin=
al ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** file=
 i/o ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** ap=
pend buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** output ***/</span></div><div class=3D"line folded"><span class=3D"cm">=
/*** input ***/</span></div><div class=3D"line"><span class=3D"cm">/*** ini=
t ***/</span></div><div class=3D"line"></div><div class=3D"line"><span clas=
s=3D"kt">void</span> <span class=3D"nf">initEditor</span><span class=3D"p">=
()</span> <span class=3D"p">{</span></div><div class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <span =
class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span=
></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</s=
pan> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D=
"p">;</span></div><ins class=3D"line">  <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">row</span> <span class=3D"o">=3D</span> =
<span class=3D"nb">NULL</span><span class=3D"p">;</span></ins><div class=3D=
"line"></div><div class=3D"line">  <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">getWindowSize</span><span class=3D"p">(</s=
pan><span class=3D"o">&amp;</span><span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">screenrows</span><span class=3D"p">,</span> <s=
pan class=3D"o">&amp;</span><span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">screencols</span><span class=3D"p">)</span> <span cl=
ass=3D"o">=3D=3D</span> <span class=3D"o">-</span><span class=3D"mi">1</spa=
n><span class=3D"p">)</span> <span class=3D"n">die</span><span class=3D"p">=
(</span><span class=3D"s">"getWindowSize"</span><span class=3D"p">);</span>=
</div><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"lin=
e"></div><div class=3D"line folded"><span class=3D"kt">int</span> <span cla=
ss=3D"nf">main</span><span class=3D"p">(</span><span class=3D"kt">int</span=
> <span class=3D"n">argc</span><span class=3D"p">,</span> <span class=3D"kt=
">char</span> <span class=3D"o">*</span><span class=3D"n">argv</span><span =
class=3D"p">[])</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"=
p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c0">=E2=99=8F=EF=B8=8E doesn=E2=80=99t compile</di=
v>
</div>
</div>


<p>Next, let=E2=80=99s move the code in <code>editorOpen()</code> that init=
ializes <code>E.row</code> to a new
function called <code>editorAppendRow()</code>. We=E2=80=99ll also put it u=
nder a new section,
<code>/*** row operations ***/</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/append-row/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 62</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/append-row">append-row</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line"><span class=3D"cm=
">/*** terminal ***/</span></div><div class=3D"line"></div><div class=3D"li=
ne folded"><span class=3D"kt">void</span> <span class=3D"nf">die</span><spa=
n class=3D"p">(</span><span class=3D"k">const</span> <span class=3D"kt">cha=
r</span> <span class=3D"o">*</span><span class=3D"n">s</span><span class=3D=
"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span=
></div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"=
kt">void</span> <span class=3D"nf">disableRawMode</span><span class=3D"p">(=
)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></d=
iv><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">=
void</span> <span class=3D"nf">enableRawMode</span><span class=3D"p">()</sp=
an> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">int</=
span> <span class=3D"nf">editorReadKey</span><span class=3D"p">()</span> <s=
pan class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div cla=
ss=3D"line"></div><div class=3D"line folded"><span class=3D"kt">int</span> =
<span class=3D"nf">getCursorPosition</span><span class=3D"p">(</span><span =
class=3D"kt">int</span> <span class=3D"o">*</span><span class=3D"n">rows</s=
pan><span class=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D=
"o">*</span><span class=3D"n">cols</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D=
"line"></div><div class=3D"line folded"><span class=3D"kt">int</span> <span=
 class=3D"nf">getWindowSize</span><span class=3D"p">(</span><span class=3D"=
kt">int</span> <span class=3D"o">*</span><span class=3D"n">rows</span><span=
 class=3D"p">,</span> <span class=3D"kt">int</span> <span class=3D"o">*</sp=
an><span class=3D"n">cols</span><span class=3D"p">)</span> <span class=3D"p=
">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></=
div><ins class=3D"line"><span class=3D"cm">/*** row operations ***/</span><=
/ins><ins class=3D"line"></ins><ins class=3D"line"><span class=3D"kt">void<=
/span> <span class=3D"nf">editorAppendRow</span><span class=3D"p">(</span><=
span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">s=
</span><span class=3D"p">,</span> <span class=3D"kt">size_t</span> <span cl=
ass=3D"n">len</span><span class=3D"p">)</span> <span class=3D"p">{</span></=
ins><ins class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">row</span><span class=3D"p">.</span><span class=3D"n">=
size</span> <span class=3D"o">=3D</span> <span class=3D"n">len</span><span =
class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">E</span><=
span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">.</s=
pan><span class=3D"n">chars</span> <span class=3D"o">=3D</span> <span class=
=3D"n">malloc</span><span class=3D"p">(</span><span class=3D"n">len</span> =
<span class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);<=
/span></ins><ins class=3D"line">  <span class=3D"n">memcpy</span><span clas=
s=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">row</span><span class=3D"p">.</span><span class=3D"n">chars</spa=
n><span class=3D"p">,</span> <span class=3D"n">s</span><span class=3D"p">,<=
/span> <span class=3D"n">len</span><span class=3D"p">);</span></ins><ins cl=
ass=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">row</span><span class=3D"p">.</span><span class=3D"n">chars</span=
><span class=3D"p">[</span><span class=3D"n">len</span><span class=3D"p">]<=
/span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span cla=
ss=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">numrows</span> <span class=3D"o">=
=3D</span> <span class=3D"mi">1</span><span class=3D"p">;</span></ins><ins =
class=3D"line"><span class=3D"p">}</span></ins><div class=3D"line"></div><d=
iv class=3D"line"><span class=3D"cm">/*** file i/o ***/</span></div><div cl=
ass=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span=
 class=3D"nf">editorOpen</span><span class=3D"p">(</span><span class=3D"kt"=
>char</span> <span class=3D"o">*</span><span class=3D"n">filename</span><sp=
an class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line"=
>  <span class=3D"kt">FILE</span> <span class=3D"o">*</span><span class=3D"=
n">fp</span> <span class=3D"o">=3D</span> <span class=3D"n">fopen</span><sp=
an class=3D"p">(</span><span class=3D"n">filename</span><span class=3D"p">,=
</span> <span class=3D"s">"r"</span><span class=3D"p">);</span></div><div c=
lass=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span><span=
 class=3D"o">!</span><span class=3D"n">fp</span><span class=3D"p">)</span> =
<span class=3D"n">die</span><span class=3D"p">(</span><span class=3D"s">"fo=
pen"</span><span class=3D"p">);</span></div><div class=3D"line"></div><div =
class=3D"line">  <span class=3D"kt">char</span> <span class=3D"o">*</span><=
span class=3D"n">line</span> <span class=3D"o">=3D</span> <span class=3D"nb=
">NULL</span><span class=3D"p">;</span></div><div class=3D"line">  <span cl=
ass=3D"kt">size_t</span> <span class=3D"n">linecap</span> <span class=3D"o"=
>=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"kt">ssize_t</span> <span class=3D"n">linel=
en</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=
=3D"n">linelen</span> <span class=3D"o">=3D</span> <span class=3D"n">getlin=
e</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=
=3D"n">line</span><span class=3D"p">,</span> <span class=3D"o">&amp;</span>=
<span class=3D"n">linecap</span><span class=3D"p">,</span> <span class=3D"n=
">fp</span><span class=3D"p">);</span></div><div class=3D"line">  <span cla=
ss=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">linelen</spa=
n> <span class=3D"o">!=3D</span> <span class=3D"o">-</span><span class=3D"m=
i">1</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div =
class=3D"line">    <span class=3D"k">while</span> <span class=3D"p">(</span=
><span class=3D"n">linelen</span> <span class=3D"o">&gt;</span> <span class=
=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"p">(</s=
pan><span class=3D"n">line</span><span class=3D"p">[</span><span class=3D"n=
">linelen</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><spa=
n class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'=
\n'</span> <span class=3D"o">||</span></div><div class=3D"line">           =
                <span class=3D"n">line</span><span class=3D"p">[</span><spa=
n class=3D"n">linelen</span> <span class=3D"o">-</span> <span class=3D"mi">=
1</span><span class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span cl=
ass=3D"sc">'\r'</span><span class=3D"p">))</span></div><div class=3D"line">=
      <span class=3D"n">linelen</span><span class=3D"o">--</span><span clas=
s=3D"p">;</span></div><ins class=3D"line">    <span class=3D"n">editorAppen=
dRow</span><span class=3D"p">(</span><span class=3D"n">line</span><span cla=
ss=3D"p">,</span> <span class=3D"n">linelen</span><span class=3D"p">);</spa=
n></ins><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D=
"line">  <span class=3D"n">free</span><span class=3D"p">(</span><span class=
=3D"n">line</span><span class=3D"p">);</span></div><div class=3D"line">  <s=
pan class=3D"n">fclose</span><span class=3D"p">(</span><span class=3D"n">fp=
</span><span class=3D"p">);</span></div><div class=3D"line"><span class=3D"=
p">}</span></div><div class=3D"line"></div><div class=3D"line folded"><span=
 class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"=
><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c0">=E2=99=8F=EF=B8=8E doesn=E2=80=99t compile</di=
v>
</div>
</div>


<p>Notice that we renamed the <code>line</code> and <code>linelen</code> va=
riables to <code>s</code> and <code>len</code>,
which are now arguments to <code>editorAppendRow()</code>.</p>

<p>We want <code>editorAppendRow()</code> to allocate space for a new <code=
>erow</code>, and then copy
the given string to a new <code>erow</code> at the end of the <code>E.row</=
code> array. Let=E2=80=99s do that
now.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/fix-append-row/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 63</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/fix-append-row">fix-append-row</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line"></div><div cla=
ss=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorAppendR=
ow</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span cla=
ss=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> <span=
 class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D"p">)=
</span> <span class=3D"p">{</span></div><ins class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">realloc</span><span class=3D"p">(=
</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">row</span><span class=3D"p">,</span> <span class=3D"k">sizeof</span><span=
 class=3D"p">(</span><span class=3D"n">erow</span><span class=3D"p">)</span=
> <span class=3D"o">*</span> <span class=3D"p">(</span><span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">numrows</span> <span clas=
s=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">));</span></i=
ns><ins class=3D"line"></ins><ins class=3D"line">  <span class=3D"kt">int</=
span> <span class=3D"n">at</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">=
[</span><span class=3D"n">at</span><span class=3D"p">].</span><span class=
=3D"n">size</span> <span class=3D"o">=3D</span> <span class=3D"n">len</span=
><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"=
p">[</span><span class=3D"n">at</span><span class=3D"p">].</span><span clas=
s=3D"n">chars</span> <span class=3D"o">=3D</span> <span class=3D"n">malloc<=
/span><span class=3D"p">(</span><span class=3D"n">len</span> <span class=3D=
"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</span></ins><i=
ns class=3D"line">  <span class=3D"n">memcpy</span><span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row=
</span><span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"=
p">].</span><span class=3D"n">chars</span><span class=3D"p">,</span> <span =
class=3D"n">s</span><span class=3D"p">,</span> <span class=3D"n">len</span>=
<span class=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"=
p">[</span><span class=3D"n">at</span><span class=3D"p">].</span><span clas=
s=3D"n">chars</span><span class=3D"p">[</span><span class=3D"n">len</span><=
span class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'=
\0'</span><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"o">++</span><span class=3D"p">;</span></ins><div class=3D"line=
"><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"l=
ine folded"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D=
"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><div c=
lass=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><div c=
lass=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><div cl=
ass=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code></=
pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c0">=E2=99=8F=EF=B8=8E doesn=E2=80=99t compile</di=
v>
</div>
</div>


<p>We have to tell <code>realloc()</code> how many bytes we want to allocat=
e, so we multiply
the number of bytes each <code>erow</code> takes (<code>sizeof(erow)</code>=
) and multiply that by the
number of rows we want. Then we set <code>at</code> to the index of the new=
 row we want to
initialize, and replace each occurrence of <code>E.row</code> with <code>E.=
row[at]</code>. Lastly, we
change <code>E.numrows =3D 1</code> to <code>E.numrows++</code>.</p>

<p>Next, let=E2=80=99s update <code>editorDrawRows()</code> to use <code>E.=
row[y]</code> instead of <code>E.row</code>,
when printing out the current line.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/draw-multiple-erows/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 64</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/draw-multiple-erows">draw-multiple-erows</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span> =
<span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">a=
b</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div cla=
ss=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</spa=
n> <span class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=
=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span> <span clas=
s=3D"n">y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p=
">;</span> <span class=3D"n">y</span><span class=3D"o">++</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">    <sp=
an class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">y</spa=
n> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span> <=
span class=3D"p">{</span></div><div class=3D"line">      <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">numrows</span> <span class=3D"o">=3D=3D</s=
pan> <span class=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span =
class=3D"n">y</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">screenrows</span> <span cla=
ss=3D"o">/</span> <span class=3D"mi">3</span><span class=3D"p">)</span> <sp=
an class=3D"p">{</span></div><div class=3D"line">        <span class=3D"kt"=
>char</span> <span class=3D"n">welcome</span><span class=3D"p">[</span><spa=
n class=3D"mi">80</span><span class=3D"p">];</span></div><div class=3D"line=
">        <span class=3D"kt">int</span> <span class=3D"n">welcomelen</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">snprintf</span><span class=
=3D"p">(</span><span class=3D"n">welcome</span><span class=3D"p">,</span> <=
span class=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">w=
elcome</span><span class=3D"p">),</span></div><div class=3D"line">         =
 <span class=3D"s">"Kilo editor -- version %s"</span><span class=3D"p">,</s=
pan> <span class=3D"n">KILO_VERSION</span><span class=3D"p">);</span></div>=
<div class=3D"line">        <span class=3D"k">if</span> <span class=3D"p">(=
</span><span class=3D"n">welcomelen</span> <span class=3D"o">&gt;</span> <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenc=
ols</span><span class=3D"p">)</span> <span class=3D"n">welcomelen</span> <s=
pan class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">screencols</span><span class=3D"p">;</span></div><div=
 class=3D"line">        <span class=3D"kt">int</span> <span class=3D"n">pad=
ding</span> <span class=3D"o">=3D</span> <span class=3D"p">(</span><span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</s=
pan> <span class=3D"o">-</span> <span class=3D"n">welcomelen</span><span cl=
ass=3D"p">)</span> <span class=3D"o">/</span> <span class=3D"mi">2</span><s=
pan class=3D"p">;</span></div><div class=3D"line">        <span class=3D"k"=
>if</span> <span class=3D"p">(</span><span class=3D"n">padding</span><span =
class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">  =
        <span class=3D"n">abAppend</span><span class=3D"p">(</span><span cl=
ass=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"~"</span><=
span class=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"p">);</=
span></div><div class=3D"line">          <span class=3D"n">padding</span><s=
pan class=3D"o">--</span><span class=3D"p">;</span></div><div class=3D"line=
">        <span class=3D"p">}</span></div><div class=3D"line">        <span=
 class=3D"k">while</span> <span class=3D"p">(</span><span class=3D"n">paddi=
ng</span><span class=3D"o">--</span><span class=3D"p">)</span> <span class=
=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span>=
<span class=3D"p">,</span> <span class=3D"s">" "</span><span class=3D"p">,<=
/span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><div cla=
ss=3D"line">        <span class=3D"n">abAppend</span><span class=3D"p">(</s=
pan><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n"=
>welcome</span><span class=3D"p">,</span> <span class=3D"n">welcomelen</spa=
n><span class=3D"p">);</span></div><div class=3D"line">      <span class=3D=
"p">}</span> <span class=3D"k">else</span> <span class=3D"p">{</span></div>=
<div class=3D"line">        <span class=3D"n">abAppend</span><span class=3D=
"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span cla=
ss=3D"s">"~"</span><span class=3D"p">,</span> <span class=3D"mi">1</span><s=
pan class=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">=
}</span></div><div class=3D"line">    <span class=3D"p">}</span> <span clas=
s=3D"k">else</span> <span class=3D"p">{</span></div><ins class=3D"line">   =
   <span class=3D"kt">int</span> <span class=3D"n">len</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">y</span>=
<span class=3D"p">].</span><span class=3D"n">size</span><span class=3D"p">;=
</span></ins><div class=3D"line">      <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">len</span> <span class=3D"o">&gt;</span=
> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">scr=
eencols</span><span class=3D"p">)</span> <span class=3D"n">len</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">screencols</span><span class=3D"p">;</span></div><ins cl=
ass=3D"line">      <span class=3D"n">abAppend</span><span class=3D"p">(</sp=
an><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">row</span><span class=
=3D"p">[</span><span class=3D"n">y</span><span class=3D"p">].</span><span c=
lass=3D"n">chars</span><span class=3D"p">,</span> <span class=3D"n">len</sp=
an><span class=3D"p">);</span></ins><div class=3D"line">    <span class=3D"=
p">}</span></div><div class=3D"line"></div><div class=3D"line">    <span cl=
ass=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</sp=
an><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">=
\x1b</span><span class=3D"s">[K"</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">3</span><span class=3D"p">);</span></div><div class=3D"line">    =
<span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">y</=
span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">-</spa=
n> <span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">=
{</span></div><div class=3D"line">      <span class=3D"n">abAppend</span><s=
pan class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</spa=
n> <span class=3D"s">"</span><span class=3D"se">\r\n</span><span class=3D"s=
">"</span><span class=3D"p">,</span> <span class=3D"mi">2</span><span class=
=3D"p">);</span></div><div class=3D"line">    <span class=3D"p">}</span></d=
iv><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"line=
"><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"l=
ine folded"><span class=3D"kt">void</span> <span class=3D"nf">editorRefresh=
Screen</span><span class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=
=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D=
"line folded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"=
line folded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>At this point the code should compile, but it still only reads a single =
line
from the file. Let=E2=80=99s add a <code>while</code> loop to <code>editorO=
pen()</code> to read an entire
file into <code>E.row</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/read-multiple-lines/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 65</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/read-multiple-lines">read-multiple-lines</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line"><span c=
lass=3D"cm">/*** file i/o ***/</span></div><div class=3D"line"></div><div c=
lass=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorOpen<=
/span><span class=3D"p">(</span><span class=3D"kt">char</span> <span class=
=3D"o">*</span><span class=3D"n">filename</span><span class=3D"p">)</span> =
<span class=3D"p">{</span></div><div class=3D"line">  <span class=3D"kt">FI=
LE</span> <span class=3D"o">*</span><span class=3D"n">fp</span> <span class=
=3D"o">=3D</span> <span class=3D"n">fopen</span><span class=3D"p">(</span><=
span class=3D"n">filename</span><span class=3D"p">,</span> <span class=3D"s=
">"r"</span><span class=3D"p">);</span></div><div class=3D"line">  <span cl=
ass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"o">!</span><sp=
an class=3D"n">fp</span><span class=3D"p">)</span> <span class=3D"n">die</s=
pan><span class=3D"p">(</span><span class=3D"s">"fopen"</span><span class=
=3D"p">);</span></div><div class=3D"line"></div><div class=3D"line">  <span=
 class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">line<=
/span> <span class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span cla=
ss=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">size_t</spa=
n> <span class=3D"n">linecap</span> <span class=3D"o">=3D</span> <span clas=
s=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <spa=
n class=3D"kt">ssize_t</span> <span class=3D"n">linelen</span><span class=
=3D"p">;</span></div><ins class=3D"line">  <span class=3D"k">while</span> <=
span class=3D"p">((</span><span class=3D"n">linelen</span> <span class=3D"o=
">=3D</span> <span class=3D"n">getline</span><span class=3D"p">(</span><spa=
n class=3D"o">&amp;</span><span class=3D"n">line</span><span class=3D"p">,<=
/span> <span class=3D"o">&amp;</span><span class=3D"n">linecap</span><span =
class=3D"p">,</span> <span class=3D"n">fp</span><span class=3D"p">))</span>=
 <span class=3D"o">!=3D</span> <span class=3D"o">-</span><span class=3D"mi"=
>1</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><div cl=
ass=3D"line">    <span class=3D"k">while</span> <span class=3D"p">(</span><=
span class=3D"n">linelen</span> <span class=3D"o">&gt;</span> <span class=
=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"p">(</s=
pan><span class=3D"n">line</span><span class=3D"p">[</span><span class=3D"n=
">linelen</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><spa=
n class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'=
\n'</span> <span class=3D"o">||</span></div><div class=3D"line">           =
                <span class=3D"n">line</span><span class=3D"p">[</span><spa=
n class=3D"n">linelen</span> <span class=3D"o">-</span> <span class=3D"mi">=
1</span><span class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span cl=
ass=3D"sc">'\r'</span><span class=3D"p">))</span></div><div class=3D"line">=
      <span class=3D"n">linelen</span><span class=3D"o">--</span><span clas=
s=3D"p">;</span></div><div class=3D"line">    <span class=3D"n">editorAppen=
dRow</span><span class=3D"p">(</span><span class=3D"n">line</span><span cla=
ss=3D"p">,</span> <span class=3D"n">linelen</span><span class=3D"p">);</spa=
n></div><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D=
"line">  <span class=3D"n">free</span><span class=3D"p">(</span><span class=
=3D"n">line</span><span class=3D"p">);</span></div><div class=3D"line">  <s=
pan class=3D"n">fclose</span><span class=3D"p">(</span><span class=3D"n">fp=
</span><span class=3D"p">);</span></div><div class=3D"line"><span class=3D"=
p">}</span></div><div class=3D"line"></div><div class=3D"line folded"><span=
 class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"=
><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>The <code>while</code> loop works because <code>getline()</code> returns=
 <code>-1</code> when it gets to the end
of the file and there are no more lines to read.</p>

<p>Now you should see your screen fill up with lines of text when you run
<code>./kilo kilo.c</code>, for example.</p>
<h2 id=3D"vertical-scrolling"><a href=3D"https://viewsourcecode.org/snaptok=
en/kilo/04.aTextViewer.html#vertical-scrolling">Vertical scrolling</a></h2>

<p>Next we want to enable the user to scroll through the whole file, instea=
d of
just being able to see the top few lines of the file. Let=E2=80=99s add a <=
code>rowoff</code> (row
offset) variable to the global editor state, which will keep track of what =
row
of the file the user is currently scrolled to.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/rowoff/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 66</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/rowoff">rowoff</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span></di=
v><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">cy</span><span class=3D"=
p">;</span></div><ins class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">rowoff</span><span class=3D"p">;</span></ins><div class=3D"line=
">  <span class=3D"kt">int</span> <span class=3D"n">screenrows</span><span =
class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</spa=
n> <span class=3D"n">screencols</span><span class=3D"p">;</span></div><div =
class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">numrows</s=
pan><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n"=
>erow</span> <span class=3D"o">*</span><span class=3D"n">row</span><span cl=
ass=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">struct</spa=
n> <span class=3D"n">termios</span> <span class=3D"n">orig_termios</span><s=
pan class=3D"p">;</span></div><div class=3D"line"><span class=3D"p">};</spa=
n></div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">str=
uct</span> <span class=3D"n">editorConfig</span> <span class=3D"n">E</span>=
<span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"lin=
e folded"><span class=3D"cm">/*** terminal ***/</span></div><div class=3D"l=
ine folded"><span class=3D"cm">/*** row operations ***/</span></div><div cl=
ass=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div =
class=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></di=
v><div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></di=
v><div class=3D"line folded"><span class=3D"cm">/*** input ***/</span></div=
><div class=3D"line"><span class=3D"cm">/*** init ***/</span></div><div cla=
ss=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span =
class=3D"nf">initEditor</span><span class=3D"p">()</span> <span class=3D"p"=
>{</span></div><div class=3D"line">  <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line"=
>  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy=
</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></div><ins class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">rowoff</span> <span class=3D"o">=3D</=
span> <span class=3D"mi">0</span><span class=3D"p">;</span></ins><div class=
=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">numrows</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</sp=
an><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">row</span> <span class=
=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;</span><=
/div><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">if</=
span> <span class=3D"p">(</span><span class=3D"n">getWindowSize</span><span=
 class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">screenrows</span><span class=
=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p"=
>)</span> <span class=3D"o">=3D=3D</span> <span class=3D"o">-</span><span c=
lass=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"n">die</span>=
<span class=3D"p">(</span><span class=3D"s">"getWindowSize"</span><span cla=
ss=3D"p">);</span></div><div class=3D"line"><span class=3D"p">}</span></div=
><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">in=
t</span> <span class=3D"nf">main</span><span class=3D"p">(</span><span clas=
s=3D"kt">int</span> <span class=3D"n">argc</span><span class=3D"p">,</span>=
 <span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n"=
>argv</span><span class=3D"p">[])</span> <span class=3D"p">{</span> =E2=80=
=A6 <span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>We initialize it to <code>0</code>, which means we=E2=80=99ll be scrolle=
d to the top of the file
by default.</p>

<p>Now let=E2=80=99s have <code>editorDrawRows()</code> display the correct=
 range of lines of the
file according to the value of <code>rowoff</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/filerow/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 67</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/filerow">filerow</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span> =
<span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">a=
b</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div cla=
ss=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</spa=
n> <span class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=
=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span> <span clas=
s=3D"n">y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p=
">;</span> <span class=3D"n">y</span><span class=3D"o">++</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><ins class=3D"line">    <sp=
an class=3D"kt">int</span> <span class=3D"n">filerow</span> <span class=3D"=
o">=3D</span> <span class=3D"n">y</span> <span class=3D"o">+</span> <span c=
lass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span=
><span class=3D"p">;</span></ins><ins class=3D"line">    <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"n">filerow</span> <span =
class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">numrows</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></ins><div class=3D"line">      <span class=3D"k">if</span> =
<span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">numrows</span> <span class=3D"o">=3D=3D</span> <span c=
lass=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">=
y</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">/</=
span> <span class=3D"mi">3</span><span class=3D"p">)</span> <span class=3D"=
p">{</span></div><div class=3D"line">        <span class=3D"kt">char</span>=
 <span class=3D"n">welcome</span><span class=3D"p">[</span><span class=3D"m=
i">80</span><span class=3D"p">];</span></div><div class=3D"line">        <s=
pan class=3D"kt">int</span> <span class=3D"n">welcomelen</span> <span class=
=3D"o">=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</spa=
n><span class=3D"n">welcome</span><span class=3D"p">,</span> <span class=3D=
"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">welcome</span>=
<span class=3D"p">),</span></div><div class=3D"line">          <span class=
=3D"s">"Kilo editor -- version %s"</span><span class=3D"p">,</span> <span c=
lass=3D"n">KILO_VERSION</span><span class=3D"p">);</span></div><div class=
=3D"line">        <span class=3D"k">if</span> <span class=3D"p">(</span><sp=
an class=3D"n">welcomelen</span> <span class=3D"o">&gt;</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span=
><span class=3D"p">)</span> <span class=3D"n">welcomelen</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">screencols</span><span class=3D"p">;</span></div><div class=3D=
"line">        <span class=3D"kt">int</span> <span class=3D"n">padding</spa=
n> <span class=3D"o">=3D</span> <span class=3D"p">(</span><span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">screencols</span> <spa=
n class=3D"o">-</span> <span class=3D"n">welcomelen</span><span class=3D"p"=
>)</span> <span class=3D"o">/</span> <span class=3D"mi">2</span><span class=
=3D"p">;</span></div><div class=3D"line">        <span class=3D"k">if</span=
> <span class=3D"p">(</span><span class=3D"n">padding</span><span class=3D"=
p">)</span> <span class=3D"p">{</span></div><div class=3D"line">          <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"~"</span><span clas=
s=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"p">);</span></di=
v><div class=3D"line">          <span class=3D"n">padding</span><span class=
=3D"o">--</span><span class=3D"p">;</span></div><div class=3D"line">       =
 <span class=3D"p">}</span></div><div class=3D"line">        <span class=3D=
"k">while</span> <span class=3D"p">(</span><span class=3D"n">padding</span>=
<span class=3D"o">--</span><span class=3D"p">)</span> <span class=3D"n">abA=
ppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span clas=
s=3D"p">,</span> <span class=3D"s">" "</span><span class=3D"p">,</span> <sp=
an class=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line=
">        <span class=3D"n">abAppend</span><span class=3D"p">(</span><span =
class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">welcome</=
span><span class=3D"p">,</span> <span class=3D"n">welcomelen</span><span cl=
ass=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</spa=
n> <span class=3D"k">else</span> <span class=3D"p">{</span></div><div class=
=3D"line">        <span class=3D"n">abAppend</span><span class=3D"p">(</spa=
n><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"=
~"</span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span><=
/div><div class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">e=
lse</span> <span class=3D"p">{</span></div><ins class=3D"line">      <span =
class=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">row</span><span class=3D"p">[</span><span class=3D"n">filerow</span><span=
 class=3D"p">].</span><span class=3D"n">size</span><span class=3D"p">;</spa=
n></ins><div class=3D"line">      <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">len</span> <span class=3D"o">&gt;</span> <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
cols</span><span class=3D"p">)</span> <span class=3D"n">len</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">screencols</span><span class=3D"p">;</span></div><ins class=
=3D"line">      <span class=3D"n">abAppend</span><span class=3D"p">(</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p=
">[</span><span class=3D"n">filerow</span><span class=3D"p">].</span><span =
class=3D"n">chars</span><span class=3D"p">,</span> <span class=3D"n">len</s=
pan><span class=3D"p">);</span></ins><div class=3D"line">    <span class=3D=
"p">}</span></div><div class=3D"line"></div><div class=3D"line">    <span c=
lass=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se"=
>\x1b</span><span class=3D"s">[K"</span><span class=3D"p">,</span> <span cl=
ass=3D"mi">3</span><span class=3D"p">);</span></div><div class=3D"line">   =
 <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">y<=
/span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">-</spa=
n> <span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">=
{</span></div><div class=3D"line">      <span class=3D"n">abAppend</span><s=
pan class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</spa=
n> <span class=3D"s">"</span><span class=3D"se">\r\n</span><span class=3D"s=
">"</span><span class=3D"p">,</span> <span class=3D"mi">2</span><span class=
=3D"p">);</span></div><div class=3D"line">    <span class=3D"p">}</span></d=
iv><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"line=
"><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"l=
ine folded"><span class=3D"kt">void</span> <span class=3D"n">editorRefreshS=
creen</span><span class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=
=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D=
"line folded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"=
line folded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>To get the row of the file that we want to display at each <code>y</code=
> position, we add
<code>E.rowoff</code> to the <code>y</code> position. So we define a new va=
riable <code>filerow</code> that
contains that value, and use that as the index into <code>E.row</code>.</p>

<p>Now where do we set the value of <code>E.rowoff</code>? Our strategy wil=
l be to check if
the cursor has moved outside of the visible window, and if so, adjust
<code>E.rowoff</code> so that the cursor is just inside the visible window.=
 We=E2=80=99ll put this
logic in a function called <code>editorScroll()</code>, and call it right b=
efore we
refresh the screen.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/editor-scroll/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 68</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/editor-scroll">editor-scroll</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><ins class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span></ins>=
<ins class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span=
><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</=
span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rowoff</span><span class=3D"p">)</span> <s=
pan class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">rowoff</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cy</span><span class=3D"p">;</span></ins><ins class=3D"line"> =
 <span class=3D"p">}</span></ins><ins class=3D"line">  <span class=3D"k">if=
</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</=
span> <span class=3D"o">+</span> <span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">screenrows</span><span class=3D"p">)</span> <sp=
an class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">rowoff</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cy</span> <span class=3D"o">-</span> <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">screenrows</span> <span class=
=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">;</span></ins>=
<ins class=3D"line">  <span class=3D"p">}</span></ins><ins class=3D"line"><=
span class=3D"p">}</span></ins><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"kt">void</span> <span class=3D"nf">editorDrawRows</=
span><span class=3D"p">(</span><span class=3D"k">struct</span> <span class=
=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span><sp=
an class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D=
"p">}</span></div><div class=3D"line"></div><div class=3D"line"><span class=
=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</span><span clas=
s=3D"p">()</span> <span class=3D"p">{</span></div><ins class=3D"line">  <sp=
an class=3D"n">editorScroll</span><span class=3D"p">();</span></ins><div cl=
ass=3D"line"></div><div class=3D"line">  <span class=3D"k">struct</span> <s=
pan class=3D"n">abuf</span> <span class=3D"n">ab</span> <span class=3D"o">=
=3D</span> <span class=3D"n">ABUF_INIT</span><span class=3D"p">;</span></di=
v><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">abAppen=
d</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=
=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span =
class=3D"se">\x1b</span><span class=3D"s">[?25l"</span><span class=3D"p">,<=
/span> <span class=3D"mi">6</span><span class=3D"p">);</span></div><div cla=
ss=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(</span><s=
pan class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">,<=
/span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=
=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">3</span><spa=
n class=3D"p">);</span></div><div class=3D"line"></div><div class=3D"line">=
  <span class=3D"n">editorDrawRows</span><span class=3D"p">(</span><span cl=
ass=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);</span=
></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"kt">c=
har</span> <span class=3D"n">buf</span><span class=3D"p">[</span><span clas=
s=3D"mi">32</span><span class=3D"p">];</span></div><div class=3D"line">  <s=
pan class=3D"n">snprintf</span><span class=3D"p">(</span><span class=3D"n">=
buf</span><span class=3D"p">,</span> <span class=3D"k">sizeof</span><span c=
lass=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">),</span> =
<span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[=
%d;%dH"</span><span class=3D"p">,</span> <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">+</span> <s=
pan class=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=
+</span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><div c=
lass=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(</span>=
<span class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">=
,</span> <span class=3D"n">buf</span><span class=3D"p">,</span> <span class=
=3D"n">strlen</span><span class=3D"p">(</span><span class=3D"n">buf</span><=
span class=3D"p">));</span></div><div class=3D"line"></div><div class=3D"li=
ne">  <span class=3D"n">abAppend</span><span class=3D"p">(</span><span clas=
s=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">,</span> <=
span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[?=
25h"</span><span class=3D"p">,</span> <span class=3D"mi">6</span><span clas=
s=3D"p">);</span></div><div class=3D"line"></div><div class=3D"line">  <spa=
n class=3D"n">write</span><span class=3D"p">(</span><span class=3D"n">STDOU=
T_FILENO</span><span class=3D"p">,</span> <span class=3D"n">ab</span><span =
class=3D"p">.</span><span class=3D"n">b</span><span class=3D"p">,</span> <s=
pan class=3D"n">ab</span><span class=3D"p">.</span><span class=3D"n">len</s=
pan><span class=3D"p">);</span></div><div class=3D"line">  <span class=3D"n=
">abFree</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><spa=
n class=3D"n">ab</span><span class=3D"p">);</span></div><div class=3D"line"=
><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"li=
ne folded"><span class=3D"cm">/*** input ***/</span></div><div class=3D"lin=
e folded"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>The first <code>if</code> statement checks if the cursor is above the vi=
sible window, and
if so, scrolls up to where the cursor is. The second <code>if</code>
statement checks if the cursor is past the bottom of the visible window, an=
d
contains slightly more complicated arithmetic because <code>E.rowoff</code>=
 refers to
what=E2=80=99s at the <em>top</em> of the screen, and we have to get <code>=
E.screenrows</code> involved
to talk about what=E2=80=99s at the <em>bottom</em> of the screen.</p>

<p>Now let=E2=80=99s allow the cursor to advance past the bottom of the scr=
een (but not
past the bottom of the file).</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/enable-vertical-scroll/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 69</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/enable-vertical-scroll">enable-vertical-scroll</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> <=
span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><div class=3D"line">  <span class=3D"k">switch</span> <span clas=
s=3D"p">(</span><span class=3D"n">key</span><span class=3D"p">)</span> <spa=
n class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case<=
/span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><=
div class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</s=
pan><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">c=
x</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span cla=
ss=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">     =
   <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span><span class=3D"o">--</span><span class=3D"p">;</span></div><div clas=
s=3D"line">      <span class=3D"p">}</span></div><div class=3D"line">      =
<span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D=
"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</spa=
n><span class=3D"p">:</span></div><div class=3D"line">      <span class=3D"=
k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span clas=
s=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">!=3D</span> <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
cols</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">     =
   <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span><span class=3D"o">++</span><span class=3D"p">;</span></div><div clas=
s=3D"line">      <span class=3D"p">}</span></div><div class=3D"line">      =
<span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D=
"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_UP</span><=
span class=3D"p">:</span></div><div class=3D"line">      <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">!=3D</span> <s=
pan class=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"p">{</sp=
an></div><div class=3D"line">        <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">--</span><span =
class=3D"p">;</span></div><div class=3D"line">      <span class=3D"p">}</sp=
an></div><div class=3D"line">      <span class=3D"k">break</span><span clas=
s=3D"p">;</span></div><div class=3D"line">    <span class=3D"k">case</span>=
 <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div><ins cl=
ass=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</span><s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</spa=
n> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span> <span =
class=3D"p">{</span></ins><div class=3D"line">        <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o"=
>++</span><span class=3D"p">;</span></div><div class=3D"line">      <span c=
lass=3D"p">}</span></div><div class=3D"line">      <span class=3D"k">break<=
/span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"=
p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</spa=
n> <span class=3D"n">editorProcessKeypress</span><span class=3D"p">()</span=
> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div=
 class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** in=
it ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>You should be able to scroll through the entire file now, when you run <=
code>./kilo
kilo.c</code>. (If the file contains tab characters, you=E2=80=99ll see tha=
t the characters
that the tabs take up aren=E2=80=99t being erased properly when drawing to =
the screen.
We=E2=80=99ll fix this issue soon. In the meantime, you may want to test wi=
th a file
that doesn=E2=80=99t contain a lot of tabs.)</p>

<p>If you try to scroll back up, you may notice the cursor isn=E2=80=99t be=
ing
positioned properly. That is because <code>E.cy</code> no longer refers to =
the position of
the cursor on the screen. It refers to the position of the cursor within th=
e
text file. To position the cursor on the screen, we now have to subtract
<code>E.rowoff</code> from the value of <code>E.cy</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/fix-cursor-scrolling/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 70</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/fix-cursor-scrolling">fix-cursor-scrolling</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</spa=
n><span class=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D=
"line">  <span class=3D"n">editorScroll</span><span class=3D"p">();</span><=
/div><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">stru=
ct</span> <span class=3D"n">abuf</span> <span class=3D"n">ab</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">ABUF_INIT</span><span class=3D"p">;=
</span></div><div class=3D"line"></div><div class=3D"line">  <span class=3D=
"n">abAppend</span><span class=3D"p">(</span><span class=3D"o">&amp;</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</=
span><span class=3D"se">\x1b</span><span class=3D"s">[?25l"</span><span cla=
ss=3D"p">,</span> <span class=3D"mi">6</span><span class=3D"p">);</span></d=
iv><div class=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p"=
>(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span cla=
ss=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><=
span class=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">3<=
/span><span class=3D"p">);</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"n">editorDrawRows</span><span class=3D"p">(</spa=
n><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p=
">);</span></div><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"kt">char</span> <span class=3D"n">buf</span><span class=3D"p">[</span>=
<span class=3D"mi">32</span><span class=3D"p">];</span></div><ins class=3D"=
line">  <span class=3D"n">snprintf</span><span class=3D"p">(</span><span cl=
ass=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"k">sizeof</sp=
an><span class=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">=
),</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><span cla=
ss=3D"s">[%d;%dH"</span><span class=3D"p">,</span> <span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy<=
/span> <span class=3D"o">-</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">rowoff</span><span class=3D"p">)</span> <span =
class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">,</span> =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</s=
pan> <span class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p=
">);</span></ins><div class=3D"line">  <span class=3D"n">abAppend</span><sp=
an class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</=
span><span class=3D"p">,</span> <span class=3D"n">buf</span><span class=3D"=
p">,</span> <span class=3D"n">strlen</span><span class=3D"p">(</span><span =
class=3D"n">buf</span><span class=3D"p">));</span></div><div class=3D"line"=
></div><div class=3D"line">  <span class=3D"n">abAppend</span><span class=
=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</span><sp=
an class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</=
span><span class=3D"s">[?25h"</span><span class=3D"p">,</span> <span class=
=3D"mi">6</span><span class=3D"p">);</span></div><div class=3D"line"></div>=
<div class=3D"line">  <span class=3D"n">write</span><span class=3D"p">(</sp=
an><span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span c=
lass=3D"n">ab</span><span class=3D"p">.</span><span class=3D"n">b</span><sp=
an class=3D"p">,</span> <span class=3D"n">ab</span><span class=3D"p">.</spa=
n><span class=3D"n">len</span><span class=3D"p">);</span></div><div class=
=3D"line">  <span class=3D"n">abFree</span><span class=3D"p">(</span><span =
class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);</sp=
an></div><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"=
line"></div><div class=3D"line folded"><span class=3D"cm">/*** input ***/</=
span></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/</sp=
an></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>

<h2 id=3D"horizontal-scrolling"><a href=3D"https://viewsourcecode.org/snapt=
oken/kilo/04.aTextViewer.html#horizontal-scrolling">Horizontal scrolling</a=
></h2>

<p>Now let=E2=80=99s work on horizontal scrolling. We=E2=80=99ll implement =
it in just about the
same way we implemented vertical scrolling. Start by adding a <code>coloff<=
/code> (column
offset) variable to the global editor state.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/coloff/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 71</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/coloff">coloff</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span></di=
v><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">cy</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">rowoff</span><span class=3D"p">;</span></div><ins class=3D"line=
">  <span class=3D"kt">int</span> <span class=3D"n">coloff</span><span clas=
s=3D"p">;</span></ins><div class=3D"line">  <span class=3D"kt">int</span> <=
span class=3D"n">screenrows</span><span class=3D"p">;</span></div><div clas=
s=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">screencols</sp=
an><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt"=
>int</span> <span class=3D"n">numrows</span><span class=3D"p">;</span></div=
><div class=3D"line">  <span class=3D"n">erow</span> <span class=3D"o">*</s=
pan><span class=3D"n">row</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"k">struct</span> <span class=3D"n">termios</span=
> <span class=3D"n">orig_termios</span><span class=3D"p">;</span></div><div=
 class=3D"line"><span class=3D"p">};</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"k">struct</span> <span class=3D"n">edito=
rConfig</span> <span class=3D"n">E</span><span class=3D"p">;</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** =
terminal ***/</span></div><div class=3D"line folded"><span class=3D"cm">/**=
* row operations ***/</span></div><div class=3D"line folded"><span class=3D=
"cm">/*** file i/o ***/</span></div><div class=3D"line folded"><span class=
=3D"cm">/*** append buffer ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><spa=
n class=3D"cm">/*** input ***/</span></div><div class=3D"line"><span class=
=3D"cm">/*** init ***/</span></div><div class=3D"line"></div><div class=3D"=
line"><span class=3D"kt">void</span> <span class=3D"nf">initEditor</span><s=
pan class=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D"lin=
e">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">=
cx</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span cla=
ss=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=3D</sp=
an> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</spa=
n><span class=3D"p">;</span></div><ins class=3D"line">  <span class=3D"n">E=
</span><span class=3D"p">.</span><span class=3D"n">coloff</span> <span clas=
s=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></i=
ns><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</spa=
n><span class=3D"n">numrows</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span>=
 <span class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"=
p">;</span></div><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">getWindowSize=
</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span=
><span class=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><span=
 class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=3D"o">-</=
span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"n=
">die</span><span class=3D"p">(</span><span class=3D"s">"getWindowSize"</sp=
an><span class=3D"p">);</span></div><div class=3D"line"><span class=3D"p">}=
</span></div><div class=3D"line"></div><div class=3D"line folded"><span cla=
ss=3D"kt">int</span> <span class=3D"nf">main</span><span class=3D"p">(</spa=
n><span class=3D"kt">int</span> <span class=3D"n">argc</span><span class=3D=
"p">,</span> <span class=3D"kt">char</span> <span class=3D"o">*</span><span=
 class=3D"n">argv</span><span class=3D"p">[])</span> <span class=3D"p">{</s=
pan> =E2=80=A6 <span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>To display each row at the column offset, we=E2=80=99ll use <code>E.colo=
ff</code> as an index into
the <code>chars</code> of each <code>erow</code> we display, and subtract t=
he number of characters
that are to the left of the offset from the length of the row.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/use-coloff/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 72</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/use-coloff">use-coloff</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorDraw=
Rows</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span =
class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</spa=
n><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"=
line">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</span> <sp=
an class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=3D</sp=
an> <span class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n"=
>y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</sp=
an> <span class=3D"n">y</span><span class=3D"o">++</span><span class=3D"p">=
)</span> <span class=3D"p">{</span></div><div class=3D"line">    <span clas=
s=3D"kt">int</span> <span class=3D"n">filerow</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">y</span> <span class=3D"o">+</span> <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span><span =
class=3D"p">;</span></div><div class=3D"line">    <span class=3D"k">if</spa=
n> <span class=3D"p">(</span><span class=3D"n">filerow</span> <span class=
=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">numrows</span><span class=3D"p">)</span> <span class=3D"p"=
>{</span></div><div class=3D"line">      <span class=3D"k">if</span> <span =
class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">numrows</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">y</s=
pan> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">/</spa=
n> <span class=3D"mi">3</span><span class=3D"p">)</span> <span class=3D"p">=
{</span></div><div class=3D"line">        <span class=3D"kt">char</span> <s=
pan class=3D"n">welcome</span><span class=3D"p">[</span><span class=3D"mi">=
80</span><span class=3D"p">];</span></div><div class=3D"line">        <span=
 class=3D"kt">int</span> <span class=3D"n">welcomelen</span> <span class=3D=
"o">=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</span><=
span class=3D"n">welcome</span><span class=3D"p">,</span> <span class=3D"k"=
>sizeof</span><span class=3D"p">(</span><span class=3D"n">welcome</span><sp=
an class=3D"p">),</span></div><div class=3D"line">          <span class=3D"=
s">"Kilo editor -- version %s"</span><span class=3D"p">,</span> <span class=
=3D"n">KILO_VERSION</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"k">if</span> <span class=3D"p">(</span><span cla=
ss=3D"n">welcomelen</span> <span class=3D"o">&gt;</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><span =
class=3D"p">)</span> <span class=3D"n">welcomelen</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screencols</span><span class=3D"p">;</span></div><div class=3D"line"=
>        <span class=3D"kt">int</span> <span class=3D"n">padding</span> <sp=
an class=3D"o">=3D</span> <span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">screencols</span> <span clas=
s=3D"o">-</span> <span class=3D"n">welcomelen</span><span class=3D"p">)</sp=
an> <span class=3D"o">/</span> <span class=3D"mi">2</span><span class=3D"p"=
>;</span></div><div class=3D"line">        <span class=3D"k">if</span> <spa=
n class=3D"p">(</span><span class=3D"n">padding</span><span class=3D"p">)</=
span> <span class=3D"p">{</span></div><div class=3D"line">          <span c=
lass=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"s">"~"</span><span class=3D"p=
">,</span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><div=
 class=3D"line">          <span class=3D"n">padding</span><span class=3D"o"=
>--</span><span class=3D"p">;</span></div><div class=3D"line">        <span=
 class=3D"p">}</span></div><div class=3D"line">        <span class=3D"k">wh=
ile</span> <span class=3D"p">(</span><span class=3D"n">padding</span><span =
class=3D"o">--</span><span class=3D"p">)</span> <span class=3D"n">abAppend<=
/span><span class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p=
">,</span> <span class=3D"s">" "</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">    =
    <span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=
=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">welcome</span>=
<span class=3D"p">,</span> <span class=3D"n">welcomelen</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span> =
<span class=3D"k">else</span> <span class=3D"p">{</span></div><div class=3D=
"line">        <span class=3D"n">abAppend</span><span class=3D"p">(</span><=
span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"~"<=
/span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"=
p">);</span></div><div class=3D"line">      <span class=3D"p">}</span></div=
><div class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">else<=
/span> <span class=3D"p">{</span></div><ins class=3D"line">      <span clas=
s=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">ro=
w</span><span class=3D"p">[</span><span class=3D"n">filerow</span><span cla=
ss=3D"p">].</span><span class=3D"n">size</span> <span class=3D"o">-</span> =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">colof=
f</span><span class=3D"p">;</span></ins><ins class=3D"line">      <span cla=
ss=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">len</span> <=
span class=3D"o">&lt;</span> <span class=3D"mi">0</span><span class=3D"p">)=
</span> <span class=3D"n">len</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"mi">0</span><span class=3D"p">;</span></ins><div class=3D"line">     =
 <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">le=
n</span> <span class=3D"o">&gt;</span> <span class=3D"n">E</span><span clas=
s=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">)</spa=
n> <span class=3D"n">len</span> <span class=3D"o">=3D</span> <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><s=
pan class=3D"p">;</span></div><ins class=3D"line">      <span class=3D"n">a=
bAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span cl=
ass=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</=
span><span class=3D"n">filerow</span><span class=3D"p">].</span><span class=
=3D"n">chars</span><span class=3D"p">[</span><span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"p">],</=
span> <span class=3D"n">len</span><span class=3D"p">);</span></ins><div cla=
ss=3D"line">    <span class=3D"p">}</span></div><div class=3D"line"></div><=
div class=3D"line">    <span class=3D"n">abAppend</span><span class=3D"p">(=
</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D=
"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[K"</span><span=
 class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</span=
></div><div class=3D"line">    <span class=3D"k">if</span> <span class=3D"p=
">(</span><span class=3D"n">y</span> <span class=3D"o">&lt;</span> <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</s=
pan> <span class=3D"o">-</span> <span class=3D"mi">1</span><span class=3D"p=
">)</span> <span class=3D"p">{</span></div><div class=3D"line">      <span =
class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</=
span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se=
">\r\n</span><span class=3D"s">"</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">2</span><span class=3D"p">);</span></div><div class=3D"line">    =
<span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"p">}</=
span></div><div class=3D"line"><span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <=
span class=3D"nf">editorRefreshScreen</span><span class=3D"p">()</span> <sp=
an class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** input *=
**/</span></div><div class=3D"line folded"><span class=3D"cm">/*** init ***=
/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Note that when subtracting <code>E.coloff</code> from the length, <code>=
len</code> can now be a
negative number, meaning the user scrolled horizontally past the end of the
line. In that case, we set <code>len</code> to <code>0</code> so that nothi=
ng is displayed on that
line.</p>

<p>Now let=E2=80=99s update <code>editorScroll()</code> to handle horizonta=
l scrolling.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/editor-scroll-horizontal/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 73</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/editor-scroll-horizontal">editor-scroll-horizontal</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span></div>=
<div class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span=
><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</=
span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rowoff</span><span class=3D"p">)</span> <s=
pan class=3D"p">{</span></div><div class=3D"line">    <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">rowoff</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cy</span><span class=3D"p">;</span></div><div class=3D"line"> =
 <span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"k">if=
</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</=
span> <span class=3D"o">+</span> <span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">screenrows</span><span class=3D"p">)</span> <sp=
an class=3D"p">{</span></div><div class=3D"line">    <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">rowoff</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cy</span> <span class=3D"o">-</span> <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">screenrows</span> <span class=
=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">;</span></div>=
<div class=3D"line">  <span class=3D"p">}</span></div><ins class=3D"line"> =
 <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"=
o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">coloff</span><span class=3D"p">)</span> <span class=3D"p">{</span=
></ins><ins class=3D"line">    <span class=3D"n">E</span><span class=3D"p">=
.</span><span class=3D"n">coloff</span> <span class=3D"o">=3D</span> <span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span><s=
pan class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"p">}</sp=
an></ins><ins class=3D"line">  <span class=3D"k">if</span> <span class=3D"p=
">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">cx</span> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">coloff</span> <span class=3D"o=
">+</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screencols</span><span class=3D"p">)</span> <span class=3D"p">{</spa=
n></ins><ins class=3D"line">    <span class=3D"n">E</span><span class=3D"p"=
>.</span><span class=3D"n">coloff</span> <span class=3D"o">=3D</span> <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> =
<span class=3D"o">-</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">screencols</span> <span class=3D"o">+</span> <span cl=
ass=3D"mi">1</span><span class=3D"p">;</span></ins><ins class=3D"line">  <s=
pan class=3D"p">}</span></ins><div class=3D"line"><span class=3D"p">}</span=
></div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"=
kt">void</span> <span class=3D"nf">editorDrawRows</span><span class=3D"p">(=
</span><span class=3D"k">struct</span> <span class=3D"n">abuf</span> <span =
class=3D"o">*</span><span class=3D"n">ab</span><span class=3D"p">)</span> <=
span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div cl=
ass=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span=
> <span class=3D"nf">editorRefreshScreen</span><span class=3D"p">()</span> =
<span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** inpu=
t ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** init =
***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>As you can see, it is exactly parallel to the vertical scrolling code. W=
e just
replace <code>E.cy</code> with <code>E.cx</code>, <code>E.rowoff</code> wit=
h <code>E.coloff</code>, and <code>E.screenrows</code> with
<code>E.screencols</code>.</p>

<p>Now let=E2=80=99s allow the user to scroll past the right edge of the sc=
reen.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/enable-horizontal-scroll/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 74</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/enable-horizontal-scroll">enable-horizontal-scroll</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> <=
span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><div class=3D"line">  <span class=3D"k">switch</span> <span clas=
s=3D"p">(</span><span class=3D"n">key</span><span class=3D"p">)</span> <spa=
n class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case<=
/span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><=
div class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</s=
pan><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">c=
x</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span cla=
ss=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">     =
   <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span><span class=3D"o">--</span><span class=3D"p">;</span></div><div clas=
s=3D"line">      <span class=3D"p">}</span></div><div class=3D"line">      =
<span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D=
"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</spa=
n><span class=3D"p">:</span></div><del class=3D"line">      <span class=3D"=
k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span clas=
s=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">!=3D</span> <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
cols</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">)</span> <span class=3D"p">{</span></del><div class=3D"line">     =
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</=
span><span class=3D"o">++</span><span class=3D"p">;</span></div><del class=
=3D"line">      <span class=3D"p">}</span></del><div class=3D"line">      <=
span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"=
line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_UP</span><s=
pan class=3D"p">:</span></div><div class=3D"line">      <span class=3D"k">i=
f</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">cy</span> <span class=3D"o">!=3D</span> <span=
 class=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"p">{</span>=
</div><div class=3D"line">        <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">cy</span><span class=3D"o">--</span><span clas=
s=3D"p">;</span></div><div class=3D"line">      <span class=3D"p">}</span><=
/div><div class=3D"line">      <span class=3D"k">break</span><span class=3D=
"p">;</span></div><div class=3D"line">    <span class=3D"k">case</span> <sp=
an class=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div><div class=
=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</span><span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> =
<span class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">numrows</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span></div><div class=3D"line">        <span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">++=
</span><span class=3D"p">;</span></div><div class=3D"line">      <span clas=
s=3D"p">}</span></div><div class=3D"line">      <span class=3D"k">break</sp=
an><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"p">=
}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> =
<span class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</span> =
<span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** init=
 ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>You should be able to confirm that horizontal scrolling now works.</p>

<p>Next, let=E2=80=99s fix the cursor positioning, just like we did with ve=
rtical
scrolling.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/fix-cursor-scrolling-horizontal/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 75</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/fix-cursor-scrolling-horizontal">fix-cursor-scrolling-horizontal</a><=
/div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</spa=
n><span class=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D=
"line">  <span class=3D"n">editorScroll</span><span class=3D"p">();</span><=
/div><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">stru=
ct</span> <span class=3D"n">abuf</span> <span class=3D"n">ab</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">ABUF_INIT</span><span class=3D"p">;=
</span></div><div class=3D"line"></div><div class=3D"line">  <span class=3D=
"n">abAppend</span><span class=3D"p">(</span><span class=3D"o">&amp;</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</=
span><span class=3D"se">\x1b</span><span class=3D"s">[?25l"</span><span cla=
ss=3D"p">,</span> <span class=3D"mi">6</span><span class=3D"p">);</span></d=
iv><div class=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p"=
>(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span cla=
ss=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><=
span class=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">3<=
/span><span class=3D"p">);</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"n">editorDrawRows</span><span class=3D"p">(</spa=
n><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p=
">);</span></div><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"kt">char</span> <span class=3D"n">buf</span><span class=3D"p">[</span>=
<span class=3D"mi">32</span><span class=3D"p">];</span></div><ins class=3D"=
line">  <span class=3D"n">snprintf</span><span class=3D"p">(</span><span cl=
ass=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"k">sizeof</sp=
an><span class=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">=
),</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><span cla=
ss=3D"s">[%d;%dH"</span><span class=3D"p">,</span> <span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy<=
/span> <span class=3D"o">-</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">rowoff</span><span class=3D"p">)</span> <span =
class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">,</span><=
/ins><ins class=3D"line">                                            <span =
class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">cx</span> <span class=3D"o">-</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"=
p">)</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">);</span></ins><div class=3D"line">  <span class=3D"n">abAppend</s=
pan><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"=
n">ab</span><span class=3D"p">,</span> <span class=3D"n">buf</span><span cl=
ass=3D"p">,</span> <span class=3D"n">strlen</span><span class=3D"p">(</span=
><span class=3D"n">buf</span><span class=3D"p">));</span></div><div class=
=3D"line"></div><div class=3D"line">  <span class=3D"n">abAppend</span><spa=
n class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se"=
>\x1b</span><span class=3D"s">[?25h"</span><span class=3D"p">,</span> <span=
 class=3D"mi">6</span><span class=3D"p">);</span></div><div class=3D"line">=
</div><div class=3D"line">  <span class=3D"n">write</span><span class=3D"p"=
>(</span><span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <=
span class=3D"n">ab</span><span class=3D"p">.</span><span class=3D"n">b</sp=
an><span class=3D"p">,</span> <span class=3D"n">ab</span><span class=3D"p">=
.</span><span class=3D"n">len</span><span class=3D"p">);</span></div><div c=
lass=3D"line">  <span class=3D"n">abFree</span><span class=3D"p">(</span><s=
pan class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);=
</span></div><div class=3D"line"><span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** input **=
*/</span></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/=
</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>

<h2 id=3D"limit-scrolling-to-the-right"><a href=3D"https://viewsourcecode.o=
rg/snaptoken/kilo/04.aTextViewer.html#limit-scrolling-to-the-right">Limit s=
crolling to the right</a></h2>

<p>Now both <code>E.cx</code> and <code>E.cy</code> refer to the cursor=E2=
=80=99s position within the file, not
its position on the screen. So our goal with the next few steps is to limit=
 the
values of <code>E.cx</code> and <code>E.cy</code> to only ever point to val=
id positions in the file.
Otherwise, the user could move the cursor way off to the right of a line an=
d
start inserting text there, which wouldn=E2=80=99t make much sense. (The on=
ly
exceptions to this rule are that <code>E.cx</code> can point one character =
past the end of
a line so that characters can be inserted at the end of the line, and <code=
>E.cy</code>
can point one line past the end of the file so that new lines at the end of=
 the
file can be added easily.)</p>

<p>Let=E2=80=99s start by not allowing the user to scroll past the end of t=
he current
line.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/scroll-limits/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 76</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/scroll-limits">scroll-limits</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> <=
span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><ins class=3D"line">  <span class=3D"n">erow</span> <span class=
=3D"o">*</span><span class=3D"n">row</span> <span class=3D"o">=3D</span> <s=
pan class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">)</span> <span class=3D"o">?</span> <span class=3D"nb">NULL=
</span> <span class=3D"o">:</span> <span class=3D"o">&amp;</span><span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span=
 class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">cy</span><span class=3D"p">];</span></ins><div class=3D"lin=
e"></div><div class=3D"line">  <span class=3D"k">switch</span> <span class=
=3D"p">(</span><span class=3D"n">key</span><span class=3D"p">)</span> <span=
 class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case</=
span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><d=
iv class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</sp=
an><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      =
  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx<=
/span><span class=3D"o">--</span><span class=3D"p">;</span></div><div class=
=3D"line">      <span class=3D"p">}</span></div><div class=3D"line">      <=
span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"=
line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</span=
><span class=3D"p">:</span></div><ins class=3D"line">      <span class=3D"k=
">if</span> <span class=3D"p">(</span><span class=3D"n">row</span> <span cl=
ass=3D"o">&amp;&amp;</span> <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">cx</span> <span class=3D"o">&lt;</span> <span class=
=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">size</span=
><span class=3D"p">)</span> <span class=3D"p">{</span></ins><div class=3D"l=
ine">        <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">cx</span><span class=3D"o">++</span><span class=3D"p">;</span></div=
><ins class=3D"line">      <span class=3D"p">}</span></ins><div class=3D"li=
ne">      <span class=3D"k">break</span><span class=3D"p">;</span></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_=
UP</span><span class=3D"p">:</span></div><div class=3D"line">      <span cl=
ass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">!=3D</=
span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"=
p">{</span></div><div class=3D"line">        <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">--</span=
><span class=3D"p">;</span></div><div class=3D"line">      <span class=3D"p=
">}</span></div><div class=3D"line">      <span class=3D"k">break</span><sp=
an class=3D"p">;</span></div><div class=3D"line">    <span class=3D"k">case=
</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div>=
<div class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</=
span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">=
cy</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span>=
 <span class=3D"p">{</span></div><div class=3D"line">        <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span clas=
s=3D"o">++</span><span class=3D"p">;</span></div><div class=3D"line">      =
<span class=3D"p">}</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line">  <span cl=
ass=3D"p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div=
><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">vo=
id</span> <span class=3D"nf">editorProcessKeypress</span><span class=3D"p">=
()</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></=
div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm"=
>/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>Since <code>E.cy</code> is allowed to be one past the last line of the f=
ile, we use the
ternary operator to check if the cursor is on an actual line. If it is, the=
n
the <code>row</code> variable will point to the <code>erow</code> that the =
cursor is on, and we=E2=80=99ll
check whether <code>E.cx</code> is to the left of the end of that line befo=
re we allow the
cursor to move to the right.</p>
<h2 id=3D"snap-cursor-to-end-of-line"><a href=3D"https://viewsourcecode.org=
/snaptoken/kilo/04.aTextViewer.html#snap-cursor-to-end-of-line">Snap cursor=
 to end of line</a></h2>

<p>The user is still able to move the cursor past the end of a line, howeve=
r. They
can do it by moving the cursor to the end of a long line, then moving it do=
wn
to the next line, which is shorter. The <code>E.cx</code> value won=E2=80=
=99t change, and the
cursor will be off to the right of the end of the line it=E2=80=99s now on.=
</p>

<p>Let=E2=80=99s add some code to <code>editorMoveCursor()</code> that corr=
ects <code>E.cx</code> if it ends up
past the end of the line it=E2=80=99s on.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/snap-cursor/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 77</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/snap-cursor">snap-cursor</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> <=
span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><div class=3D"line">  <span class=3D"n">erow</span> <span class=
=3D"o">*</span><span class=3D"n">row</span> <span class=3D"o">=3D</span> <s=
pan class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">)</span> <span class=3D"o">?</span> <span class=3D"nb">NULL=
</span> <span class=3D"o">:</span> <span class=3D"o">&amp;</span><span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span=
 class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">cy</span><span class=3D"p">];</span></div><div class=3D"lin=
e"></div><div class=3D"line">  <span class=3D"k">switch</span> <span class=
=3D"p">(</span><span class=3D"n">key</span><span class=3D"p">)</span> <span=
 class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case</=
span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><d=
iv class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</sp=
an><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      =
  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx<=
/span><span class=3D"o">--</span><span class=3D"p">;</span></div><div class=
=3D"line">      <span class=3D"p">}</span></div><div class=3D"line">      <=
span class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"=
line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</span=
><span class=3D"p">:</span></div><div class=3D"line">      <span class=3D"k=
">if</span> <span class=3D"p">(</span><span class=3D"n">row</span> <span cl=
ass=3D"o">&amp;&amp;</span> <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">cx</span> <span class=3D"o">&lt;</span> <span class=
=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">size</span=
><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"l=
ine">        <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">cx</span><span class=3D"o">++</span><span class=3D"p">;</span></div=
><div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"li=
ne">      <span class=3D"k">break</span><span class=3D"p">;</span></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_=
UP</span><span class=3D"p">:</span></div><div class=3D"line">      <span cl=
ass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">!=3D</=
span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span class=3D"=
p">{</span></div><div class=3D"line">        <span class=3D"n">E</span><spa=
n class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">--</span=
><span class=3D"p">;</span></div><div class=3D"line">      <span class=3D"p=
">}</span></div><div class=3D"line">      <span class=3D"k">break</span><sp=
an class=3D"p">;</span></div><div class=3D"line">    <span class=3D"k">case=
</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:</span></div>=
<div class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</=
span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">=
cy</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</span>=
 <span class=3D"p">{</span></div><div class=3D"line">        <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span clas=
s=3D"o">++</span><span class=3D"p">;</span></div><div class=3D"line">      =
<span class=3D"p">}</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line">  <span cl=
ass=3D"p">}</span></div><div class=3D"line"></div><ins class=3D"line">  <sp=
an class=3D"n">row</span> <span class=3D"o">=3D</span> <span class=3D"p">(<=
/span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n"=
>cy</span> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">)</s=
pan> <span class=3D"o">?</span> <span class=3D"nb">NULL</span> <span class=
=3D"o">:</span> <span class=3D"o">&amp;</span><span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy<=
/span><span class=3D"p">];</span></ins><ins class=3D"line">  <span class=3D=
"kt">int</span> <span class=3D"n">rowlen</span> <span class=3D"o">=3D</span=
> <span class=3D"n">row</span> <span class=3D"o">?</span> <span class=3D"n"=
>row</span><span class=3D"o">-&gt;</span><span class=3D"n">size</span> <spa=
n class=3D"o">:</span> <span class=3D"mi">0</span><span class=3D"p">;</span=
></ins><ins class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">=
(</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"=
n">cx</span> <span class=3D"o">&gt;</span> <span class=3D"n">rowlen</span><=
span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"lin=
e">    <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">cx</span> <span class=3D"o">=3D</span> <span class=3D"n">rowlen</span><sp=
an class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"p">}</spa=
n></ins><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"l=
ine"></div><div class=3D"line folded"><span class=3D"kt">void</span> <span =
class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</span> <span =
class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** init ***=
/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We have to set <code>row</code> again, since <code>E.cy</code> could poi=
nt to a different line than
it did before. We then set <code>E.cx</code> to the end of that line if <co=
de>E.cx</code> is to the
right of the end of that line. Also note that we consider a <code>NULL</cod=
e> line to be
of length <code>0</code>, which works for our purposes here.</p>
<h2 id=3D"moving-left-at-the-start-of-a-line"><a href=3D"https://viewsource=
code.org/snaptoken/kilo/04.aTextViewer.html#moving-left-at-the-start-of-a-l=
ine">Moving left at the start of a line</a></h2>

<p>Let=E2=80=99s allow the user to press <kbd>=E2=86=90</kbd> at the beginn=
ing of the line to
move to the end of the previous line.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/moving-left/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 78</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/moving-left">moving-left</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> <=
span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><div class=3D"line">  <span class=3D"n">erow</span> <span class=
=3D"o">*</span><span class=3D"n">row</span> <span class=3D"o">=3D</span> <s=
pan class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">)</span> <span class=3D"o">?</span> <span class=3D"nb">NULL=
</span> <span class=3D"o">:</span> <span class=3D"o">&amp;</span><span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span=
 class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">cy</span><span class=3D"p">];</span></div><div class=3D"lin=
e"></div><div class=3D"line">  <span class=3D"k">switch</span> <span class=
=3D"p">(</span><span class=3D"n">key</span><span class=3D"p">)</span> <span=
 class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case</=
span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><d=
iv class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</sp=
an><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      =
  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx<=
/span><span class=3D"o">--</span><span class=3D"p">;</span></div><ins class=
=3D"line">      <span class=3D"p">}</span> <span class=3D"k">else</span> <s=
pan class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=
&gt;</span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span></ins><ins class=3D"line">        <span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">--=
</span><span class=3D"p">;</span></ins><ins class=3D"line">        <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D=
"p">].</span><span class=3D"n">size</span><span class=3D"p">;</span></ins><=
div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"line=
">      <span class=3D"k">break</span><span class=3D"p">;</span></div><div =
class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RI=
GHT</span><span class=3D"p">:</span></div><div class=3D"line">      <span c=
lass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">row</span>=
 <span class=3D"o">&amp;&amp;</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">&lt;</span> <s=
pan class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">s=
ize</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div c=
lass=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">cx</span><span class=3D"o">++</span><span class=3D"p">;</s=
pan></div><div class=3D"line">      <span class=3D"p">}</span></div><div cl=
ass=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span>=
</div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"=
n">ARROW_UP</span><span class=3D"p">:</span></div><div class=3D"line">     =
 <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"=
o">!=3D</span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span =
class=3D"p">{</span></div><div class=3D"line">        <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o"=
>--</span><span class=3D"p">;</span></div><div class=3D"line">      <span c=
lass=3D"p">}</span></div><div class=3D"line">      <span class=3D"k">break<=
/span><span class=3D"p">;</span></div><div class=3D"line">    <span class=
=3D"k">case</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:</=
span></div><div class=3D"line">      <span class=3D"k">if</span> <span clas=
s=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">cy</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"=
p">)</span> <span class=3D"p">{</span></div><div class=3D"line">        <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span=
><span class=3D"o">++</span><span class=3D"p">;</span></div><div class=3D"l=
ine">      <span class=3D"p">}</span></div><div class=3D"line">      <span =
class=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line"=
>  <span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"=
line">  <span class=3D"n">row</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=
=3D"p">)</span> <span class=3D"o">?</span> <span class=3D"nb">NULL</span> <=
span class=3D"o">:</span> <span class=3D"o">&amp;</span><span class=3D"n">E=
</span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D=
"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">cy</span><span class=3D"p">];</span></div><div class=3D"line">  <spa=
n class=3D"kt">int</span> <span class=3D"n">rowlen</span> <span class=3D"o"=
>=3D</span> <span class=3D"n">row</span> <span class=3D"o">?</span> <span c=
lass=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">size</=
span> <span class=3D"o">:</span> <span class=3D"mi">0</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cx</span> <span class=3D"o">&gt;</span> <span class=3D"n">rowl=
en</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div cl=
ass=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"n">rowlen=
</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D=
"p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div =
class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</sp=
an> <span class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</sp=
an> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** =
init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We make sure they aren=E2=80=99t on the very first line before we move t=
hem up a line.</p>
<h2 id=3D"moving-right-at-the-end-of-a-line"><a href=3D"https://viewsourcec=
ode.org/snaptoken/kilo/04.aTextViewer.html#moving-right-at-the-end-of-a-lin=
e">Moving right at the end of a line</a></h2>

<p>Similarly, let=E2=80=99s allow the user to press <kbd>=E2=86=92</kbd> at=
 the end of a line
to go to the beginning of the next line.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/moving-right/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 79</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/moving-right">moving-right</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edito=
rMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</span> <=
span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D"p">{</=
span></div><div class=3D"line">  <span class=3D"n">erow</span> <span class=
=3D"o">*</span><span class=3D"n">row</span> <span class=3D"o">=3D</span> <s=
pan class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">)</span> <span class=3D"o">?</span> <span class=3D"nb">NULL=
</span> <span class=3D"o">:</span> <span class=3D"o">&amp;</span><span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span=
 class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">cy</span><span class=3D"p">];</span></div><div class=3D"lin=
e"></div><div class=3D"line">  <span class=3D"k">switch</span> <span class=
=3D"p">(</span><span class=3D"n">key</span><span class=3D"p">)</span> <span=
 class=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">case</=
span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><d=
iv class=3D"line">      <span class=3D"k">if</span> <span class=3D"p">(</sp=
an><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx=
</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      =
  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx<=
/span><span class=3D"o">--</span><span class=3D"p">;</span></div><div class=
=3D"line">      <span class=3D"p">}</span> <span class=3D"k">else</span> <s=
pan class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">=
&gt;</span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span></div><div class=3D"line">        <span class=3D"n">E</spa=
n><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">--=
</span><span class=3D"p">;</span></div><div class=3D"line">        <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D=
"p">].</span><span class=3D"n">size</span><span class=3D"p">;</span></div><=
div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"line=
">      <span class=3D"k">break</span><span class=3D"p">;</span></div><div =
class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RI=
GHT</span><span class=3D"p">:</span></div><div class=3D"line">      <span c=
lass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">row</span>=
 <span class=3D"o">&amp;&amp;</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">&lt;</span> <s=
pan class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">s=
ize</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div c=
lass=3D"line">        <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">cx</span><span class=3D"o">++</span><span class=3D"p">;</s=
pan></div><ins class=3D"line">      <span class=3D"p">}</span> <span class=
=3D"k">else</span> <span class=3D"k">if</span> <span class=3D"p">(</span><s=
pan class=3D"n">row</span> <span class=3D"o">&amp;&amp;</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <span =
class=3D"o">=3D=3D</span> <span class=3D"n">row</span><span class=3D"o">-&g=
t;</span><span class=3D"n">size</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span></ins><ins class=3D"line">        <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">++<=
/span><span class=3D"p">;</span></ins><ins class=3D"line">        <span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <spa=
n class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</sp=
an></ins><div class=3D"line">      <span class=3D"p">}</span></div><div cla=
ss=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span><=
/div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"n=
">ARROW_UP</span><span class=3D"p">:</span></div><div class=3D"line">      =
<span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o=
">!=3D</span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span c=
lass=3D"p">{</span></div><div class=3D"line">        <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"o">=
--</span><span class=3D"p">;</span></div><div class=3D"line">      <span cl=
ass=3D"p">}</span></div><div class=3D"line">      <span class=3D"k">break</=
span><span class=3D"p">;</span></div><div class=3D"line">    <span class=3D=
"k">case</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:</spa=
n></div><div class=3D"line">      <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">cy</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span=
><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p=
">)</span> <span class=3D"p">{</span></div><div class=3D"line">        <spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span>=
<span class=3D"o">++</span><span class=3D"p">;</span></div><div class=3D"li=
ne">      <span class=3D"p">}</span></div><div class=3D"line">      <span c=
lass=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line">=
  <span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"l=
ine">  <span class=3D"n">row</span> <span class=3D"o">=3D</span> <span clas=
s=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">cy</span> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">numrows</span><span class=
=3D"p">)</span> <span class=3D"o">?</span> <span class=3D"nb">NULL</span> <=
span class=3D"o">:</span> <span class=3D"o">&amp;</span><span class=3D"n">E=
</span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D=
"p">[</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">cy</span><span class=3D"p">];</span></div><div class=3D"line">  <spa=
n class=3D"kt">int</span> <span class=3D"n">rowlen</span> <span class=3D"o"=
>=3D</span> <span class=3D"n">row</span> <span class=3D"o">?</span> <span c=
lass=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">size</=
span> <span class=3D"o">:</span> <span class=3D"mi">0</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"k">if</span> <span cl=
ass=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">cx</span> <span class=3D"o">&gt;</span> <span class=3D"n">rowl=
en</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div cl=
ass=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"n">rowlen=
</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D=
"p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div =
class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</sp=
an> <span class=3D"nf">editorProcessKeypress</span><span class=3D"p">()</sp=
an> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** =
init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>Here we have to make sure they=E2=80=99re not at the end of the file bef=
ore moving down
a line.</p>
<h2 id=3D"rendering-tabs"><a href=3D"https://viewsourcecode.org/snaptoken/k=
ilo/04.aTextViewer.html#rendering-tabs">Rendering tabs</a></h2>

<p>If you try opening the <code>Makefile</code> using <code>./kilo Makefile=
</code>, you=E2=80=99ll notice that
the tab character on the second line of the Makefile takes up a width of 8
columns or so. The length of a tab is up to the terminal being used and its
settings. We want to <em>know</em> the length of each tab, and we also want=
 control
over how to render tabs, so we=E2=80=99re going to add a second string to t=
he <code>erow</code>
struct called <code>render</code>, which will contain the actual characters=
 to draw on the
screen for that row of text. We=E2=80=99ll only use <code>render</code> for=
 tabs for now, but in
the future it could be used to render nonprintable control characters as a =
<code>^</code>
character followed by another character, such as <code>^A</code> for the <k=
bd>Ctrl-A</kbd>
character (this is a common way to display control characters in the termin=
al).</p>

<p>You may also notice that when the tab character in the <code>Makefile</c=
ode> is displayed
by the terminal, it doesn=E2=80=99t erase any characters on the screen with=
in that tab.
All a tab does is move the cursor forward to the next tab stop, similar to =
a
carriage return or newline. This is another reason why we want to render ta=
bs
as multiple spaces, since spaces erase whatever character was there before.=
</p>

<p>So, let=E2=80=99s start by adding <code>render</code> and <code>rsize</c=
ode> (which contains the size of the
contents of <code>render</code>) to the <code>erow</code> struct, and initi=
alizing them in
<code>editorAppendRow()</code>, which is where new <code>erow</code>s get c=
onstructed and
initialized.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/render/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 80</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/render">render</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <span cl=
ass=3D"n">erow</span> <span class=3D"p">{</span></div><div class=3D"line"> =
 <span class=3D"kt">int</span> <span class=3D"n">size</span><span class=3D"=
p">;</span></div><ins class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">rsize</span><span class=3D"p">;</span></ins><div class=3D"line"=
>  <span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"=
n">chars</span><span class=3D"p">;</span></div><ins class=3D"line">  <span =
class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">render=
</span><span class=3D"p">;</span></ins><div class=3D"line"><span class=3D"p=
">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></div><di=
v class=3D"line"></div><div class=3D"line folded"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">};</span></div><div class=3D"line"></div><div clas=
s=3D"line"><span class=3D"k">struct</span> <span class=3D"n">editorConfig</=
span> <span class=3D"n">E</span><span class=3D"p">;</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** terminal=
 ***/</span></div><div class=3D"line"><span class=3D"cm">/*** row operation=
s ***/</span></div><div class=3D"line"></div><div class=3D"line"><span clas=
s=3D"kt">void</span> <span class=3D"nf">editorAppendRow</span><span class=
=3D"p">(</span><span class=3D"kt">char</span> <span class=3D"o">*</span><sp=
an class=3D"n">s</span><span class=3D"p">,</span> <span class=3D"kt">size_t=
</span> <span class=3D"n">len</span><span class=3D"p">)</span> <span class=
=3D"p">{</span></div><div class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">row</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">realloc</span><span class=3D"p">(</span><span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><span cla=
ss=3D"p">,</span> <span class=3D"k">sizeof</span><span class=3D"p">(</span>=
<span class=3D"n">erow</span><span class=3D"p">)</span> <span class=3D"o">*=
</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">numrows</span> <span class=3D"o">+</span> <spa=
n class=3D"mi">1</span><span class=3D"p">));</span></div><div class=3D"line=
"></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"=
n">at</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span c=
lass=3D"p">.</span><span class=3D"n">numrows</span><span class=3D"p">;</spa=
n></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">row</span><span class=3D"p">[</span><span class=3D=
"n">at</span><span class=3D"p">].</span><span class=3D"n">size</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">len</span><span class=3D"p">;</sp=
an></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">=
.</span><span class=3D"n">row</span><span class=3D"p">[</span><span class=
=3D"n">at</span><span class=3D"p">].</span><span class=3D"n">chars</span> <=
span class=3D"o">=3D</span> <span class=3D"n">malloc</span><span class=3D"p=
">(</span><span class=3D"n">len</span> <span class=3D"o">+</span> <span cla=
ss=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">  <s=
pan class=3D"n">memcpy</span><span class=3D"p">(</span><span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"=
p">[</span><span class=3D"n">at</span><span class=3D"p">].</span><span clas=
s=3D"n">chars</span><span class=3D"p">,</span> <span class=3D"n">s</span><s=
pan class=3D"p">,</span> <span class=3D"n">len</span><span class=3D"p">);</=
span></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">row</span><span class=3D"p">[</span><span class=
=3D"n">at</span><span class=3D"p">].</span><span class=3D"n">chars</span><s=
pan class=3D"p">[</span><span class=3D"n">len</span><span class=3D"p">]</sp=
an> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span class=
=3D"p">;</span></div><div class=3D"line"></div><ins class=3D"line">  <span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><=
span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">].</s=
pan><span class=3D"n">rsize</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">0</span><span class=3D"p">;</span></ins><ins class=3D"line">  <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span>=
<span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">].</=
span><span class=3D"n">render</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"nb">NULL</span><span class=3D"p">;</span></ins><div class=3D"line"></=
div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">numrows</span><span class=3D"o">++</span><span class=
=3D"p">;</span></div><div class=3D"line"><span class=3D"p">}</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** =
file i/o ***/</span></div><div class=3D"line folded"><span class=3D"cm">/**=
* append buffer ***/</span></div><div class=3D"line folded"><span class=3D"=
cm">/*** output ***/</span></div><div class=3D"line folded"><span class=3D"=
cm">/*** input ***/</span></div><div class=3D"line folded"><span class=3D"c=
m">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Next, let=E2=80=99s make an <code>editorUpdateRow()</code> function that=
 uses the <code>chars</code> string
of an <code>erow</code> to fill in the contents of the <code>render</code> =
string. We=E2=80=99ll copy each
character from <code>chars</code> to <code>render</code>. We won=E2=80=99t =
worry about how to render tabs
just yet.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/editor-update-row/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 81</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/editor-update-row">editor-update-row</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line"></div><ins cla=
ss=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorUpdateR=
ow</span><span class=3D"p">(</span><span class=3D"n">erow</span> <span clas=
s=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">)</span> <spa=
n class=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"n">free</s=
pan><span class=3D"p">(</span><span class=3D"n">row</span><span class=3D"o"=
>-&gt;</span><span class=3D"n">render</span><span class=3D"p">);</span></in=
s><ins class=3D"line">  <span class=3D"n">row</span><span class=3D"o">-&gt;=
</span><span class=3D"n">render</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">malloc</span><span class=3D"p">(</span><span class=3D"n">row</sp=
an><span class=3D"o">-&gt;</span><span class=3D"n">size</span> <span class=
=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</span></ins=
><ins class=3D"line"></ins><ins class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">j</span><span class=3D"p">;</span></ins><ins class=3D=
"line">  <span class=3D"kt">int</span> <span class=3D"n">idx</span> <span c=
lass=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span>=
</ins><ins class=3D"line">  <span class=3D"k">for</span> <span class=3D"p">=
(</span><span class=3D"n">j</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n">j</span> <span=
 class=3D"o">&lt;</span> <span class=3D"n">row</span><span class=3D"o">-&gt=
;</span><span class=3D"n">size</span><span class=3D"p">;</span> <span class=
=3D"n">j</span><span class=3D"o">++</span><span class=3D"p">)</span> <span =
class=3D"p">{</span></ins><ins class=3D"line">    <span class=3D"n">row</sp=
an><span class=3D"o">-&gt;</span><span class=3D"n">render</span><span class=
=3D"p">[</span><span class=3D"n">idx</span><span class=3D"o">++</span><span=
 class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"n">row</s=
pan><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=
=3D"p">[</span><span class=3D"n">j</span><span class=3D"p">];</span></ins><=
ins class=3D"line">  <span class=3D"p">}</span></ins><ins class=3D"line">  =
<span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n"=
>render</span><span class=3D"p">[</span><span class=3D"n">idx</span><span c=
lass=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'</s=
pan><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"n"=
>row</span><span class=3D"o">-&gt;</span><span class=3D"n">rsize</span> <sp=
an class=3D"o">=3D</span> <span class=3D"n">idx</span><span class=3D"p">;</=
span></ins><ins class=3D"line"><span class=3D"p">}</span></ins><div class=
=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span cl=
ass=3D"nf">editorAppendRow</span><span class=3D"p">(</span><span class=3D"k=
t">char</span> <span class=3D"o">*</span><span class=3D"n">s</span><span cl=
ass=3D"p">,</span> <span class=3D"kt">size_t</span> <span class=3D"n">len</=
span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=
=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">row</span> <span class=3D"o">=3D</span> <span class=3D"n">realloc</s=
pan><span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.=
</span><span class=3D"n">row</span><span class=3D"p">,</span> <span class=
=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">erow</span>=
<span class=3D"p">)</span> <span class=3D"o">*</span> <span class=3D"p">(</=
span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">=
numrows</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><span =
class=3D"p">));</span></div><div class=3D"line"></div><div class=3D"line"> =
 <span class=3D"kt">int</span> <span class=3D"n">at</span> <span class=3D"o=
">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">numrows</span><span class=3D"p">;</span></div><div class=3D"line"> =
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row<=
/span><span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"p=
">].</span><span class=3D"n">size</span> <span class=3D"o">=3D</span> <span=
 class=3D"n">len</span><span class=3D"p">;</span></div><div class=3D"line">=
  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row=
</span><span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"=
p">].</span><span class=3D"n">chars</span> <span class=3D"o">=3D</span> <sp=
an class=3D"n">malloc</span><span class=3D"p">(</span><span class=3D"n">len=
</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><span class=
=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">memcpy</span>=
<span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">row</span><span class=3D"p">[</span><span class=3D"n">=
at</span><span class=3D"p">].</span><span class=3D"n">chars</span><span cla=
ss=3D"p">,</span> <span class=3D"n">s</span><span class=3D"p">,</span> <spa=
n class=3D"n">len</span><span class=3D"p">);</span></div><div class=3D"line=
">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">r=
ow</span><span class=3D"p">[</span><span class=3D"n">at</span><span class=
=3D"p">].</span><span class=3D"n">chars</span><span class=3D"p">[</span><sp=
an class=3D"n">len</span><span class=3D"p">]</span> <span class=3D"o">=3D</=
span> <span class=3D"sc">'\0'</span><span class=3D"p">;</span></div><div cl=
ass=3D"line"></div><div class=3D"line">  <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><sp=
an class=3D"n">at</span><span class=3D"p">].</span><span class=3D"n">rsize<=
/span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><=
span class=3D"n">at</span><span class=3D"p">].</span><span class=3D"n">rend=
er</span> <span class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span =
class=3D"p">;</span></div><ins class=3D"line">  <span class=3D"n">editorUpd=
ateRow</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span =
class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span><=
span class=3D"p">[</span><span class=3D"n">at</span><span class=3D"p">]);</=
span></ins><div class=3D"line"></div><div class=3D"line">  <span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><span c=
lass=3D"o">++</span><span class=3D"p">;</span></div><div class=3D"line"><sp=
an class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line f=
olded"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** append buffer ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** output ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code></pre=
>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>After the <code>for</code> loop, <code>idx</code> contains the number of=
 characters we copied into
<code>row-&gt;render</code>, so we assign it to <code>row-&gt;rsize</code>.=
</p>

<p>Now let=E2=80=99s replace <code>chars</code> and <code>size</code> with =
<code>render</code> and <code>rsize</code> in
<code>editorDrawRows()</code>, when we display each <code>erow</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/use-render/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 82</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/use-render">use-render</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorDraw=
Rows</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span =
class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</spa=
n><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"=
line">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</span> <sp=
an class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=3D</sp=
an> <span class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n"=
>y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</sp=
an> <span class=3D"n">y</span><span class=3D"o">++</span><span class=3D"p">=
)</span> <span class=3D"p">{</span></div><div class=3D"line">    <span clas=
s=3D"kt">int</span> <span class=3D"n">filerow</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">y</span> <span class=3D"o">+</span> <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span><span =
class=3D"p">;</span></div><div class=3D"line">    <span class=3D"k">if</spa=
n> <span class=3D"p">(</span><span class=3D"n">filerow</span> <span class=
=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">numrows</span><span class=3D"p">)</span> <span class=3D"p"=
>{</span></div><div class=3D"line">      <span class=3D"k">if</span> <span =
class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">numrows</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">y</s=
pan> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">/</spa=
n> <span class=3D"mi">3</span><span class=3D"p">)</span> <span class=3D"p">=
{</span></div><div class=3D"line">        <span class=3D"kt">char</span> <s=
pan class=3D"n">welcome</span><span class=3D"p">[</span><span class=3D"mi">=
80</span><span class=3D"p">];</span></div><div class=3D"line">        <span=
 class=3D"kt">int</span> <span class=3D"n">welcomelen</span> <span class=3D=
"o">=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</span><=
span class=3D"n">welcome</span><span class=3D"p">,</span> <span class=3D"k"=
>sizeof</span><span class=3D"p">(</span><span class=3D"n">welcome</span><sp=
an class=3D"p">),</span></div><div class=3D"line">          <span class=3D"=
s">"Kilo editor -- version %s"</span><span class=3D"p">,</span> <span class=
=3D"n">KILO_VERSION</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"k">if</span> <span class=3D"p">(</span><span cla=
ss=3D"n">welcomelen</span> <span class=3D"o">&gt;</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><span =
class=3D"p">)</span> <span class=3D"n">welcomelen</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screencols</span><span class=3D"p">;</span></div><div class=3D"line"=
>        <span class=3D"kt">int</span> <span class=3D"n">padding</span> <sp=
an class=3D"o">=3D</span> <span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">screencols</span> <span clas=
s=3D"o">-</span> <span class=3D"n">welcomelen</span><span class=3D"p">)</sp=
an> <span class=3D"o">/</span> <span class=3D"mi">2</span><span class=3D"p"=
>;</span></div><div class=3D"line">        <span class=3D"k">if</span> <spa=
n class=3D"p">(</span><span class=3D"n">padding</span><span class=3D"p">)</=
span> <span class=3D"p">{</span></div><div class=3D"line">          <span c=
lass=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"s">"~"</span><span class=3D"p=
">,</span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><div=
 class=3D"line">          <span class=3D"n">padding</span><span class=3D"o"=
>--</span><span class=3D"p">;</span></div><div class=3D"line">        <span=
 class=3D"p">}</span></div><div class=3D"line">        <span class=3D"k">wh=
ile</span> <span class=3D"p">(</span><span class=3D"n">padding</span><span =
class=3D"o">--</span><span class=3D"p">)</span> <span class=3D"n">abAppend<=
/span><span class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p=
">,</span> <span class=3D"s">" "</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">    =
    <span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=
=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">welcome</span>=
<span class=3D"p">,</span> <span class=3D"n">welcomelen</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span> =
<span class=3D"k">else</span> <span class=3D"p">{</span></div><div class=3D=
"line">        <span class=3D"n">abAppend</span><span class=3D"p">(</span><=
span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"~"<=
/span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"=
p">);</span></div><div class=3D"line">      <span class=3D"p">}</span></div=
><div class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">else<=
/span> <span class=3D"p">{</span></div><ins class=3D"line">      <span clas=
s=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">ro=
w</span><span class=3D"p">[</span><span class=3D"n">filerow</span><span cla=
ss=3D"p">].</span><span class=3D"n">rsize</span> <span class=3D"o">-</span>=
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">colo=
ff</span><span class=3D"p">;</span></ins><div class=3D"line">      <span cl=
ass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">len</span> =
<span class=3D"o">&lt;</span> <span class=3D"mi">0</span><span class=3D"p">=
)</span> <span class=3D"n">len</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">    =
  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">l=
en</span> <span class=3D"o">&gt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">)</sp=
an> <span class=3D"n">len</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span=
><span class=3D"p">;</span></div><ins class=3D"line">      <span class=3D"n=
">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span=
 class=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">=
[</span><span class=3D"n">filerow</span><span class=3D"p">].</span><span cl=
ass=3D"n">render</span><span class=3D"p">[</span><span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"p">=
],</span> <span class=3D"n">len</span><span class=3D"p">);</span></ins><div=
 class=3D"line">    <span class=3D"p">}</span></div><div class=3D"line"></d=
iv><div class=3D"line">    <span class=3D"n">abAppend</span><span class=3D"=
p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span clas=
s=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[K"</span><=
span class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</=
span></div><div class=3D"line">    <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">&lt;</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenro=
ws</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">      <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=
=3D"se">\r\n</span><span class=3D"s">"</span><span class=3D"p">,</span> <sp=
an class=3D"mi">2</span><span class=3D"p">);</span></div><div class=3D"line=
">    <span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"=
p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div><div c=
lass=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</spa=
n> <span class=3D"nf">editorRefreshScreen</span><span class=3D"p">()</span>=
 <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div =
class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** inp=
ut ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** init=
 ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Now the text viewer is displaying the characters in <code>render</code>.=
 Let=E2=80=99s add code to
<code>editorUpdateRow()</code> that renders tabs as multiple space characte=
rs.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/tabs/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 83</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/tabs">tabs</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line"></div><div cla=
ss=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorUpdateR=
ow</span><span class=3D"p">(</span><span class=3D"n">erow</span> <span clas=
s=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">)</span> <spa=
n class=3D"p">{</span></div><ins class=3D"line">  <span class=3D"kt">int</s=
pan> <span class=3D"n">tabs</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">0</span><span class=3D"p">;</span></ins><div class=3D"line">  <span=
 class=3D"kt">int</span> <span class=3D"n">j</span><span class=3D"p">;</spa=
n></div><ins class=3D"line">  <span class=3D"k">for</span> <span class=3D"p=
">(</span><span class=3D"n">j</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n">j</span> <sp=
an class=3D"o">&lt;</span> <span class=3D"n">row</span><span class=3D"o">-&=
gt;</span><span class=3D"n">size</span><span class=3D"p">;</span> <span cla=
ss=3D"n">j</span><span class=3D"o">++</span><span class=3D"p">)</span></ins=
><ins class=3D"line">    <span class=3D"k">if</span> <span class=3D"p">(</s=
pan><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=
=3D"n">chars</span><span class=3D"p">[</span><span class=3D"n">j</span><spa=
n class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'=
\t'</span><span class=3D"p">)</span> <span class=3D"n">tabs</span><span cla=
ss=3D"o">++</span><span class=3D"p">;</span></ins><ins class=3D"line"></ins=
><ins class=3D"line">  <span class=3D"n">free</span><span class=3D"p">(</sp=
an><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D=
"n">render</span><span class=3D"p">);</span></ins><ins class=3D"line">  <sp=
an class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">re=
nder</span> <span class=3D"o">=3D</span> <span class=3D"n">malloc</span><sp=
an class=3D"p">(</span><span class=3D"n">row</span><span class=3D"o">-&gt;<=
/span><span class=3D"n">size</span> <span class=3D"o">+</span> <span class=
=3D"n">tabs</span><span class=3D"o">*</span><span class=3D"mi">7</span> <sp=
an class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">);</sp=
an></ins><div class=3D"line"></div><div class=3D"line">  <span class=3D"kt"=
>int</span> <span class=3D"n">idx</span> <span class=3D"o">=3D</span> <span=
 class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line"> =
 <span class=3D"k">for</span> <span class=3D"p">(</span><span class=3D"n">j=
</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span> <span class=3D"n">j</span> <span class=3D"o">&lt;</span> <s=
pan class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">s=
ize</span><span class=3D"p">;</span> <span class=3D"n">j</span><span class=
=3D"o">++</span><span class=3D"p">)</span> <span class=3D"p">{</span></div>=
<ins class=3D"line">    <span class=3D"k">if</span> <span class=3D"p">(</sp=
an><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D=
"n">chars</span><span class=3D"p">[</span><span class=3D"n">j</span><span c=
lass=3D"p">]</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'\t'=
</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins clas=
s=3D"line">      <span class=3D"n">row</span><span class=3D"o">-&gt;</span>=
<span class=3D"n">render</span><span class=3D"p">[</span><span class=3D"n">=
idx</span><span class=3D"o">++</span><span class=3D"p">]</span> <span class=
=3D"o">=3D</span> <span class=3D"sc">' '</span><span class=3D"p">;</span></=
ins><ins class=3D"line">      <span class=3D"k">while</span> <span class=3D=
"p">(</span><span class=3D"n">idx</span> <span class=3D"o">%</span> <span c=
lass=3D"mi">8</span> <span class=3D"o">!=3D</span> <span class=3D"mi">0</sp=
an><span class=3D"p">)</span> <span class=3D"n">row</span><span class=3D"o"=
>-&gt;</span><span class=3D"n">render</span><span class=3D"p">[</span><span=
 class=3D"n">idx</span><span class=3D"o">++</span><span class=3D"p">]</span=
> <span class=3D"o">=3D</span> <span class=3D"sc">' '</span><span class=3D"=
p">;</span></ins><ins class=3D"line">    <span class=3D"p">}</span> <span c=
lass=3D"k">else</span> <span class=3D"p">{</span></ins><div class=3D"line">=
      <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=
=3D"n">render</span><span class=3D"p">[</span><span class=3D"n">idx</span><=
span class=3D"o">++</span><span class=3D"p">]</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span clas=
s=3D"n">chars</span><span class=3D"p">[</span><span class=3D"n">j</span><sp=
an class=3D"p">];</span></div><div class=3D"line">    <span class=3D"p">}</=
span></div><ins class=3D"line">  <span class=3D"p">}</span></ins><div class=
=3D"line">  <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span=
 class=3D"n">render</span><span class=3D"p">[</span><span class=3D"n">idx</=
span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D=
"sc">'\0'</span><span class=3D"p">;</span></div><div class=3D"line">  <span=
 class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">rsiz=
e</span> <span class=3D"o">=3D</span> <span class=3D"n">idx</span><span cla=
ss=3D"p">;</span></div><div class=3D"line"><span class=3D"p">}</span></div>=
<div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">voi=
d</span> <span class=3D"nf">editorAppendRow</span><span class=3D"p">(</span=
><span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n"=
>s</span><span class=3D"p">,</span> <span class=3D"kt">size_t</span> <span =
class=3D"n">len</span><span class=3D"p">)</span> <span class=3D"p">{</span>=
 =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div c=
lass=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div=
 class=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></d=
iv><div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></d=
iv><div class=3D"line folded"><span class=3D"cm">/*** input ***/</span></di=
v><div class=3D"line folded"><span class=3D"cm">/*** init ***/</span></div>=
</code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>First, we have to loop through the <code>chars</code> of the row and cou=
nt the tabs in
order to know how much memory to allocate for <code>render</code>. The maxi=
mum number of
characters needed for each tab is 8. <code>row-&gt;size</code> already coun=
ts 1 for each tab,
so we multiply the number of tabs by 7 and add that to <code>row-&gt;size</=
code> to get the
maximum amount of memory we=E2=80=99ll need for the rendered row.</p>

<p>After allocating the memory, we modify the <code>for</code> loop to chec=
k whether the
current character is a tab. If it is, we append one space (because each tab
must advance the cursor forward at least one column), and then append space=
s
until we get to a tab stop, which is a column that is divisible by 8.</p>

<p>At this point, we should probably make the length of a tab stop a consta=
nt.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/tab-stop/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 84</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/tab-stop">tab-stop</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line"><span class=3D"c=
m">/*** defines ***/</span></div><div class=3D"line"></div><div class=3D"li=
ne"><span class=3D"cp">#define KILO_VERSION "0.0.1"</span></div><ins class=
=3D"line"><span class=3D"cp">#define KILO_TAB_STOP 8</span></ins><div class=
=3D"line"></div><div class=3D"line"><span class=3D"cp">#define CTRL_KEY(k) =
((k) &amp; 0x1f)</span></div><div class=3D"line"></div><div class=3D"line f=
olded"><span class=3D"k">enum</span> <span class=3D"n">editorKey</span> <sp=
an class=3D"p">{</span> =E2=80=A6 <span class=3D"p">};</span></div><div cla=
ss=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** data *=
**/</span></div><div class=3D"line folded"><span class=3D"cm">/*** terminal=
 ***/</span></div><div class=3D"line"><span class=3D"cm">/*** row operation=
s ***/</span></div><div class=3D"line"></div><div class=3D"line"><span clas=
s=3D"kt">void</span> <span class=3D"nf">editorUpdateRow</span><span class=
=3D"p">(</span><span class=3D"n">erow</span> <span class=3D"o">*</span><spa=
n class=3D"n">row</span><span class=3D"p">)</span> <span class=3D"p">{</spa=
n></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"=
n">tabs</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><spa=
n class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</s=
pan> <span class=3D"n">j</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"k">for</span> <span class=3D"p">(</span><span cl=
ass=3D"n">j</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span>=
<span class=3D"p">;</span> <span class=3D"n">j</span> <span class=3D"o">&lt=
;</span> <span class=3D"n">row</span><span class=3D"o">-&gt;</span><span cl=
ass=3D"n">size</span><span class=3D"p">;</span> <span class=3D"n">j</span><=
span class=3D"o">++</span><span class=3D"p">)</span></div><div class=3D"lin=
e">    <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D=
"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><=
span class=3D"p">[</span><span class=3D"n">j</span><span class=3D"p">]</spa=
n> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'\t'</span><span clas=
s=3D"p">)</span> <span class=3D"n">tabs</span><span class=3D"o">++</span><s=
pan class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line"=
>  <span class=3D"n">free</span><span class=3D"p">(</span><span class=3D"n"=
>row</span><span class=3D"o">-&gt;</span><span class=3D"n">render</span><sp=
an class=3D"p">);</span></div><ins class=3D"line">  <span class=3D"n">row</=
span><span class=3D"o">-&gt;</span><span class=3D"n">render</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">malloc</span><span class=3D"p">(</sp=
an><span class=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D=
"n">size</span> <span class=3D"o">+</span> <span class=3D"n">tabs</span><sp=
an class=3D"o">*</span><span class=3D"p">(</span><span class=3D"n">KILO_TAB=
_STOP</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cl=
ass=3D"p">)</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><s=
pan class=3D"p">);</span></ins><div class=3D"line"></div><div class=3D"line=
">  <span class=3D"kt">int</span> <span class=3D"n">idx</span> <span class=
=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></di=
v><div class=3D"line">  <span class=3D"k">for</span> <span class=3D"p">(</s=
pan><span class=3D"n">j</span> <span class=3D"o">=3D</span> <span class=3D"=
mi">0</span><span class=3D"p">;</span> <span class=3D"n">j</span> <span cla=
ss=3D"o">&lt;</span> <span class=3D"n">row</span><span class=3D"o">-&gt;</s=
pan><span class=3D"n">size</span><span class=3D"p">;</span> <span class=3D"=
n">j</span><span class=3D"o">++</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">if</span> <=
span class=3D"p">(</span><span class=3D"n">row</span><span class=3D"o">-&gt=
;</span><span class=3D"n">chars</span><span class=3D"p">[</span><span class=
=3D"n">j</span><span class=3D"p">]</span> <span class=3D"o">=3D=3D</span> <=
span class=3D"sc">'\t'</span><span class=3D"p">)</span> <span class=3D"p">{=
</span></div><div class=3D"line">      <span class=3D"n">row</span><span cl=
ass=3D"o">-&gt;</span><span class=3D"n">render</span><span class=3D"p">[</s=
pan><span class=3D"n">idx</span><span class=3D"o">++</span><span class=3D"p=
">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">' '</span><span =
class=3D"p">;</span></div><ins class=3D"line">      <span class=3D"k">while=
</span> <span class=3D"p">(</span><span class=3D"n">idx</span> <span class=
=3D"o">%</span> <span class=3D"n">KILO_TAB_STOP</span> <span class=3D"o">!=
=3D</span> <span class=3D"mi">0</span><span class=3D"p">)</span> <span clas=
s=3D"n">row</span><span class=3D"o">-&gt;</span><span class=3D"n">render</s=
pan><span class=3D"p">[</span><span class=3D"n">idx</span><span class=3D"o"=
>++</span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"sc">' '</span><span class=3D"p">;</span></ins><div class=3D"line">   =
 <span class=3D"p">}</span> <span class=3D"k">else</span> <span class=3D"p"=
>{</span></div><div class=3D"line">      <span class=3D"n">row</span><span =
class=3D"o">-&gt;</span><span class=3D"n">render</span><span class=3D"p">[<=
/span><span class=3D"n">idx</span><span class=3D"o">++</span><span class=3D=
"p">]</span> <span class=3D"o">=3D</span> <span class=3D"n">row</span><span=
 class=3D"o">-&gt;</span><span class=3D"n">chars</span><span class=3D"p">[<=
/span><span class=3D"n">j</span><span class=3D"p">];</span></div><div class=
=3D"line">    <span class=3D"p">}</span></div><div class=3D"line">  <span c=
lass=3D"p">}</span></div><div class=3D"line">  <span class=3D"n">row</span>=
<span class=3D"o">-&gt;</span><span class=3D"n">render</span><span class=3D=
"p">[</span><span class=3D"n">idx</span><span class=3D"p">]</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"sc">'\0'</span><span class=3D"p">;</spa=
n></div><div class=3D"line">  <span class=3D"n">row</span><span class=3D"o"=
>-&gt;</span><span class=3D"n">rsize</span> <span class=3D"o">=3D</span> <s=
pan class=3D"n">idx</span><span class=3D"p">;</span></div><div class=3D"lin=
e"><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"=
line folded"><span class=3D"kt">void</span> <span class=3D"nf">editorAppend=
Row</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span cl=
ass=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> <spa=
n class=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D"p">=
)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></d=
iv><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">=
/*** file i/o ***/</span></div><div class=3D"line folded"><span class=3D"cm=
">/*** append buffer ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><span class=
=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>This makes the code clearer, and also makes the tab stop length configur=
able.</p>
<h2 id=3D"tabs-and-the-cursor"><a href=3D"https://viewsourcecode.org/snapto=
ken/kilo/04.aTextViewer.html#tabs-and-the-cursor">Tabs and the cursor</a></=
h2>

<p>The cursor doesn=E2=80=99t currently interact with tabs very well. When =
we position the
cursor on the screen, we=E2=80=99re still assuming each character takes up =
only one
column on the screen. To fix this, let=E2=80=99s introduce a new horizontal=
 coordinate
variable, <code>E.rx</code>. While <code>E.cx</code> is an index into the <=
code>chars</code> field of an <code>erow</code>,
the <code>E.rx</code> variable will be an index into the <code>render</code=
> field. If there are no
tabs on the current line, then <code>E.rx</code> will be the same as <code>=
E.cx</code>. If there are
tabs, then <code>E.rx</code> will be greater than <code>E.cx</code> by howe=
ver many extra spaces
those tabs take up when rendered.</p>

<p>Start by adding <code>rx</code> to the global state struct, and initiali=
zing it to <code>0</code>.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/rx/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 85</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/rx">rx</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span></di=
v><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">cy</span><span class=3D"=
p">;</span></div><ins class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">rx</span><span class=3D"p">;</span></ins><div class=3D"line">  =
<span class=3D"kt">int</span> <span class=3D"n">rowoff</span><span class=3D=
"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span=
 class=3D"n">coloff</span><span class=3D"p">;</span></div><div class=3D"lin=
e">  <span class=3D"kt">int</span> <span class=3D"n">screenrows</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">screencols</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">numrows</=
span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n=
">erow</span> <span class=3D"o">*</span><span class=3D"n">row</span><span c=
lass=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">struct</sp=
an> <span class=3D"n">termios</span> <span class=3D"n">orig_termios</span><=
span class=3D"p">;</span></div><div class=3D"line"><span class=3D"p">};</sp=
an></div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">st=
ruct</span> <span class=3D"n">editorConfig</span> <span class=3D"n">E</span=
><span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"li=
ne folded"><span class=3D"cm">/*** terminal ***/</span></div><div class=3D"=
line folded"><span class=3D"cm">/*** row operations ***/</span></div><div c=
lass=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></div><div=
 class=3D"line folded"><span class=3D"cm">/*** append buffer ***/</span></d=
iv><div class=3D"line folded"><span class=3D"cm">/*** output ***/</span></d=
iv><div class=3D"line folded"><span class=3D"cm">/*** input ***/</span></di=
v><div class=3D"line"><span class=3D"cm">/*** init ***/</span></div><div cl=
ass=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span=
 class=3D"nf">initEditor</span><span class=3D"p">()</span> <span class=3D"p=
">{</span></div><div class=3D"line">  <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line"=
>  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy=
</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></div><ins class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o">=3D</span=
> <span class=3D"mi">0</span><span class=3D"p">;</span></ins><div class=3D"=
line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"=
n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><s=
pan class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">coloff</span> <span class=3D=
"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><=
div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">numrows</span> <span class=3D"o">=3D</span> <span class=3D"=
mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span> <sp=
an class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;=
</span></div><div class=3D"line"></div><div class=3D"line">  <span class=3D=
"k">if</span> <span class=3D"p">(</span><span class=3D"n">getWindowSize</sp=
an><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span><spa=
n class=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">screencols</span><span clas=
s=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=3D"o">-</span>=
<span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"n">die=
</span><span class=3D"p">(</span><span class=3D"s">"getWindowSize"</span><s=
pan class=3D"p">);</span></div><div class=3D"line"><span class=3D"p">}</spa=
n></div><div class=3D"line"></div><div class=3D"line folded"><span class=3D=
"kt">int</span> <span class=3D"nf">main</span><span class=3D"p">(</span><sp=
an class=3D"kt">int</span> <span class=3D"n">argc</span><span class=3D"p">,=
</span> <span class=3D"kt">char</span> <span class=3D"o">*</span><span clas=
s=3D"n">argv</span><span class=3D"p">[])</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>We=E2=80=99ll set the value of <code>E.rx</code> at the top of <code>edi=
torScroll()</code>. For now we=E2=80=99ll
just set it to be the same as <code>E.cx</code>. Then we=E2=80=99ll replace=
 all instances of
<code>E.cx</code> with <code>E.rx</code> in <code>editorScroll()</code>, be=
cause scrolling should take into
account the characters that are actually rendered to the screen, and the
rendered position of the cursor.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/rx-scroll/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 86</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/rx-scroll">rx-scroll</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span></div>=
<ins class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">rx</span> <span class=3D"o">=3D</span> <span class=3D"n">E=
</span><span class=3D"p">.</span><span class=3D"n">cx</span><span class=3D"=
p">;</span></ins><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">&lt;</sp=
an> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">r=
owoff</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div=
 class=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">cy</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"p">}</span></div>=
<div class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">(</span=
><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</=
span> <span class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span clas=
s=3D"p">.</span><span class=3D"n">rowoff</span> <span class=3D"o">+</span> =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">scree=
nrows</span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div=
 class=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=
=3D"o">-</span> <span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">screenrows</span> <span class=3D"o">+</span> <span class=3D"mi">=
1</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=
=3D"p">}</span></div><ins class=3D"line">  <span class=3D"k">if</span> <spa=
n class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">rx</span> <span class=3D"o">&lt;</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">coloff</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">    <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">coloff<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rx</span><span class=3D"p">;</span></ins><=
div class=3D"line">  <span class=3D"p">}</span></div><ins class=3D"line">  =
<span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o=
">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">coloff</span> <span class=3D"o">+</span> <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">screencols</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">    <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">coloff<=
/span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o">-</span> <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols=
</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><span class=
=3D"p">;</span></ins><div class=3D"line">  <span class=3D"p">}</span></div>=
<div class=3D"line"><span class=3D"p">}</span></div><div class=3D"line"></d=
iv><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D=
"n">editorDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct=
</span> <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=
=3D"n">ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n">editorRef=
reshScreen</span><span class=3D"p">()</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><div class=
=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></code></pre=
>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>Now change <code>E.cx</code> to <code>E.rx</code> in <code>editorRefresh=
Screen()</code> where we set the cursor
position.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/use-rx/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 87</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/use-rx">use-rx</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</spa=
n><span class=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D=
"line">  <span class=3D"n">editorScroll</span><span class=3D"p">();</span><=
/div><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">stru=
ct</span> <span class=3D"n">abuf</span> <span class=3D"n">ab</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">ABUF_INIT</span><span class=3D"p">;=
</span></div><div class=3D"line"></div><div class=3D"line">  <span class=3D=
"n">abAppend</span><span class=3D"p">(</span><span class=3D"o">&amp;</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</=
span><span class=3D"se">\x1b</span><span class=3D"s">[?25l"</span><span cla=
ss=3D"p">,</span> <span class=3D"mi">6</span><span class=3D"p">);</span></d=
iv><div class=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p"=
>(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span cla=
ss=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><=
span class=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">3<=
/span><span class=3D"p">);</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"n">editorDrawRows</span><span class=3D"p">(</spa=
n><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p=
">);</span></div><div class=3D"line"></div><div class=3D"line">  <span clas=
s=3D"kt">char</span> <span class=3D"n">buf</span><span class=3D"p">[</span>=
<span class=3D"mi">32</span><span class=3D"p">];</span></div><div class=3D"=
line">  <span class=3D"n">snprintf</span><span class=3D"p">(</span><span cl=
ass=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"k">sizeof</sp=
an><span class=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">=
),</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><span cla=
ss=3D"s">[%d;%dH"</span><span class=3D"p">,</span> <span class=3D"p">(</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy<=
/span> <span class=3D"o">-</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">rowoff</span><span class=3D"p">)</span> <span =
class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">,</span><=
/div><ins class=3D"line">                                            <span =
class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">rx</span> <span class=3D"o">-</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"=
p">)</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">);</span></ins><div class=3D"line">  <span class=3D"n">abAppend</s=
pan><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"=
n">ab</span><span class=3D"p">,</span> <span class=3D"n">buf</span><span cl=
ass=3D"p">,</span> <span class=3D"n">strlen</span><span class=3D"p">(</span=
><span class=3D"n">buf</span><span class=3D"p">));</span></div><div class=
=3D"line"></div><div class=3D"line">  <span class=3D"n">abAppend</span><spa=
n class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se"=
>\x1b</span><span class=3D"s">[?25h"</span><span class=3D"p">,</span> <span=
 class=3D"mi">6</span><span class=3D"p">);</span></div><div class=3D"line">=
</div><div class=3D"line">  <span class=3D"n">write</span><span class=3D"p"=
>(</span><span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <=
span class=3D"n">ab</span><span class=3D"p">.</span><span class=3D"n">b</sp=
an><span class=3D"p">,</span> <span class=3D"n">ab</span><span class=3D"p">=
.</span><span class=3D"n">len</span><span class=3D"p">);</span></div><div c=
lass=3D"line">  <span class=3D"n">abFree</span><span class=3D"p">(</span><s=
pan class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);=
</span></div><div class=3D"line"><span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** input **=
*/</span></div><div class=3D"line folded"><span class=3D"cm">/*** init ***/=
</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>All that=E2=80=99s left to do is calculate the value of <code>E.rx</code=
> properly in
<code>editorScroll()</code>. Let=E2=80=99s create an <code>editorRowCxToRx(=
)</code> function that converts a
<code>chars</code> index into a <code>render</code> index. We=E2=80=99ll ne=
ed to loop through all the
characters to the left of <code>cx</code>, and figure out how many spaces e=
ach tab takes
up.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/cx-to-rx/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 88</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/cx-to-rx">cx-to-rx</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** row operations ***/</span></div><div class=3D"line"></div><ins cla=
ss=3D"line"><span class=3D"kt">int</span> <span class=3D"nf">editorRowCxToR=
x</span><span class=3D"p">(</span><span class=3D"n">erow</span> <span class=
=3D"o">*</span><span class=3D"n">row</span><span class=3D"p">,</span> <span=
 class=3D"kt">int</span> <span class=3D"n">cx</span><span class=3D"p">)</sp=
an> <span class=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"kt=
">int</span> <span class=3D"n">rx</span> <span class=3D"o">=3D</span> <span=
 class=3D"mi">0</span><span class=3D"p">;</span></ins><ins class=3D"line"> =
 <span class=3D"kt">int</span> <span class=3D"n">j</span><span class=3D"p">=
;</span></ins><ins class=3D"line">  <span class=3D"k">for</span> <span clas=
s=3D"p">(</span><span class=3D"n">j</span> <span class=3D"o">=3D</span> <sp=
an class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n">j</spa=
n> <span class=3D"o">&lt;</span> <span class=3D"n">cx</span><span class=3D"=
p">;</span> <span class=3D"n">j</span><span class=3D"o">++</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">    <s=
pan class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">row</=
span><span class=3D"o">-&gt;</span><span class=3D"n">chars</span><span clas=
s=3D"p">[</span><span class=3D"n">j</span><span class=3D"p">]</span> <span =
class=3D"o">=3D=3D</span> <span class=3D"sc">'\t'</span><span class=3D"p">)=
</span></ins><ins class=3D"line">      <span class=3D"n">rx</span> <span cl=
ass=3D"o">+=3D</span> <span class=3D"p">(</span><span class=3D"n">KILO_TAB_=
STOP</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">)</span> <span class=3D"o">-</span> <span class=3D"p">(</span><spa=
n class=3D"n">rx</span> <span class=3D"o">%</span> <span class=3D"n">KILO_T=
AB_STOP</span><span class=3D"p">);</span></ins><ins class=3D"line">    <spa=
n class=3D"n">rx</span><span class=3D"o">++</span><span class=3D"p">;</span=
></ins><ins class=3D"line">  <span class=3D"p">}</span></ins><ins class=3D"=
line">  <span class=3D"k">return</span> <span class=3D"n">rx</span><span cl=
ass=3D"p">;</span></ins><ins class=3D"line"><span class=3D"p">}</span></ins=
><div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">vo=
id</span> <span class=3D"nf">editorUpdateRow</span><span class=3D"p">(</spa=
n><span class=3D"n">erow</span> <span class=3D"o">*</span><span class=3D"n"=
>row</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 =
<span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"lin=
e folded"><span class=3D"kt">void</span> <span class=3D"nf">editorAppendRow=
</span><span class=3D"p">(</span><span class=3D"kt">char</span> <span class=
=3D"o">*</span><span class=3D"n">s</span><span class=3D"p">,</span> <span c=
lass=3D"kt">size_t</span> <span class=3D"n">len</span><span class=3D"p">)</=
span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div>=
<div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/**=
* file i/o ***/</span></div><div class=3D"line folded"><span class=3D"cm">/=
*** append buffer ***/</span></div><div class=3D"line folded"><span class=
=3D"cm">/*** output ***/</span></div><div class=3D"line folded"><span class=
=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><span class=
=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p>For each character, if it=E2=80=99s a tab we use <code>rx % KILO_TAB_STO=
P</code> to find out how
many columns we are to the right of the last tab stop, and then subtract th=
at
from <code>KILO_TAB_STOP - 1</code> to find out how many columns we are to =
the left of the
next tab stop. We add that amount to <code>rx</code> to get just to the lef=
t of the next
tab stop, and then the unconditional <code>rx++</code> statement gets us ri=
ght on the next
tab stop. Notice how this works even if we are currently on a tab stop.</p>

<p>Let=E2=80=99s call <code>editorRowCxToRx()</code> at the top of <code>ed=
itorScroll()</code> to finally set
<code>E.rx</code> to its proper value.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/set-rx/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 89</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/set-rx">set-rx</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">edit=
orScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span></div>=
<ins class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">rx</span> <span class=3D"o">=3D</span> <span class=3D"mi">=
0</span><span class=3D"p">;</span></ins><ins class=3D"line">  <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">&lt;</spa=
n> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">nu=
mrows</span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins=
 class=3D"line">    <span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">rx</span> <span class=3D"o">=3D</span> <span class=3D"n">edi=
torRowCxToRx</span><span class=3D"p">(</span><span class=3D"o">&amp;</span>=
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</=
span><span class=3D"p">[</span><span class=3D"n">E</span><span class=3D"p">=
.</span><span class=3D"n">cy</span><span class=3D"p">],</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</span><span c=
lass=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"p">}</span><=
/ins><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">if</=
span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p"=
>.</span><span class=3D"n">cy</span> <span class=3D"o">&lt;</span> <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span>=
<span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"li=
ne">    <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"=
n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">cy</span><span class=3D"p">;</span=
></div><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"=
line">  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span =
class=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">rowoff</span> <span class=3D"o">+</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span=
><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"l=
ine">    <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D=
"n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><s=
pan class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o">-</sp=
an> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">s=
creenrows</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><spa=
n class=3D"p">;</span></div><div class=3D"line">  <span class=3D"p">}</span=
></div><div class=3D"line">  <span class=3D"k">if</span> <span class=3D"p">=
(</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"=
n">rx</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"p">)</spa=
n> <span class=3D"p">{</span></div><div class=3D"line">    <span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">coloff</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">rx</span><span class=3D"p">;</span></div><div class=3D"lin=
e">  <span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"k=
">if</span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o">&gt;=3D</span>=
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">colo=
ff</span> <span class=3D"o">+</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">)</span=
> <span class=3D"p">{</span></div><div class=3D"line">    <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">coloff</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><s=
pan class=3D"n">rx</span> <span class=3D"o">-</span> <span class=3D"n">E</s=
pan><span class=3D"p">.</span><span class=3D"n">screencols</span> <span cla=
ss=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p">;</span></di=
v><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"line"=
><span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"li=
ne folded"><span class=3D"kt">void</span> <span class=3D"nf">editorDrawRows=
</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span clas=
s=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span><s=
pan class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=
=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded"><=
span class=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</span>=
<span class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <span clas=
s=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded">=
<span class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><=
span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>You should now be able to confirm that the cursor moves properly within =
lines
that contain tabs.</p>
<h2 id=3D"scrolling-with-page-up-and-page-down"><a href=3D"https://viewsour=
cecode.org/snaptoken/kilo/04.aTextViewer.html#scrolling-with-page-up-and-pa=
ge-down">Scrolling with <kbd>Page Up</kbd> and <kbd>Page Down</kbd></a></h2=
>

<p>Now that we have scrolling, let=E2=80=99s make the <kbd>Page Up</kbd> an=
d
<kbd>Page Down</kbd> keys scroll up or down an entire page.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/page-up-down/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 90</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/page-up-down">page-up-down</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf=
">editorMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</=
span> <span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D=
"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf"=
>editorProcessKeypress</span><span class=3D"p">()</span> <span class=3D"p">=
{</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span cla=
ss=3D"n">c</span> <span class=3D"o">=3D</span> <span class=3D"n">editorRead=
Key</span><span class=3D"p">();</span></div><div class=3D"line"></div><div =
class=3D"line">  <span class=3D"k">switch</span> <span class=3D"p">(</span>=
<span class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"p">{</s=
pan></div><div class=3D"line">    <span class=3D"k">case</span> <span class=
=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'q'</spa=
n><span class=3D"p">):</span></div><div class=3D"line">      <span class=3D=
"n">write</span><span class=3D"p">(</span><span class=3D"n">STDOUT_FILENO</=
span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se=
">\x1b</span><span class=3D"s">[2J"</span><span class=3D"p">,</span> <span =
class=3D"mi">4</span><span class=3D"p">);</span></div><div class=3D"line"> =
     <span class=3D"n">write</span><span class=3D"p">(</span><span class=3D=
"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s">"</spa=
n><span class=3D"se">\x1b</span><span class=3D"s">[H"</span><span class=3D"=
p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</span></div><di=
v class=3D"line">      <span class=3D"n">exit</span><span class=3D"p">(</sp=
an><span class=3D"mi">0</span><span class=3D"p">);</span></div><div class=
=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span></d=
iv><div class=3D"line"></div><div class=3D"line">    <span class=3D"k">case=
</span> <span class=3D"n">HOME_KEY</span><span class=3D"p">:</span></div><d=
iv class=3D"line">      <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"mi=
">0</span><span class=3D"p">;</span></div><div class=3D"line">      <span c=
lass=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line">=
</div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"=
n">END_KEY</span><span class=3D"p">:</span></div><div class=3D"line">      =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cx</s=
pan> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"=
p">.</span><span class=3D"n">screencols</span> <span class=3D"o">-</span> <=
span class=3D"mi">1</span><span class=3D"p">;</span></div><div class=3D"lin=
e">      <span class=3D"k">break</span><span class=3D"p">;</span></div><div=
 class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span>=
 <span class=3D"n">PAGE_UP</span><span class=3D"p">:</span></div><div class=
=3D"line">    <span class=3D"k">case</span> <span class=3D"n">PAGE_DOWN</sp=
an><span class=3D"p">:</span></div><div class=3D"line">      <span class=3D=
"p">{</span></div><ins class=3D"line">        <span class=3D"k">if</span> <=
span class=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"n">PAGE_UP</span><span class=3D"p">)</span> <span=
 class=3D"p">{</span></ins><ins class=3D"line">          <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=
=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">rowoff</span><span class=3D"p">;</span></ins><ins class=3D"lin=
e">        <span class=3D"p">}</span> <span class=3D"k">else</span> <span c=
lass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">c</span> <=
span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_DOWN</span><span clas=
s=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">      =
    <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">c=
y</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">rowoff</span> <span class=3D"o">+</span> <=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
rows</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">;</span></ins><ins class=3D"line">          <span class=3D"k">if</=
span> <span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p"=
>.</span><span class=3D"n">cy</span> <span class=3D"o">&gt;</span> <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span=
><span class=3D"p">)</span> <span class=3D"n">E</span><span class=3D"p">.</=
span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">;</span></ins><ins class=3D"line">        <span class=3D"p"=
>}</span></ins><div class=3D"line"></div><div class=3D"line">        <span =
class=3D"kt">int</span> <span class=3D"n">times</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screenrows</span><span class=3D"p">;</span></div><div class=3D"line"=
>        <span class=3D"k">while</span> <span class=3D"p">(</span><span cla=
ss=3D"n">times</span><span class=3D"o">--</span><span class=3D"p">)</span><=
/div><div class=3D"line">          <span class=3D"n">editorMoveCursor</span=
><span class=3D"p">(</span><span class=3D"n">c</span> <span class=3D"o">=3D=
=3D</span> <span class=3D"n">PAGE_UP</span> <span class=3D"o">?</span> <spa=
n class=3D"n">ARROW_UP</span> <span class=3D"o">:</span> <span class=3D"n">=
ARROW_DOWN</span><span class=3D"p">);</span></div><div class=3D"line">     =
 <span class=3D"p">}</span></div><div class=3D"line">      <span class=3D"k=
">break</span><span class=3D"p">;</span></div><div class=3D"line"></div><di=
v class=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_=
UP</span><span class=3D"p">:</span></div><div class=3D"line">    <span clas=
s=3D"k">case</span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">:<=
/span></div><div class=3D"line">    <span class=3D"k">case</span> <span cla=
ss=3D"n">ARROW_LEFT</span><span class=3D"p">:</span></div><div class=3D"lin=
e">    <span class=3D"k">case</span> <span class=3D"n">ARROW_RIGHT</span><s=
pan class=3D"p">:</span></div><div class=3D"line">      <span class=3D"n">e=
ditorMoveCursor</span><span class=3D"p">(</span><span class=3D"n">c</span><=
span class=3D"p">);</span></div><div class=3D"line">      <span class=3D"k"=
>break</span><span class=3D"p">;</span></div><div class=3D"line">  <span cl=
ass=3D"p">}</span></div><div class=3D"line"><span class=3D"p">}</span></div=
><div class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*=
** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>To scroll up or down a page, we position the cursor either at the top or=
 bottom
of the screen, and then simulate an entire screen=E2=80=99s worth of <kbd>=
=E2=86=91</kbd>
or <kbd>=E2=86=93</kbd> keypresses. Delegating to <code>editorMoveCursor()<=
/code> takes care
of all the bounds-checking and cursor-fixing that needs to be done when mov=
ing
the cursor.</p>
<h2 id=3D"move-to-the-end-of-the-line-with-end"><a href=3D"https://viewsour=
cecode.org/snaptoken/kilo/04.aTextViewer.html#move-to-the-end-of-the-line-w=
ith-end">Move to the end of the line with <kbd>End</kbd></a></h2>

<p>Now let=E2=80=99s have the <kbd>End</kbd> key move the cursor to the end=
 of the current
line. (The <kbd>Home</kbd> key already moves the cursor to the beginning of=
 the
line, since we made <code>E.cx</code> relative to the file instead of relat=
ive to the
screen.)</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/end-key/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 91</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/end-key">end-key</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** input ***/</span></div><div class=3D"line"></div>=
<div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf=
">editorMoveCursor</span><span class=3D"p">(</span><span class=3D"kt">int</=
span> <span class=3D"n">key</span><span class=3D"p">)</span> <span class=3D=
"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf"=
>editorProcessKeypress</span><span class=3D"p">()</span> <span class=3D"p">=
{</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span cla=
ss=3D"n">c</span> <span class=3D"o">=3D</span> <span class=3D"n">editorRead=
Key</span><span class=3D"p">();</span></div><div class=3D"line"></div><div =
class=3D"line">  <span class=3D"k">switch</span> <span class=3D"p">(</span>=
<span class=3D"n">c</span><span class=3D"p">)</span> <span class=3D"p">{</s=
pan></div><div class=3D"line">    <span class=3D"k">case</span> <span class=
=3D"n">CTRL_KEY</span><span class=3D"p">(</span><span class=3D"sc">'q'</spa=
n><span class=3D"p">):</span></div><div class=3D"line">      <span class=3D=
"n">write</span><span class=3D"p">(</span><span class=3D"n">STDOUT_FILENO</=
span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se=
">\x1b</span><span class=3D"s">[2J"</span><span class=3D"p">,</span> <span =
class=3D"mi">4</span><span class=3D"p">);</span></div><div class=3D"line"> =
     <span class=3D"n">write</span><span class=3D"p">(</span><span class=3D=
"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span class=3D"s">"</spa=
n><span class=3D"se">\x1b</span><span class=3D"s">[H"</span><span class=3D"=
p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</span></div><di=
v class=3D"line">      <span class=3D"n">exit</span><span class=3D"p">(</sp=
an><span class=3D"mi">0</span><span class=3D"p">);</span></div><div class=
=3D"line">      <span class=3D"k">break</span><span class=3D"p">;</span></d=
iv><div class=3D"line"></div><div class=3D"line">    <span class=3D"k">case=
</span> <span class=3D"n">HOME_KEY</span><span class=3D"p">:</span></div><d=
iv class=3D"line">      <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <span class=3D"mi=
">0</span><span class=3D"p">;</span></div><div class=3D"line">      <span c=
lass=3D"k">break</span><span class=3D"p">;</span></div><div class=3D"line">=
</div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D"=
n">END_KEY</span><span class=3D"p">:</span></div><ins class=3D"line">      =
<span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o=
">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><span cla=
ss=3D"n">numrows</span><span class=3D"p">)</span></ins><ins class=3D"line">=
        <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"=
n">cx</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span c=
lass=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">[</span><s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</spa=
n><span class=3D"p">].</span><span class=3D"n">size</span><span class=3D"p"=
>;</span></ins><div class=3D"line">      <span class=3D"k">break</span><spa=
n class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line"> =
   <span class=3D"k">case</span> <span class=3D"n">PAGE_UP</span><span clas=
s=3D"p">:</span></div><div class=3D"line">    <span class=3D"k">case</span>=
 <span class=3D"n">PAGE_DOWN</span><span class=3D"p">:</span></div><div cla=
ss=3D"line">      <span class=3D"p">{</span></div><div class=3D"line">     =
   <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">=
c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_UP</span><s=
pan class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line=
">          <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><sp=
an class=3D"p">.</span><span class=3D"n">rowoff</span><span class=3D"p">;</=
span></div><div class=3D"line">        <span class=3D"p">}</span> <span cla=
ss=3D"k">else</span> <span class=3D"k">if</span> <span class=3D"p">(</span>=
<span class=3D"n">c</span> <span class=3D"o">=3D=3D</span> <span class=3D"n=
">PAGE_DOWN</span><span class=3D"p">)</span> <span class=3D"p">{</span></di=
v><div class=3D"line">          <span class=3D"n">E</span><span class=3D"p"=
>.</span><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span> =
<span class=3D"o">+</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">screenrows</span> <span class=3D"o">-</span> <span cl=
ass=3D"mi">1</span><span class=3D"p">;</span></div><div class=3D"line">    =
      <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"=
n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span clas=
s=3D"o">&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">numrows</span><span class=3D"p">)</span> <span class=3D"n">E=
</span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D=
"o">=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span cl=
ass=3D"n">numrows</span><span class=3D"p">;</span></div><div class=3D"line"=
>        <span class=3D"p">}</span></div><div class=3D"line"></div><div cla=
ss=3D"line">        <span class=3D"kt">int</span> <span class=3D"n">times</=
span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</span></=
div><div class=3D"line">        <span class=3D"k">while</span> <span class=
=3D"p">(</span><span class=3D"n">times</span><span class=3D"o">--</span><sp=
an class=3D"p">)</span></div><div class=3D"line">          <span class=3D"n=
">editorMoveCursor</span><span class=3D"p">(</span><span class=3D"n">c</spa=
n> <span class=3D"o">=3D=3D</span> <span class=3D"n">PAGE_UP</span> <span c=
lass=3D"o">?</span> <span class=3D"n">ARROW_UP</span> <span class=3D"o">:</=
span> <span class=3D"n">ARROW_DOWN</span><span class=3D"p">);</span></div><=
div class=3D"line">      <span class=3D"p">}</span></div><div class=3D"line=
">      <span class=3D"k">break</span><span class=3D"p">;</span></div><div =
class=3D"line"></div><div class=3D"line">    <span class=3D"k">case</span> =
<span class=3D"n">ARROW_UP</span><span class=3D"p">:</span></div><div class=
=3D"line">    <span class=3D"k">case</span> <span class=3D"n">ARROW_DOWN</s=
pan><span class=3D"p">:</span></div><div class=3D"line">    <span class=3D"=
k">case</span> <span class=3D"n">ARROW_LEFT</span><span class=3D"p">:</span=
></div><div class=3D"line">    <span class=3D"k">case</span> <span class=3D=
"n">ARROW_RIGHT</span><span class=3D"p">:</span></div><div class=3D"line"> =
     <span class=3D"n">editorMoveCursor</span><span class=3D"p">(</span><sp=
an class=3D"n">c</span><span class=3D"p">);</span></div><div class=3D"line"=
>      <span class=3D"k">break</span><span class=3D"p">;</span></div><div c=
lass=3D"line">  <span class=3D"p">}</span></div><div class=3D"line"><span c=
lass=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folde=
d"><span class=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>The <kbd>End</kbd> key brings the cursor to the end of the current line.=
 If
there is no current line, then <code>E.cx</code> must be <code>0</code> and=
 it should stay at <code>0</code>, so
there=E2=80=99s nothing to do.</p>
<h2 id=3D"status-bar"><a href=3D"https://viewsourcecode.org/snaptoken/kilo/=
04.aTextViewer.html#status-bar">Status bar</a></h2>

<p>The last thing we=E2=80=99ll add before finally getting to text editing =
is a status
bar. This will show useful information such as the filename, how many lines=
 are
in the file, and what line you=E2=80=99re currently on. Later we=E2=80=99ll=
 add a marker that
tells you whether the file has been modified since it was last saved, and w=
e=E2=80=99ll
also display the filetype when we implement syntax highlighting.</p>

<p>First we=E2=80=99ll simply make room for a one-line status bar at the bo=
ttom of the
screen.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/status-bar-make-room/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 92</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/status-bar-make-room">status-bar-make-room</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorDraw=
Rows</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span =
class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</spa=
n><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"=
line">  <span class=3D"kt">int</span> <span class=3D"n">y</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"k">for</span> <sp=
an class=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">=3D</sp=
an> <span class=3D"mi">0</span><span class=3D"p">;</span> <span class=3D"n"=
>y</span> <span class=3D"o">&lt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screenrows</span><span class=3D"p">;</sp=
an> <span class=3D"n">y</span><span class=3D"o">++</span><span class=3D"p">=
)</span> <span class=3D"p">{</span></div><div class=3D"line">    <span clas=
s=3D"kt">int</span> <span class=3D"n">filerow</span> <span class=3D"o">=3D<=
/span> <span class=3D"n">y</span> <span class=3D"o">+</span> <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span><span =
class=3D"p">;</span></div><div class=3D"line">    <span class=3D"k">if</spa=
n> <span class=3D"p">(</span><span class=3D"n">filerow</span> <span class=
=3D"o">&gt;=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">numrows</span><span class=3D"p">)</span> <span class=3D"p"=
>{</span></div><div class=3D"line">      <span class=3D"k">if</span> <span =
class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</span><sp=
an class=3D"n">numrows</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"mi">0</span> <span class=3D"o">&amp;&amp;</span> <span class=3D"n">y</s=
pan> <span class=3D"o">=3D=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screenrows</span> <span class=3D"o">/</spa=
n> <span class=3D"mi">3</span><span class=3D"p">)</span> <span class=3D"p">=
{</span></div><div class=3D"line">        <span class=3D"kt">char</span> <s=
pan class=3D"n">welcome</span><span class=3D"p">[</span><span class=3D"mi">=
80</span><span class=3D"p">];</span></div><div class=3D"line">        <span=
 class=3D"kt">int</span> <span class=3D"n">welcomelen</span> <span class=3D=
"o">=3D</span> <span class=3D"n">snprintf</span><span class=3D"p">(</span><=
span class=3D"n">welcome</span><span class=3D"p">,</span> <span class=3D"k"=
>sizeof</span><span class=3D"p">(</span><span class=3D"n">welcome</span><sp=
an class=3D"p">),</span></div><div class=3D"line">          <span class=3D"=
s">"Kilo editor -- version %s"</span><span class=3D"p">,</span> <span class=
=3D"n">KILO_VERSION</span><span class=3D"p">);</span></div><div class=3D"li=
ne">        <span class=3D"k">if</span> <span class=3D"p">(</span><span cla=
ss=3D"n">welcomelen</span> <span class=3D"o">&gt;</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><span =
class=3D"p">)</span> <span class=3D"n">welcomelen</span> <span class=3D"o">=
=3D</span> <span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">screencols</span><span class=3D"p">;</span></div><div class=3D"line"=
>        <span class=3D"kt">int</span> <span class=3D"n">padding</span> <sp=
an class=3D"o">=3D</span> <span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">screencols</span> <span clas=
s=3D"o">-</span> <span class=3D"n">welcomelen</span><span class=3D"p">)</sp=
an> <span class=3D"o">/</span> <span class=3D"mi">2</span><span class=3D"p"=
>;</span></div><div class=3D"line">        <span class=3D"k">if</span> <spa=
n class=3D"p">(</span><span class=3D"n">padding</span><span class=3D"p">)</=
span> <span class=3D"p">{</span></div><div class=3D"line">          <span c=
lass=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"s">"~"</span><span class=3D"p=
">,</span> <span class=3D"mi">1</span><span class=3D"p">);</span></div><div=
 class=3D"line">          <span class=3D"n">padding</span><span class=3D"o"=
>--</span><span class=3D"p">;</span></div><div class=3D"line">        <span=
 class=3D"p">}</span></div><div class=3D"line">        <span class=3D"k">wh=
ile</span> <span class=3D"p">(</span><span class=3D"n">padding</span><span =
class=3D"o">--</span><span class=3D"p">)</span> <span class=3D"n">abAppend<=
/span><span class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p=
">,</span> <span class=3D"s">" "</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">    =
    <span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=
=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">welcome</span>=
<span class=3D"p">,</span> <span class=3D"n">welcomelen</span><span class=
=3D"p">);</span></div><div class=3D"line">      <span class=3D"p">}</span> =
<span class=3D"k">else</span> <span class=3D"p">{</span></div><div class=3D=
"line">        <span class=3D"n">abAppend</span><span class=3D"p">(</span><=
span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"~"<=
/span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"=
p">);</span></div><div class=3D"line">      <span class=3D"p">}</span></div=
><div class=3D"line">    <span class=3D"p">}</span> <span class=3D"k">else<=
/span> <span class=3D"p">{</span></div><div class=3D"line">      <span clas=
s=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">ro=
w</span><span class=3D"p">[</span><span class=3D"n">filerow</span><span cla=
ss=3D"p">].</span><span class=3D"n">rsize</span> <span class=3D"o">-</span>=
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">colo=
ff</span><span class=3D"p">;</span></div><div class=3D"line">      <span cl=
ass=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">len</span> =
<span class=3D"o">&lt;</span> <span class=3D"mi">0</span><span class=3D"p">=
)</span> <span class=3D"n">len</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">    =
  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">l=
en</span> <span class=3D"o">&gt;</span> <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">)</sp=
an> <span class=3D"n">len</span> <span class=3D"o">=3D</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</span=
><span class=3D"p">;</span></div><div class=3D"line">      <span class=3D"n=
">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span=
 class=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">row</span><span class=3D"p">=
[</span><span class=3D"n">filerow</span><span class=3D"p">].</span><span cl=
ass=3D"n">render</span><span class=3D"p">[</span><span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"p">=
],</span> <span class=3D"n">len</span><span class=3D"p">);</span></div><div=
 class=3D"line">    <span class=3D"p">}</span></div><div class=3D"line"></d=
iv><div class=3D"line">    <span class=3D"n">abAppend</span><span class=3D"=
p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span clas=
s=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[K"</span><=
span class=3D"p">,</span> <span class=3D"mi">3</span><span class=3D"p">);</=
span></div><del class=3D"line">    <span class=3D"k">if</span> <span class=
=3D"p">(</span><span class=3D"n">y</span> <span class=3D"o">&lt;</span> <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenro=
ws</span> <span class=3D"o">-</span> <span class=3D"mi">1</span><span class=
=3D"p">)</span> <span class=3D"p">{</span></del><div class=3D"line">    <sp=
an class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">a=
b</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D=
"se">\r\n</span><span class=3D"s">"</span><span class=3D"p">,</span> <span =
class=3D"mi">2</span><span class=3D"p">);</span></div><div class=3D"line"> =
 <span class=3D"p">}</span></div><del class=3D"line">  <span class=3D"p">}<=
/span></del><div class=3D"line"><span class=3D"p">}</span></div><div class=
=3D"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <=
span class=3D"nf">editorRefreshScreen</span><span class=3D"p">()</span> <sp=
an class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** input *=
**/</span></div><div class=3D"line"><span class=3D"cm">/*** init ***/</span=
></div><div class=3D"line"></div><div class=3D"line"><span class=3D"kt">voi=
d</span> <span class=3D"nf">initEditor</span><span class=3D"p">()</span> <s=
pan class=3D"p">{</span></div><div class=3D"line">  <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=
=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div =
class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</sp=
an><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">rx</span> <span class=
=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></di=
v><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">rowoff</span> <span class=3D"o">=3D</span> <span class=
=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">coloff</sp=
an> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span clas=
s=3D"p">.</span><span class=3D"n">numrows</span> <span class=3D"o">=3D</spa=
n> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D=
"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D=
"n">row</span> <span class=3D"o">=3D</span> <span class=3D"nb">NULL</span><=
span class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line=
">  <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n"=
>getWindowSize</span><span class=3D"p">(</span><span class=3D"o">&amp;</spa=
n><span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">scr=
eenrows</span><span class=3D"p">,</span> <span class=3D"o">&amp;</span><spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencol=
s</span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span cl=
ass=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <sp=
an class=3D"n">die</span><span class=3D"p">(</span><span class=3D"s">"getWi=
ndowSize"</span><span class=3D"p">);</span></div><ins class=3D"line">  <spa=
n class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrow=
s</span> <span class=3D"o">-=3D</span> <span class=3D"mi">1</span><span cla=
ss=3D"p">;</span></ins><div class=3D"line"><span class=3D"p">}</span></div>=
<div class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">int=
</span> <span class=3D"nf">main</span><span class=3D"p">(</span><span class=
=3D"kt">int</span> <span class=3D"n">argc</span><span class=3D"p">,</span> =
<span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">=
argv</span><span class=3D"p">[])</span> <span class=3D"p">{</span> =E2=80=
=A6 <span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We decrement <code>E.screenrows</code> so that <code>editorDrawRows()</c=
ode> doesn=E2=80=99t try to draw a
line of text at the bottom of the screen. We also have <code>editorDrawRows=
()</code> print
a newline after the last row it draws, since the status bar is now the fina=
l
line being drawn on the screen.</p>

<p>Notice how with those two changes, our text viewer works just fine, incl=
uding
scrolling and cursor movement, and the last line where our status bar will =
be
is left alone by the rest of the display code.</p>

<p>To make the status bar stand out, we=E2=80=99re going to display it with=
 inverted
colors: black text on a white background. The escape sequence <code>&lt;esc=
&gt;[7m</code>
switches to inverted colors, and <code>&lt;esc&gt;[m</code> switches back t=
o normal formatting.
Let=E2=80=99s draw a blank white status bar of inverted space characters.</=
p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/blank-status-bar/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 93</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/blank-status-bar">blank-status-bar</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><ins class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorDrawStatusBar</spa=
n><span class=3D"p">(</span><span class=3D"k">struct</span> <span class=3D"=
n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span><span c=
lass=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">  <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=
=3D"se">\x1b</span><span class=3D"s">[7m"</span><span class=3D"p">,</span> =
<span class=3D"mi">4</span><span class=3D"p">);</span></ins><ins class=3D"l=
ine">  <span class=3D"kt">int</span> <span class=3D"n">len</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></=
ins><ins class=3D"line">  <span class=3D"k">while</span> <span class=3D"p">=
(</span><span class=3D"n">len</span> <span class=3D"o">&lt;</span> <span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</s=
pan><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=
=3D"line">    <span class=3D"n">abAppend</span><span class=3D"p">(</span><s=
pan class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">" "</=
span><span class=3D"p">,</span> <span class=3D"mi">1</span><span class=3D"p=
">);</span></ins><ins class=3D"line">    <span class=3D"n">len</span><span =
class=3D"o">++</span><span class=3D"p">;</span></ins><ins class=3D"line">  =
<span class=3D"p">}</span></ins><ins class=3D"line">  <span class=3D"n">abA=
ppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span clas=
s=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><s=
pan class=3D"s">[m"</span><span class=3D"p">,</span> <span class=3D"mi">3</=
span><span class=3D"p">);</span></ins><ins class=3D"line"><span class=3D"p"=
>}</span></ins><div class=3D"line"></div><div class=3D"line"><span class=3D=
"kt">void</span> <span class=3D"nf">editorRefreshScreen</span><span class=
=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D"line">  <spa=
n class=3D"n">editorScroll</span><span class=3D"p">();</span></div><div cla=
ss=3D"line"></div><div class=3D"line">  <span class=3D"k">struct</span> <sp=
an class=3D"n">abuf</span> <span class=3D"n">ab</span> <span class=3D"o">=
=3D</span> <span class=3D"n">ABUF_INIT</span><span class=3D"p">;</span></di=
v><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">abAppen=
d</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=
=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span =
class=3D"se">\x1b</span><span class=3D"s">[?25l"</span><span class=3D"p">,<=
/span> <span class=3D"mi">6</span><span class=3D"p">);</span></div><div cla=
ss=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(</span><s=
pan class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">,<=
/span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=
=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">3</span><spa=
n class=3D"p">);</span></div><div class=3D"line"></div><div class=3D"line">=
  <span class=3D"n">editorDrawRows</span><span class=3D"p">(</span><span cl=
ass=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);</span=
></div><ins class=3D"line">  <span class=3D"n">editorDrawStatusBar</span><s=
pan class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab<=
/span><span class=3D"p">);</span></ins><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"kt">char</span> <span class=3D"n">buf</span><spa=
n class=3D"p">[</span><span class=3D"mi">32</span><span class=3D"p">];</spa=
n></div><div class=3D"line">  <span class=3D"n">snprintf</span><span class=
=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">,</span> <span=
 class=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">buf</=
span><span class=3D"p">),</span> <span class=3D"s">"</span><span class=3D"s=
e">\x1b</span><span class=3D"s">[%d;%dH"</span><span class=3D"p">,</span> <=
span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</spa=
n><span class=3D"n">cy</span> <span class=3D"o">-</span> <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">rowoff</span><span clas=
s=3D"p">)</span> <span class=3D"o">+</span> <span class=3D"mi">1</span><spa=
n class=3D"p">,</span></div><div class=3D"line">                           =
                 <span class=3D"p">(</span><span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o">-</span> =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">colof=
f</span><span class=3D"p">)</span> <span class=3D"o">+</span> <span class=
=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">  <spa=
n class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"o">&a=
mp;</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span class=
=3D"n">buf</span><span class=3D"p">,</span> <span class=3D"n">strlen</span>=
<span class=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">));=
</span></div><div class=3D"line"></div><div class=3D"line">  <span class=3D=
"n">abAppend</span><span class=3D"p">(</span><span class=3D"o">&amp;</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</=
span><span class=3D"se">\x1b</span><span class=3D"s">[?25h"</span><span cla=
ss=3D"p">,</span> <span class=3D"mi">6</span><span class=3D"p">);</span></d=
iv><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">write<=
/span><span class=3D"p">(</span><span class=3D"n">STDOUT_FILENO</span><span=
 class=3D"p">,</span> <span class=3D"n">ab</span><span class=3D"p">.</span>=
<span class=3D"n">b</span><span class=3D"p">,</span> <span class=3D"n">ab</=
span><span class=3D"p">.</span><span class=3D"n">len</span><span class=3D"p=
">);</span></div><div class=3D"line">  <span class=3D"n">abFree</span><span=
 class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</sp=
an><span class=3D"p">);</span></div><div class=3D"line"><span class=3D"p">}=
</span></div><div class=3D"line"></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>The <code>m</code> command
(<a href=3D"http://vt100.net/docs/vt100-ug/chapter3.html#SGR">Select Graphi=
c Rendition</a>)
causes the text printed after it to be printed with various possible attrib=
utes
including bold (<code>1</code>), underscore (<code>4</code>), blink (<code>=
5</code>), and inverted colors (<code>7</code>).
For example, you could specify all of these attributes using the command
<code>&lt;esc&gt;[1;4;5;7m</code>. An argument of <code>0</code> clears all=
 attributes, and is the default
argument, so we use <code>&lt;esc&gt;[m</code> to go back to normal text fo=
rmatting.</p>

<p>Since we want to display the filename in the status bar, let=E2=80=99s a=
dd a <code>filename</code>
string to the global editor state, and save a copy of the filename there wh=
en a
file is opened.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/filename/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 94</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/filename">filename</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span class=3D"=
cm">/*** data ***/</span></div><div class=3D"line"></div><div class=3D"line=
 folded"><span class=3D"k">typedef</span> <span class=3D"k">struct</span> <=
span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">;</span></=
div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct<=
/span> <span class=3D"n">editorConfig</span> <span class=3D"p">{</span></di=
v><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">cx<=
/span><span class=3D"p">,</span> <span class=3D"n">cy</span><span class=3D"=
p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span =
class=3D"n">rx</span><span class=3D"p">;</span></div><div class=3D"line">  =
<span class=3D"kt">int</span> <span class=3D"n">rowoff</span><span class=3D=
"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</span> <span=
 class=3D"n">coloff</span><span class=3D"p">;</span></div><div class=3D"lin=
e">  <span class=3D"kt">int</span> <span class=3D"n">screenrows</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">screencols</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">numrows</=
span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n=
">erow</span> <span class=3D"o">*</span><span class=3D"n">row</span><span c=
lass=3D"p">;</span></div><ins class=3D"line">  <span class=3D"kt">char</spa=
n> <span class=3D"o">*</span><span class=3D"n">filename</span><span class=
=3D"p">;</span></ins><div class=3D"line">  <span class=3D"k">struct</span> =
<span class=3D"n">termios</span> <span class=3D"n">orig_termios</span><span=
 class=3D"p">;</span></div><div class=3D"line"><span class=3D"p">};</span><=
/div><div class=3D"line"></div><div class=3D"line"><span class=3D"k">struct=
</span> <span class=3D"n">editorConfig</span> <span class=3D"n">E</span><sp=
an class=3D"p">;</span></div><div class=3D"line"></div><div class=3D"line f=
olded"><span class=3D"cm">/*** terminal ***/</span></div><div class=3D"line=
 folded"><span class=3D"cm">/*** row operations ***/</span></div><div class=
=3D"line"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"l=
ine"></div><div class=3D"line"><span class=3D"kt">void</span> <span class=
=3D"nf">editorOpen</span><span class=3D"p">(</span><span class=3D"kt">char<=
/span> <span class=3D"o">*</span><span class=3D"n">filename</span><span cla=
ss=3D"p">)</span> <span class=3D"p">{</span></div><ins class=3D"line">  <sp=
an class=3D"n">free</span><span class=3D"p">(</span><span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">filename</span><span class=
=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">=
=3D</span> <span class=3D"n">strdup</span><span class=3D"p">(</span><span c=
lass=3D"n">filename</span><span class=3D"p">);</span></ins><div class=3D"li=
ne"></div><div class=3D"line">  <span class=3D"kt">FILE</span> <span class=
=3D"o">*</span><span class=3D"n">fp</span> <span class=3D"o">=3D</span> <sp=
an class=3D"n">fopen</span><span class=3D"p">(</span><span class=3D"n">file=
name</span><span class=3D"p">,</span> <span class=3D"s">"r"</span><span cla=
ss=3D"p">);</span></div><div class=3D"line">  <span class=3D"k">if</span> <=
span class=3D"p">(</span><span class=3D"o">!</span><span class=3D"n">fp</sp=
an><span class=3D"p">)</span> <span class=3D"n">die</span><span class=3D"p"=
>(</span><span class=3D"s">"fopen"</span><span class=3D"p">);</span></div><=
div class=3D"line"></div><div class=3D"line">  <span class=3D"kt">char</spa=
n> <span class=3D"o">*</span><span class=3D"n">line</span> <span class=3D"o=
">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;</span></div>=
<div class=3D"line">  <span class=3D"kt">size_t</span> <span class=3D"n">li=
necap</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span =
class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">ssize_t<=
/span> <span class=3D"n">linelen</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"k">while</span> <span class=3D"p">((</span=
><span class=3D"n">linelen</span> <span class=3D"o">=3D</span> <span class=
=3D"n">getline</span><span class=3D"p">(</span><span class=3D"o">&amp;</spa=
n><span class=3D"n">line</span><span class=3D"p">,</span> <span class=3D"o"=
>&amp;</span><span class=3D"n">linecap</span><span class=3D"p">,</span> <sp=
an class=3D"n">fp</span><span class=3D"p">))</span> <span class=3D"o">!=3D<=
/span> <span class=3D"o">-</span><span class=3D"mi">1</span><span class=3D"=
p">)</span> <span class=3D"p">{</span></div><div class=3D"line">    <span c=
lass=3D"k">while</span> <span class=3D"p">(</span><span class=3D"n">linelen=
</span> <span class=3D"o">&gt;</span> <span class=3D"mi">0</span> <span cla=
ss=3D"o">&amp;&amp;</span> <span class=3D"p">(</span><span class=3D"n">line=
</span><span class=3D"p">[</span><span class=3D"n">linelen</span> <span cla=
ss=3D"o">-</span> <span class=3D"mi">1</span><span class=3D"p">]</span> <sp=
an class=3D"o">=3D=3D</span> <span class=3D"sc">'\n'</span> <span class=3D"=
o">||</span></div><div class=3D"line">                           <span clas=
s=3D"n">line</span><span class=3D"p">[</span><span class=3D"n">linelen</spa=
n> <span class=3D"o">-</span> <span class=3D"mi">1</span><span class=3D"p">=
]</span> <span class=3D"o">=3D=3D</span> <span class=3D"sc">'\r'</span><spa=
n class=3D"p">))</span></div><div class=3D"line">      <span class=3D"n">li=
nelen</span><span class=3D"o">--</span><span class=3D"p">;</span></div><div=
 class=3D"line">    <span class=3D"n">editorAppendRow</span><span class=3D"=
p">(</span><span class=3D"n">line</span><span class=3D"p">,</span> <span cl=
ass=3D"n">linelen</span><span class=3D"p">);</span></div><div class=3D"line=
">  <span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"n"=
>free</span><span class=3D"p">(</span><span class=3D"n">line</span><span cl=
ass=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">fclose</sp=
an><span class=3D"p">(</span><span class=3D"n">fp</span><span class=3D"p">)=
;</span></div><div class=3D"line"><span class=3D"p">}</span></div><div clas=
s=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** append =
buffer ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** =
output ***/</span></div><div class=3D"line folded"><span class=3D"cm">/*** =
input ***/</span></div><div class=3D"line"><span class=3D"cm">/*** init ***=
/</span></div><div class=3D"line"></div><div class=3D"line"><span class=3D"=
kt">void</span> <span class=3D"nf">initEditor</span><span class=3D"p">()</s=
pan> <span class=3D"p">{</span></div><div class=3D"line">  <span class=3D"n=
">E</span><span class=3D"p">.</span><span class=3D"n">cx</span> <span class=
=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></di=
v><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"mi=
">0</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">rx</span> <span =
class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span=
></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.<=
/span><span class=3D"n">rowoff</span> <span class=3D"o">=3D</span> <span cl=
ass=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">coloff<=
/span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">numrows</span> <span class=3D"o">=3D<=
/span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div clas=
s=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span clas=
s=3D"n">row</span> <span class=3D"o">=3D</span> <span class=3D"nb">NULL</sp=
an><span class=3D"p">;</span></div><ins class=3D"line">  <span class=3D"n">=
E</span><span class=3D"p">.</span><span class=3D"n">filename</span> <span c=
lass=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;</sp=
an></ins><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">=
if</span> <span class=3D"p">(</span><span class=3D"n">getWindowSize</span><=
span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">E<=
/span><span class=3D"p">.</span><span class=3D"n">screenrows</span><span cl=
ass=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">screencols</span><span class=3D=
"p">)</span> <span class=3D"o">=3D=3D</span> <span class=3D"o">-</span><spa=
n class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"n">die</sp=
an><span class=3D"p">(</span><span class=3D"s">"getWindowSize"</span><span =
class=3D"p">);</span></div><div class=3D"line">  <span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">screenrows</span> <span class=
=3D"o">-=3D</span> <span class=3D"mi">1</span><span class=3D"p">;</span></d=
iv><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"line">=
</div><div class=3D"line folded"><span class=3D"kt">int</span> <span class=
=3D"nf">main</span><span class=3D"p">(</span><span class=3D"kt">int</span> =
<span class=3D"n">argc</span><span class=3D"p">,</span> <span class=3D"kt">=
char</span> <span class=3D"o">*</span><span class=3D"n">argv</span><span cl=
ass=3D"p">[])</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p"=
>}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>strdup()</code> comes from <code>&lt;string.h&gt;</code>. It makes=
 a copy of the given string,
allocating the required memory and assuming you will <code>free()</code> th=
at memory.</p>

<p>We initialize <code>E.filename</code> to the <code>NULL</code> pointer, =
and it will stay <code>NULL</code> if a
file isn=E2=80=99t opened (which is what happens when the program is run wi=
thout
arguments).</p>

<p>Now we=E2=80=99re ready to display some information in the status bar. W=
e=E2=80=99ll display up
to 20 characters of the filename, followed by the number of lines in the fi=
le.
If there is no filename, we=E2=80=99ll display <code>[No Name]</code> inste=
ad.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/status-bar-left/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 95</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/status-bar-left">status-bar-left</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorDrawStatusBar</spa=
n><span class=3D"p">(</span><span class=3D"k">struct</span> <span class=3D"=
n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span><span c=
lass=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">  <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=
=3D"se">\x1b</span><span class=3D"s">[7m"</span><span class=3D"p">,</span> =
<span class=3D"mi">4</span><span class=3D"p">);</span></div><ins class=3D"l=
ine">  <span class=3D"kt">char</span> <span class=3D"n">status</span><span =
class=3D"p">[</span><span class=3D"mi">80</span><span class=3D"p">];</span>=
</ins><ins class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n"=
>len</span> <span class=3D"o">=3D</span> <span class=3D"n">snprintf</span><=
span class=3D"p">(</span><span class=3D"n">status</span><span class=3D"p">,=
</span> <span class=3D"k">sizeof</span><span class=3D"p">(</span><span clas=
s=3D"n">status</span><span class=3D"p">),</span> <span class=3D"s">"%.20s -=
 %d lines"</span><span class=3D"p">,</span></ins><ins class=3D"line">    <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">filenam=
e</span> <span class=3D"o">?</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">:</span>=
 <span class=3D"s">"[No Name]"</span><span class=3D"p">,</span> <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><s=
pan class=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"k">if</=
span> <span class=3D"p">(</span><span class=3D"n">len</span> <span class=3D=
"o">&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><span c=
lass=3D"n">screencols</span><span class=3D"p">)</span> <span class=3D"n">le=
n</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">;</span=
></ins><ins class=3D"line">  <span class=3D"n">abAppend</span><span class=
=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span =
class=3D"n">status</span><span class=3D"p">,</span> <span class=3D"n">len</=
span><span class=3D"p">);</span></ins><div class=3D"line">  <span class=3D"=
k">while</span> <span class=3D"p">(</span><span class=3D"n">len</span> <spa=
n class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">screencols</span><span class=3D"p">)</span> <span clas=
s=3D"p">{</span></div><div class=3D"line">    <span class=3D"n">abAppend</s=
pan><span class=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">=
,</span> <span class=3D"s">" "</span><span class=3D"p">,</span> <span class=
=3D"mi">1</span><span class=3D"p">);</span></div><div class=3D"line">    <s=
pan class=3D"n">len</span><span class=3D"o">++</span><span class=3D"p">;</s=
pan></div><div class=3D"line">  <span class=3D"p">}</span></div><div class=
=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(</span><spa=
n class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</span=
><span class=3D"se">\x1b</span><span class=3D"s">[m"</span><span class=3D"p=
">,</span> <span class=3D"mi">3</span><span class=3D"p">);</span></div><div=
 class=3D"line"><span class=3D"p">}</span></div><div class=3D"line"></div><=
div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf"=
>editorRefreshScreen</span><span class=3D"p">()</span> <span class=3D"p">{<=
/span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div>=
<div class=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><=
div class=3D"line folded"><span class=3D"cm">/*** init ***/</span></div></c=
ode></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We make sure to cut the status string short in case it doesn=E2=80=99t f=
it inside the
width of the window. Notice how we still use the code that draws spaces up =
to
the end of the screen, so that the entire status bar has a white background=
.</p>

<p>Now let=E2=80=99s show the current line number, and align it to the righ=
t edge of the
screen.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/status-bar-right/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 96</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/status-bar-right">status-bar-right</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorDrawStatusBar</spa=
n><span class=3D"p">(</span><span class=3D"k">struct</span> <span class=3D"=
n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span><span c=
lass=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">  <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=
=3D"se">\x1b</span><span class=3D"s">[7m"</span><span class=3D"p">,</span> =
<span class=3D"mi">4</span><span class=3D"p">);</span></div><ins class=3D"l=
ine">  <span class=3D"kt">char</span> <span class=3D"n">status</span><span =
class=3D"p">[</span><span class=3D"mi">80</span><span class=3D"p">],</span>=
 <span class=3D"n">rstatus</span><span class=3D"p">[</span><span class=3D"m=
i">80</span><span class=3D"p">];</span></ins><div class=3D"line">  <span cl=
ass=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D</s=
pan> <span class=3D"n">snprintf</span><span class=3D"p">(</span><span class=
=3D"n">status</span><span class=3D"p">,</span> <span class=3D"k">sizeof</sp=
an><span class=3D"p">(</span><span class=3D"n">status</span><span class=3D"=
p">),</span> <span class=3D"s">"%.20s - %d lines"</span><span class=3D"p">,=
</span></div><div class=3D"line">    <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">?</span>=
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">file=
name</span> <span class=3D"o">:</span> <span class=3D"s">"[No Name]"</span>=
<span class=3D"p">,</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">numrows</span><span class=3D"p">);</span></div><ins c=
lass=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">rlen</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">snprintf</span><span class=
=3D"p">(</span><span class=3D"n">rstatus</span><span class=3D"p">,</span> <=
span class=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">r=
status</span><span class=3D"p">),</span> <span class=3D"s">"%d/%d"</span><s=
pan class=3D"p">,</span></ins><ins class=3D"line">    <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o=
">+</span> <span class=3D"mi">1</span><span class=3D"p">,</span> <span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><=
span class=3D"p">);</span></ins><div class=3D"line">  <span class=3D"k">if<=
/span> <span class=3D"p">(</span><span class=3D"n">len</span> <span class=
=3D"o">&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><spa=
n class=3D"n">screencols</span><span class=3D"p">)</span> <span class=3D"n"=
>len</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">;</s=
pan></div><div class=3D"line">  <span class=3D"n">abAppend</span><span clas=
s=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span=
 class=3D"n">status</span><span class=3D"p">,</span> <span class=3D"n">len<=
/span><span class=3D"p">);</span></div><div class=3D"line">  <span class=3D=
"k">while</span> <span class=3D"p">(</span><span class=3D"n">len</span> <sp=
an class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">screencols</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span></div><ins class=3D"line">    <span class=3D"k">if</span> =
<span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">screencols</span> <span class=3D"o">-</span> <span cla=
ss=3D"n">len</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">rlen<=
/span><span class=3D"p">)</span> <span class=3D"p">{</span></ins><ins class=
=3D"line">      <span class=3D"n">abAppend</span><span class=3D"p">(</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">rst=
atus</span><span class=3D"p">,</span> <span class=3D"n">rlen</span><span cl=
ass=3D"p">);</span></ins><ins class=3D"line">      <span class=3D"k">break<=
/span><span class=3D"p">;</span></ins><ins class=3D"line">    <span class=
=3D"p">}</span> <span class=3D"k">else</span> <span class=3D"p">{</span></i=
ns><div class=3D"line">      <span class=3D"n">abAppend</span><span class=
=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span =
class=3D"s">" "</span><span class=3D"p">,</span> <span class=3D"mi">1</span=
><span class=3D"p">);</span></div><div class=3D"line">      <span class=3D"=
n">len</span><span class=3D"o">++</span><span class=3D"p">;</span></div><di=
v class=3D"line">    <span class=3D"p">}</span></div><ins class=3D"line">  =
<span class=3D"p">}</span></ins><div class=3D"line">  <span class=3D"n">abA=
ppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span clas=
s=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><s=
pan class=3D"s">[m"</span><span class=3D"p">,</span> <span class=3D"mi">3</=
span><span class=3D"p">);</span></div><div class=3D"line"><span class=3D"p"=
>}</span></div><div class=3D"line"></div><div class=3D"line folded"><span c=
lass=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</span><span =
class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p=
">}</span></div><div class=3D"line"></div><div class=3D"line folded"><span =
class=3D"cm">/*** input ***/</span></div><div class=3D"line folded"><span c=
lass=3D"cm">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>The current line is stored in <code>E.cy</code>, which we add <code>1</c=
ode> to since <code>E.cy</code> is
0-indexed. After printing the first status string, we want to keep printing
spaces until we get to the point where if we printed the second status stri=
ng,
it would end up against the right edge of the screen. That happens when
<code>E.screencols - len</code> is equal to the length of the second status=
 string. At
that point we print the status string and break out of the loop, as the ent=
ire
status bar has now been printed.</p>
<h2 id=3D"status-message"><a href=3D"https://viewsourcecode.org/snaptoken/k=
ilo/04.aTextViewer.html#status-message">Status message</a></h2>

<p>We=E2=80=99re going to add one more line below our status bar. This will=
 be for
displaying messages to the user, and prompting the user for input when doin=
g a
search, for example. We=E2=80=99ll store the current message in a string ca=
lled
<code>statusmsg</code>, which we=E2=80=99ll put in the global editor state.=
 We=E2=80=99ll also store a
timestamp for the message, so that we can erase it a few seconds after it=
=E2=80=99s
been displayed.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/status-message/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 97</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/status-message">status-message</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line"><span class=3D"cm"=
>/*** includes ***/</span></div><div class=3D"line"></div><div class=3D"lin=
e"><span class=3D"cp">#define _DEFAULT_SOURCE</span></div><div class=3D"lin=
e"><span class=3D"cp">#define _BSD_SOURCE</span></div><div class=3D"line"><=
span class=3D"cp">#define _GNU_SOURCE</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"cp">#include &lt;ctype.h&gt;</span></di=
v><div class=3D"line"><span class=3D"cp">#include &lt;errno.h&gt;</span></d=
iv><div class=3D"line"><span class=3D"cp">#include &lt;stdio.h&gt;</span></=
div><div class=3D"line"><span class=3D"cp">#include &lt;stdlib.h&gt;</span>=
</div><div class=3D"line"><span class=3D"cp">#include &lt;string.h&gt;</spa=
n></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/ioctl.h&gt;=
</span></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/types.=
h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;termi=
os.h&gt;</span></div><ins class=3D"line"><span class=3D"cp">#include &lt;ti=
me.h&gt;</span></ins><div class=3D"line"><span class=3D"cp">#include &lt;un=
istd.h&gt;</span></div><div class=3D"line"></div><div class=3D"line folded"=
><span class=3D"cm">/*** defines ***/</span></div><div class=3D"line"><span=
 class=3D"cm">/*** data ***/</span></div><div class=3D"line"></div><div cla=
ss=3D"line folded"><span class=3D"k">typedef</span> <span class=3D"k">struc=
t</span> <span class=3D"n">erow</span> <span class=3D"p">{</span> =E2=80=A6=
 <span class=3D"p">}</span> <span class=3D"n">erow</span><span class=3D"p">=
;</span></div><div class=3D"line"></div><div class=3D"line"><span class=3D"=
k">struct</span> <span class=3D"n">editorConfig</span> <span class=3D"p">{<=
/span></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=
=3D"n">cx</span><span class=3D"p">,</span> <span class=3D"n">cy</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int</sp=
an> <span class=3D"n">rx</span><span class=3D"p">;</span></div><div class=
=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">rowoff</span><s=
pan class=3D"p">;</span></div><div class=3D"line">  <span class=3D"kt">int<=
/span> <span class=3D"n">coloff</span><span class=3D"p">;</span></div><div =
class=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">screenrows=
</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D=
"kt">int</span> <span class=3D"n">screencols</span><span class=3D"p">;</spa=
n></div><div class=3D"line">  <span class=3D"kt">int</span> <span class=3D"=
n">numrows</span><span class=3D"p">;</span></div><div class=3D"line">  <spa=
n class=3D"n">erow</span> <span class=3D"o">*</span><span class=3D"n">row</=
span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"k=
t">char</span> <span class=3D"o">*</span><span class=3D"n">filename</span><=
span class=3D"p">;</span></div><ins class=3D"line">  <span class=3D"kt">cha=
r</span> <span class=3D"n">statusmsg</span><span class=3D"p">[</span><span =
class=3D"mi">80</span><span class=3D"p">];</span></ins><ins class=3D"line">=
  <span class=3D"kt">time_t</span> <span class=3D"n">statusmsg_time</span><=
span class=3D"p">;</span></ins><div class=3D"line">  <span class=3D"k">stru=
ct</span> <span class=3D"n">termios</span> <span class=3D"n">orig_termios</=
span><span class=3D"p">;</span></div><div class=3D"line"><span class=3D"p">=
};</span></div><div class=3D"line"></div><div class=3D"line"><span class=3D=
"k">struct</span> <span class=3D"n">editorConfig</span> <span class=3D"n">E=
</span><span class=3D"p">;</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"cm">/*** terminal ***/</span></div><div cla=
ss=3D"line folded"><span class=3D"cm">/*** row operations ***/</span></div>=
<div class=3D"line folded"><span class=3D"cm">/*** file i/o ***/</span></di=
v><div class=3D"line folded"><span class=3D"cm">/*** append buffer ***/</sp=
an></div><div class=3D"line folded"><span class=3D"cm">/*** output ***/</sp=
an></div><div class=3D"line folded"><span class=3D"cm">/*** input ***/</spa=
n></div><div class=3D"line"><span class=3D"cm">/*** init ***/</span></div><=
div class=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span>=
 <span class=3D"nf">initEditor</span><span class=3D"p">()</span> <span clas=
s=3D"p">{</span></div><div class=3D"line">  <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</spa=
n> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D=
"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D=
"n">cy</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o">=3D=
</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div cla=
ss=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span cla=
ss=3D"n">rowoff</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</s=
pan><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">coloff</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span><=
/div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">numrows</span> <span class=3D"o">=3D</span> <span cla=
ss=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  <sp=
an class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</spa=
n> <span class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=
=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">=3D=
</span> <span class=3D"nb">NULL</span><span class=3D"p">;</span></div><ins =
class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span =
class=3D"n">statusmsg</span><span class=3D"p">[</span><span class=3D"mi">0<=
/span><span class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=
=3D"sc">'\0'</span><span class=3D"p">;</span></ins><ins class=3D"line">  <s=
pan class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">statusm=
sg_time</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><spa=
n class=3D"p">;</span></ins><div class=3D"line"></div><div class=3D"line"> =
 <span class=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">ge=
tWindowSize</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><=
span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screen=
rows</span><span class=3D"p">,</span> <span class=3D"o">&amp;</span><span c=
lass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screencols</=
span><span class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=
=3D"o">-</span><span class=3D"mi">1</span><span class=3D"p">)</span> <span =
class=3D"n">die</span><span class=3D"p">(</span><span class=3D"s">"getWindo=
wSize"</span><span class=3D"p">);</span></div><div class=3D"line">  <span c=
lass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</=
span> <span class=3D"o">-=3D</span> <span class=3D"mi">1</span><span class=
=3D"p">;</span></div><div class=3D"line"><span class=3D"p">}</span></div><d=
iv class=3D"line"></div><div class=3D"line folded"><span class=3D"kt">int</=
span> <span class=3D"nf">main</span><span class=3D"p">(</span><span class=
=3D"kt">int</span> <span class=3D"n">argc</span><span class=3D"p">,</span> =
<span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">=
argv</span><span class=3D"p">[])</span> <span class=3D"p">{</span> =E2=80=
=A6 <span class=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>time_t</code> comes from <code>&lt;time.h&gt;</code>.</p>

<p>We initialize <code>E.statusmsg</code> to an empty string, so no message=
 will be displayed
by default. <code>E.statusmsg_time</code> will contain the timestamp when w=
e set a status
message.</p>

<p>Let=E2=80=99s define an <code>editorSetStatusMessage()</code> function. =
This function will take a
format string and a variable number of arguments, like the <code>printf()</=
code> family of
functions.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/set-status-message/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 98</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/set-status-message">set-status-message</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line"><span class=3D"cm"=
>/*** includes ***/</span></div><div class=3D"line"></div><div class=3D"lin=
e"><span class=3D"cp">#define _DEFAULT_SOURCE</span></div><div class=3D"lin=
e"><span class=3D"cp">#define _BSD_SOURCE</span></div><div class=3D"line"><=
span class=3D"cp">#define _GNU_SOURCE</span></div><div class=3D"line"></div=
><div class=3D"line"><span class=3D"cp">#include &lt;ctype.h&gt;</span></di=
v><div class=3D"line"><span class=3D"cp">#include &lt;errno.h&gt;</span></d=
iv><div class=3D"line"><span class=3D"cp">#include &lt;stdio.h&gt;</span></=
div><ins class=3D"line"><span class=3D"cp">#include &lt;stdarg.h&gt;</span>=
</ins><div class=3D"line"><span class=3D"cp">#include &lt;stdlib.h&gt;</spa=
n></div><div class=3D"line"><span class=3D"cp">#include &lt;string.h&gt;</s=
pan></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/ioctl.h&g=
t;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;sys/type=
s.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;ter=
mios.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;=
time.h&gt;</span></div><div class=3D"line"><span class=3D"cp">#include &lt;=
unistd.h&gt;</span></div><div class=3D"line"></div><div class=3D"line folde=
d"><span class=3D"cm">/*** defines ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** data ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** terminal ***/</span></div><div class=3D"line fold=
ed"><span class=3D"cm">/*** row operations ***/</span></div><div class=3D"l=
ine folded"><span class=3D"cm">/*** file i/o ***/</span></div><div class=3D=
"line folded"><span class=3D"cm">/*** append buffer ***/</span></div><div c=
lass=3D"line"><span class=3D"cm">/*** output ***/</span></div><div class=3D=
"line"></div><div class=3D"line folded"><span class=3D"kt">void</span> <spa=
n class=3D"nf">editorScroll</span><span class=3D"p">()</span> <span class=
=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"lin=
e"></div><div class=3D"line folded"><span class=3D"kt">void</span> <span cl=
ass=3D"nf">editorDrawRows</span><span class=3D"p">(</span><span class=3D"k"=
>struct</span> <span class=3D"n">abuf</span> <span class=3D"o">*</span><spa=
n class=3D"n">ab</span><span class=3D"p">)</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawStatusBar</span><span class=3D"p">(</span><span class=3D"k">struct</=
span> <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=
=3D"n">ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=
=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div class=
=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">editorRe=
freshScreen</span><span class=3D"p">()</span> <span class=3D"p">{</span> =
=E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><ins cl=
ass=3D"line"><span class=3D"kt">void</span> <span class=3D"nf">editorSetSta=
tusMessage</span><span class=3D"p">(</span><span class=3D"k">const</span> <=
span class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">f=
mt</span><span class=3D"p">,</span> <span class=3D"p">...)</span> <span cla=
ss=3D"p">{</span></ins><ins class=3D"line">  <span class=3D"kt">va_list</sp=
an> <span class=3D"n">ap</span><span class=3D"p">;</span></ins><ins class=
=3D"line">  <span class=3D"n">va_start</span><span class=3D"p">(</span><spa=
n class=3D"n">ap</span><span class=3D"p">,</span> <span class=3D"n">fmt</sp=
an><span class=3D"p">);</span></ins><ins class=3D"line">  <span class=3D"n"=
>vsnprintf</span><span class=3D"p">(</span><span class=3D"n">E</span><span =
class=3D"p">.</span><span class=3D"n">statusmsg</span><span class=3D"p">,</=
span> <span class=3D"k">sizeof</span><span class=3D"p">(</span><span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">statusmsg</span>=
<span class=3D"p">),</span> <span class=3D"n">fmt</span><span class=3D"p">,=
</span> <span class=3D"n">ap</span><span class=3D"p">);</span></ins><ins cl=
ass=3D"line">  <span class=3D"n">va_end</span><span class=3D"p">(</span><sp=
an class=3D"n">ap</span><span class=3D"p">);</span></ins><ins class=3D"line=
">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">s=
tatusmsg_time</span> <span class=3D"o">=3D</span> <span class=3D"n">time</s=
pan><span class=3D"p">(</span><span class=3D"nb">NULL</span><span class=3D"=
p">);</span></ins><ins class=3D"line"><span class=3D"p">}</span></ins><div =
class=3D"line"></div><div class=3D"line folded"><span class=3D"cm">/*** inp=
ut ***/</span></div><div class=3D"line"><span class=3D"cm">/*** init ***/</=
span></div><div class=3D"line"></div><div class=3D"line folded"><span class=
=3D"kt">void</span> <span class=3D"nf">initEditor</span><span class=3D"p">(=
)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span></d=
iv><div class=3D"line"></div><div class=3D"line"><span class=3D"kt">int</sp=
an> <span class=3D"nf">main</span><span class=3D"p">(</span><span class=3D"=
kt">int</span> <span class=3D"n">argc</span><span class=3D"p">,</span> <spa=
n class=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">argv=
</span><span class=3D"p">[])</span> <span class=3D"p">{</span></div><div cl=
ass=3D"line">  <span class=3D"n">enableRawMode</span><span class=3D"p">();<=
/span></div><div class=3D"line">  <span class=3D"n">initEditor</span><span =
class=3D"p">();</span></div><div class=3D"line">  <span class=3D"k">if</spa=
n> <span class=3D"p">(</span><span class=3D"n">argc</span> <span class=3D"o=
">&gt;=3D</span> <span class=3D"mi">2</span><span class=3D"p">)</span> <spa=
n class=3D"p">{</span></div><div class=3D"line">    <span class=3D"n">edito=
rOpen</span><span class=3D"p">(</span><span class=3D"n">argv</span><span cl=
ass=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">]);</span></=
div><div class=3D"line">  <span class=3D"p">}</span></div><div class=3D"lin=
e"></div><ins class=3D"line">  <span class=3D"n">editorSetStatusMessage</sp=
an><span class=3D"p">(</span><span class=3D"s">"HELP: Ctrl-Q =3D quit"</spa=
n><span class=3D"p">);</span></ins><div class=3D"line"></div><div class=3D"=
line">  <span class=3D"k">while</span> <span class=3D"p">(</span><span clas=
s=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"p">{</span></div=
><div class=3D"line">    <span class=3D"n">editorRefreshScreen</span><span =
class=3D"p">();</span></div><div class=3D"line">    <span class=3D"n">edito=
rProcessKeypress</span><span class=3D"p">();</span></div><div class=3D"line=
">  <span class=3D"p">}</span></div><div class=3D"line"></div><div class=3D=
"line">  <span class=3D"k">return</span> <span class=3D"mi">0</span><span c=
lass=3D"p">;</span></div><div class=3D"line"><span class=3D"p">}</span></di=
v></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c1">=E2=99=8E=EF=B8=8E compiles, but with no obser=
vable effects</div>
</div>
</div>


<p><code>va_list</code>, <code>va_start()</code>, and <code>va_end()</code>=
 come from <code>&lt;stdarg.h&gt;</code>. <code>vsnprintf()</code>
comes from <code>&lt;stdio.h&gt;</code>. <code>time()</code> comes from <co=
de>&lt;time.h&gt;</code>.</p>

<p>In <code>main()</code>, we set the initial status message to a help mess=
age with the key
bindings that our text editor uses (currently, just <kbd>Ctrl-Q</kbd> to qu=
it).</p>

<p><code>vsnprintf()</code> helps us make our own <code>printf()</code>-sty=
le function. We store the
resulting string in <code>E.statusmsg</code>, and set <code>E.statusmsg_tim=
e</code> to the current
time, which can be gotten by passing <code>NULL</code> to <code>time()</cod=
e>. (It returns the number
of seconds that have passed since
<a href=3D"https://en.wikipedia.org/wiki/Unix_time">midnight, January 1, 19=
70</a> as an
integer.)</p>

<p>The <code>...</code> argument makes <code>editorSetStatusMessage()</code=
> a
<a href=3D"https://en.wikipedia.org/wiki/Variadic_function">variadic functi=
on</a>, meaning
it can take any number of arguments. C=E2=80=99s way of dealing with these =
arguments is
by having you call <code>va_start()</code> and <code>va_end()</code> on a v=
alue of type <code>va_list</code>.
The last argument before the <code>...</code> (in this case, <code>fmt</cod=
e>) must be passed to
<code>va_start()</code>, so that the address of the next arguments is known=
. Then, between
the <code>va_start()</code> and <code>va_end()</code> calls, you would call=
 <code>va_arg()</code> and pass it
the type of the next argument (which you usually get from the given format
string) and it would return the value of that argument. In this case, we pa=
ss
<code>fmt</code> and <code>ap</code> to <code>vsnprintf()</code> and it tak=
es care of reading the format string
and calling <code>va_arg()</code> to get each argument.</p>

<p>Now that we have a status message to display, let=E2=80=99s make room fo=
r a second line
beneath our status bar where we=E2=80=99ll display the message.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/message-bar-make-room/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 99</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/message-bar-make-room">message-bar-make-room</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line"=
><span class=3D"kt">void</span> <span class=3D"nf">editorDrawStatusBar</spa=
n><span class=3D"p">(</span><span class=3D"k">struct</span> <span class=3D"=
n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span><span c=
lass=3D"p">)</span> <span class=3D"p">{</span></div><div class=3D"line">  <=
span class=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n"=
>ab</span><span class=3D"p">,</span> <span class=3D"s">"</span><span class=
=3D"se">\x1b</span><span class=3D"s">[7m"</span><span class=3D"p">,</span> =
<span class=3D"mi">4</span><span class=3D"p">);</span></div><div class=3D"l=
ine">  <span class=3D"kt">char</span> <span class=3D"n">status</span><span =
class=3D"p">[</span><span class=3D"mi">80</span><span class=3D"p">],</span>=
 <span class=3D"n">rstatus</span><span class=3D"p">[</span><span class=3D"m=
i">80</span><span class=3D"p">];</span></div><div class=3D"line">  <span cl=
ass=3D"kt">int</span> <span class=3D"n">len</span> <span class=3D"o">=3D</s=
pan> <span class=3D"n">snprintf</span><span class=3D"p">(</span><span class=
=3D"n">status</span><span class=3D"p">,</span> <span class=3D"k">sizeof</sp=
an><span class=3D"p">(</span><span class=3D"n">status</span><span class=3D"=
p">),</span> <span class=3D"s">"%.20s - %d lines"</span><span class=3D"p">,=
</span></div><div class=3D"line">    <span class=3D"n">E</span><span class=
=3D"p">.</span><span class=3D"n">filename</span> <span class=3D"o">?</span>=
 <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">file=
name</span> <span class=3D"o">:</span> <span class=3D"s">"[No Name]"</span>=
<span class=3D"p">,</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">numrows</span><span class=3D"p">);</span></div><div c=
lass=3D"line">  <span class=3D"kt">int</span> <span class=3D"n">rlen</span>=
 <span class=3D"o">=3D</span> <span class=3D"n">snprintf</span><span class=
=3D"p">(</span><span class=3D"n">rstatus</span><span class=3D"p">,</span> <=
span class=3D"k">sizeof</span><span class=3D"p">(</span><span class=3D"n">r=
status</span><span class=3D"p">),</span> <span class=3D"s">"%d/%d"</span><s=
pan class=3D"p">,</span></div><div class=3D"line">    <span class=3D"n">E</=
span><span class=3D"p">.</span><span class=3D"n">cy</span> <span class=3D"o=
">+</span> <span class=3D"mi">1</span><span class=3D"p">,</span> <span clas=
s=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">numrows</span><=
span class=3D"p">);</span></div><div class=3D"line">  <span class=3D"k">if<=
/span> <span class=3D"p">(</span><span class=3D"n">len</span> <span class=
=3D"o">&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</span><spa=
n class=3D"n">screencols</span><span class=3D"p">)</span> <span class=3D"n"=
>len</span> <span class=3D"o">=3D</span> <span class=3D"n">E</span><span cl=
ass=3D"p">.</span><span class=3D"n">screencols</span><span class=3D"p">;</s=
pan></div><div class=3D"line">  <span class=3D"n">abAppend</span><span clas=
s=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span=
 class=3D"n">status</span><span class=3D"p">,</span> <span class=3D"n">len<=
/span><span class=3D"p">);</span></div><div class=3D"line">  <span class=3D=
"k">while</span> <span class=3D"p">(</span><span class=3D"n">len</span> <sp=
an class=3D"o">&lt;</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">screencols</span><span class=3D"p">)</span> <span cla=
ss=3D"p">{</span></div><div class=3D"line">    <span class=3D"k">if</span> =
<span class=3D"p">(</span><span class=3D"n">E</span><span class=3D"p">.</sp=
an><span class=3D"n">screencols</span> <span class=3D"o">-</span> <span cla=
ss=3D"n">len</span> <span class=3D"o">=3D=3D</span> <span class=3D"n">rlen<=
/span><span class=3D"p">)</span> <span class=3D"p">{</span></div><div class=
=3D"line">      <span class=3D"n">abAppend</span><span class=3D"p">(</span>=
<span class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"n">rst=
atus</span><span class=3D"p">,</span> <span class=3D"n">rlen</span><span cl=
ass=3D"p">);</span></div><div class=3D"line">      <span class=3D"k">break<=
/span><span class=3D"p">;</span></div><div class=3D"line">    <span class=
=3D"p">}</span> <span class=3D"k">else</span> <span class=3D"p">{</span></d=
iv><div class=3D"line">      <span class=3D"n">abAppend</span><span class=
=3D"p">(</span><span class=3D"n">ab</span><span class=3D"p">,</span> <span =
class=3D"s">" "</span><span class=3D"p">,</span> <span class=3D"mi">1</span=
><span class=3D"p">);</span></div><div class=3D"line">      <span class=3D"=
n">len</span><span class=3D"o">++</span><span class=3D"p">;</span></div><di=
v class=3D"line">    <span class=3D"p">}</span></div><div class=3D"line">  =
<span class=3D"p">}</span></div><div class=3D"line">  <span class=3D"n">abA=
ppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span clas=
s=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><s=
pan class=3D"s">[m"</span><span class=3D"p">,</span> <span class=3D"mi">3</=
span><span class=3D"p">);</span></div><ins class=3D"line">  <span class=3D"=
n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><spa=
n class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\r\n</s=
pan><span class=3D"s">"</span><span class=3D"p">,</span> <span class=3D"mi"=
>2</span><span class=3D"p">);</span></ins><div class=3D"line"><span class=
=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded"><=
span class=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</span>=
<span class=3D"p">()</span> <span class=3D"p">{</span> =E2=80=A6 <span clas=
s=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line folded">=
<span class=3D"kt">void</span> <span class=3D"nf">editorSetStatusMessage</s=
pan><span class=3D"p">(</span><span class=3D"k">const</span> <span class=3D=
"kt">char</span> <span class=3D"o">*</span><span class=3D"n">fmt</span><spa=
n class=3D"p">,</span> <span class=3D"p">...)</span> <span class=3D"p">{</s=
pan> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><d=
iv class=3D"line folded"><span class=3D"cm">/*** input ***/</span></div><di=
v class=3D"line"><span class=3D"cm">/*** init ***/</span></div><div class=
=3D"line"></div><div class=3D"line"><span class=3D"kt">void</span> <span cl=
ass=3D"nf">initEditor</span><span class=3D"p">()</span> <span class=3D"p">{=
</span></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D=
"p">.</span><span class=3D"n">cx</span> <span class=3D"o">=3D</span> <span =
class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"line">  =
<span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</s=
pan> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D=
"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span><span cla=
ss=3D"p">.</span><span class=3D"n">rx</span> <span class=3D"o">=3D</span> <=
span class=3D"mi">0</span><span class=3D"p">;</span></div><div class=3D"lin=
e">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">=
rowoff</span> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span=
 class=3D"p">;</span></div><div class=3D"line">  <span class=3D"n">E</span>=
<span class=3D"p">.</span><span class=3D"n">coloff</span> <span class=3D"o"=
>=3D</span> <span class=3D"mi">0</span><span class=3D"p">;</span></div><div=
 class=3D"line">  <span class=3D"n">E</span><span class=3D"p">.</span><span=
 class=3D"n">numrows</span> <span class=3D"o">=3D</span> <span class=3D"mi"=
>0</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">row</span> <span=
 class=3D"o">=3D</span> <span class=3D"nb">NULL</span><span class=3D"p">;</=
span></div><div class=3D"line">  <span class=3D"n">E</span><span class=3D"p=
">.</span><span class=3D"n">filename</span> <span class=3D"o">=3D</span> <s=
pan class=3D"nb">NULL</span><span class=3D"p">;</span></div><div class=3D"l=
ine">  <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n=
">statusmsg</span><span class=3D"p">[</span><span class=3D"mi">0</span><spa=
n class=3D"p">]</span> <span class=3D"o">=3D</span> <span class=3D"sc">'\0'=
</span><span class=3D"p">;</span></div><div class=3D"line">  <span class=3D=
"n">E</span><span class=3D"p">.</span><span class=3D"n">statusmsg_time</spa=
n> <span class=3D"o">=3D</span> <span class=3D"mi">0</span><span class=3D"p=
">;</span></div><div class=3D"line"></div><div class=3D"line">  <span class=
=3D"k">if</span> <span class=3D"p">(</span><span class=3D"n">getWindowSize<=
/span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=
=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span=
><span class=3D"p">,</span> <span class=3D"o">&amp;</span><span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">screencols</span><span=
 class=3D"p">)</span> <span class=3D"o">=3D=3D</span> <span class=3D"o">-</=
span><span class=3D"mi">1</span><span class=3D"p">)</span> <span class=3D"n=
">die</span><span class=3D"p">(</span><span class=3D"s">"getWindowSize"</sp=
an><span class=3D"p">);</span></div><ins class=3D"line">  <span class=3D"n"=
>E</span><span class=3D"p">.</span><span class=3D"n">screenrows</span> <spa=
n class=3D"o">-=3D</span> <span class=3D"mi">2</span><span class=3D"p">;</s=
pan></ins><div class=3D"line"><span class=3D"p">}</span></div><div class=3D=
"line"></div><div class=3D"line folded"><span class=3D"kt">int</span> <span=
 class=3D"nf">main</span><span class=3D"p">(</span><span class=3D"kt">int</=
span> <span class=3D"n">argc</span><span class=3D"p">,</span> <span class=
=3D"kt">char</span> <span class=3D"o">*</span><span class=3D"n">argv</span>=
<span class=3D"p">[])</span> <span class=3D"p">{</span> =E2=80=A6 <span cla=
ss=3D"p">}</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>We decrement <code>E.screenrows</code> again, and print a newline after =
the first status
bar. We now have a blank final line once again.</p>

<p>Let=E2=80=99s draw the message bar in a new <code>editorDrawMessageBar()=
</code> function.</p>

<div class=3D"diff">
<div class=3D"diff-header">
  <div class=3D"step-filename"><a href=3D"https://github.com/snaptoken/kilo=
-src/blob/draw-message-bar/kilo.c">kilo.c</a></div>
  <div class=3D"step-number">Step 100</div>
  <div class=3D"step-name"><a href=3D"https://github.com/snaptoken/kilo-src=
/tree/draw-message-bar">draw-message-bar</a></div>
</div><pre class=3D"highlight"><code><div class=3D"line folded"><span class=
=3D"cm">/*** includes ***/</span></div><div class=3D"line folded"><span cla=
ss=3D"cm">/*** defines ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** data ***/</span></div><div class=3D"line folded"><span clas=
s=3D"cm">/*** terminal ***/</span></div><div class=3D"line folded"><span cl=
ass=3D"cm">/*** row operations ***/</span></div><div class=3D"line folded">=
<span class=3D"cm">/*** file i/o ***/</span></div><div class=3D"line folded=
"><span class=3D"cm">/*** append buffer ***/</span></div><div class=3D"line=
"><span class=3D"cm">/*** output ***/</span></div><div class=3D"line"></div=
><div class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"n=
f">editorScroll</span><span class=3D"p">()</span> <span class=3D"p">{</span=
> =E2=80=A6 <span class=3D"p">}</span></div><div class=3D"line"></div><div =
class=3D"line folded"><span class=3D"kt">void</span> <span class=3D"nf">edi=
torDrawRows</span><span class=3D"p">(</span><span class=3D"k">struct</span>=
 <span class=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">=
ab</span><span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <s=
pan class=3D"p">}</span></div><div class=3D"line"></div><div class=3D"line =
folded"><span class=3D"kt">void</span> <span class=3D"nf">editorDrawStatusB=
ar</span><span class=3D"p">(</span><span class=3D"k">struct</span> <span cl=
ass=3D"n">abuf</span> <span class=3D"o">*</span><span class=3D"n">ab</span>=
<span class=3D"p">)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=
=3D"p">}</span></div><div class=3D"line"></div><ins class=3D"line"><span cl=
ass=3D"kt">void</span> <span class=3D"nf">editorDrawMessageBar</span><span =
class=3D"p">(</span><span class=3D"k">struct</span> <span class=3D"n">abuf<=
/span> <span class=3D"o">*</span><span class=3D"n">ab</span><span class=3D"=
p">)</span> <span class=3D"p">{</span></ins><ins class=3D"line">  <span cla=
ss=3D"n">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</spa=
n><span class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\=
x1b</span><span class=3D"s">[K"</span><span class=3D"p">,</span> <span clas=
s=3D"mi">3</span><span class=3D"p">);</span></ins><ins class=3D"line">  <sp=
an class=3D"kt">int</span> <span class=3D"n">msglen</span> <span class=3D"o=
">=3D</span> <span class=3D"n">strlen</span><span class=3D"p">(</span><span=
 class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">statusmsg<=
/span><span class=3D"p">);</span></ins><ins class=3D"line">  <span class=3D=
"k">if</span> <span class=3D"p">(</span><span class=3D"n">msglen</span> <sp=
an class=3D"o">&gt;</span> <span class=3D"n">E</span><span class=3D"p">.</s=
pan><span class=3D"n">screencols</span><span class=3D"p">)</span> <span cla=
ss=3D"n">msglen</span> <span class=3D"o">=3D</span> <span class=3D"n">E</sp=
an><span class=3D"p">.</span><span class=3D"n">screencols</span><span class=
=3D"p">;</span></ins><ins class=3D"line">  <span class=3D"k">if</span> <spa=
n class=3D"p">(</span><span class=3D"n">msglen</span> <span class=3D"o">&am=
p;&amp;</span> <span class=3D"n">time</span><span class=3D"p">(</span><span=
 class=3D"nb">NULL</span><span class=3D"p">)</span> <span class=3D"o">-</sp=
an> <span class=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">s=
tatusmsg_time</span> <span class=3D"o">&lt;</span> <span class=3D"mi">5</sp=
an><span class=3D"p">)</span></ins><ins class=3D"line">    <span class=3D"n=
">abAppend</span><span class=3D"p">(</span><span class=3D"n">ab</span><span=
 class=3D"p">,</span> <span class=3D"n">E</span><span class=3D"p">.</span><=
span class=3D"n">statusmsg</span><span class=3D"p">,</span> <span class=3D"=
n">msglen</span><span class=3D"p">);</span></ins><ins class=3D"line"><span =
class=3D"p">}</span></ins><div class=3D"line"></div><div class=3D"line"><sp=
an class=3D"kt">void</span> <span class=3D"nf">editorRefreshScreen</span><s=
pan class=3D"p">()</span> <span class=3D"p">{</span></div><div class=3D"lin=
e">  <span class=3D"n">editorScroll</span><span class=3D"p">();</span></div=
><div class=3D"line"></div><div class=3D"line">  <span class=3D"k">struct</=
span> <span class=3D"n">abuf</span> <span class=3D"n">ab</span> <span class=
=3D"o">=3D</span> <span class=3D"n">ABUF_INIT</span><span class=3D"p">;</sp=
an></div><div class=3D"line"></div><div class=3D"line">  <span class=3D"n">=
abAppend</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><spa=
n class=3D"n">ab</span><span class=3D"p">,</span> <span class=3D"s">"</span=
><span class=3D"se">\x1b</span><span class=3D"s">[?25l"</span><span class=
=3D"p">,</span> <span class=3D"mi">6</span><span class=3D"p">);</span></div=
><div class=3D"line">  <span class=3D"n">abAppend</span><span class=3D"p">(=
</span><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=
=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</span><sp=
an class=3D"s">[H"</span><span class=3D"p">,</span> <span class=3D"mi">3</s=
pan><span class=3D"p">);</span></div><div class=3D"line"></div><div class=
=3D"line">  <span class=3D"n">editorDrawRows</span><span class=3D"p">(</spa=
n><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p=
">);</span></div><div class=3D"line">  <span class=3D"n">editorDrawStatusBa=
r</span><span class=3D"p">(</span><span class=3D"o">&amp;</span><span class=
=3D"n">ab</span><span class=3D"p">);</span></div><ins class=3D"line">  <spa=
n class=3D"n">editorDrawMessageBar</span><span class=3D"p">(</span><span cl=
ass=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);</span=
></ins><div class=3D"line"></div><div class=3D"line">  <span class=3D"kt">c=
har</span> <span class=3D"n">buf</span><span class=3D"p">[</span><span clas=
s=3D"mi">32</span><span class=3D"p">];</span></div><div class=3D"line">  <s=
pan class=3D"n">snprintf</span><span class=3D"p">(</span><span class=3D"n">=
buf</span><span class=3D"p">,</span> <span class=3D"k">sizeof</span><span c=
lass=3D"p">(</span><span class=3D"n">buf</span><span class=3D"p">),</span> =
<span class=3D"s">"</span><span class=3D"se">\x1b</span><span class=3D"s">[=
%d;%dH"</span><span class=3D"p">,</span> <span class=3D"p">(</span><span cl=
ass=3D"n">E</span><span class=3D"p">.</span><span class=3D"n">cy</span> <sp=
an class=3D"o">-</span> <span class=3D"n">E</span><span class=3D"p">.</span=
><span class=3D"n">rowoff</span><span class=3D"p">)</span> <span class=3D"o=
">+</span> <span class=3D"mi">1</span><span class=3D"p">,</span></div><div =
class=3D"line">                                            <span class=3D"p=
">(</span><span class=3D"n">E</span><span class=3D"p">.</span><span class=
=3D"n">rx</span> <span class=3D"o">-</span> <span class=3D"n">E</span><span=
 class=3D"p">.</span><span class=3D"n">coloff</span><span class=3D"p">)</sp=
an> <span class=3D"o">+</span> <span class=3D"mi">1</span><span class=3D"p"=
>);</span></div><div class=3D"line">  <span class=3D"n">abAppend</span><spa=
n class=3D"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</s=
pan><span class=3D"p">,</span> <span class=3D"n">buf</span><span class=3D"p=
">,</span> <span class=3D"n">strlen</span><span class=3D"p">(</span><span c=
lass=3D"n">buf</span><span class=3D"p">));</span></div><div class=3D"line">=
</div><div class=3D"line">  <span class=3D"n">abAppend</span><span class=3D=
"p">(</span><span class=3D"o">&amp;</span><span class=3D"n">ab</span><span =
class=3D"p">,</span> <span class=3D"s">"</span><span class=3D"se">\x1b</spa=
n><span class=3D"s">[?25h"</span><span class=3D"p">,</span> <span class=3D"=
mi">6</span><span class=3D"p">);</span></div><div class=3D"line"></div><div=
 class=3D"line">  <span class=3D"n">write</span><span class=3D"p">(</span><=
span class=3D"n">STDOUT_FILENO</span><span class=3D"p">,</span> <span class=
=3D"n">ab</span><span class=3D"p">.</span><span class=3D"n">b</span><span c=
lass=3D"p">,</span> <span class=3D"n">ab</span><span class=3D"p">.</span><s=
pan class=3D"n">len</span><span class=3D"p">);</span></div><div class=3D"li=
ne">  <span class=3D"n">abFree</span><span class=3D"p">(</span><span class=
=3D"o">&amp;</span><span class=3D"n">ab</span><span class=3D"p">);</span></=
div><div class=3D"line"><span class=3D"p">}</span></div><div class=3D"line"=
></div><div class=3D"line folded"><span class=3D"kt">void</span> <span clas=
s=3D"nf">editorSetStatusMessage</span><span class=3D"p">(</span><span class=
=3D"k">const</span> <span class=3D"kt">char</span> <span class=3D"o">*</spa=
n><span class=3D"n">fmt</span><span class=3D"p">,</span> <span class=3D"p">=
...)</span> <span class=3D"p">{</span> =E2=80=A6 <span class=3D"p">}</span>=
</div><div class=3D"line"></div><div class=3D"line folded"><span class=3D"c=
m">/*** input ***/</span></div><div class=3D"line folded"><span class=3D"cm=
">/*** init ***/</span></div></code></pre>
<div class=3D"diff-footer">
  <div class=3D"diff-tag-c2">=E2=99=90=EF=B8=8E compiles</div>
</div>
</div>


<p>First we clear the message bar with the <code>&lt;esc&gt;[K</code> escap=
e sequence. Then we make
sure the message will fit the width of the screen, and then display the
message, but only if the message is less than 5 seconds old.</p>

<p>When you start up the program now, you should see the help message at th=
e
bottom. It will disappear <em>when you press a key</em> after 5 seconds. Re=
member, we
only refresh the screen after each keypress.</p>

<p>In the <a href=3D"https://viewsourcecode.org/snaptoken/kilo/05.aTextEdit=
or.html">next chapter</a>, we will turn our text viewer into a
text editor, allowing the user to insert and delete characters and save the=
ir
changes to disk.</p>

    </div>
    <div id=3D"version">
      <a href=3D"https://github.com/snaptoken/kilo-tutorial/tree/v1.0.0beta=
11">1.0.0beta11</a>
      (<a href=3D"https://github.com/snaptoken/kilo-tutorial/blob/master/CH=
ANGELOG.md">changelog</a>)
    </div>
    <footer class=3D"bar">
      <nav>
        <a href=3D"https://viewsourcecode.org/snaptoken/kilo/04.aTextViewer=
.html#">top of page</a>
      </nav>
    </footer>
 =20


</body><grammarly-desktop-integration data-grammarly-shadow-root=3D"true"><=
template shadowmode=3D"open"><div aria-label=3D"grammarly-integration" role=
=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-integration" data-con=
tent=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActive&quot;:true,&quot;=
isUserDisabled&quot;:false}"></div></template></grammarly-desktop-integrati=
on></html>
------MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://viewsourcecode.org/snaptoken/kilo/i/x.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAMFWlDQ1BJQ0MgUHJvZmlsZQAASImV
VwdYU8kWnltSCEkogQhICb0jvQqEDoKAdLARkgChREgICnZlUcG1iwUruipiWwsgi4rYFRGw1wcq
Ksq6WMCCypsU0PW1753vmzt/zpxz5j9zz53MAKBiz8nLy0FVAcgVFohiQvxZSckpLFIXwIAeoAN9
QOJwxXl+0dERAMpw/3cZuAUQaX/dVhrrX8f/q6jx+GIuAEg0xGk8MTcX4qMA4FrcPFEBAIQWqDee
XpAnxX0Qa4ggQQCIuBRnyLGWFKfJsY3MJi4mAGI2AGQqhyPKAIAu5c0q5GbAOHQpR3shTyCEeBPE
PtxMDg/iBxDb5OZOg1iFDLFF2g9xMv4WM20kJoeTMYLluciEHCgQ5+Vwiv7P5fjfkpsjGZ7DCDZq
pig0RpozXLc92dPCpZgKcaMwLTIKYnWILwp4MnspvpcpCY1X2PdyxQFwzQATABTwOIHhEOtCzJRk
x/spsCNHJPOF9mikoCAsToHTRNNiFPHRQmFOZIQizuJMftgw3sIXB8UO26QLgsMghpWGHi3OjEuU
80TPFgoSIiGmQ9wmzo4NV/g+Ks4MiBy2EUlipJxNIH6fLgqOkdtgWrni4bwwOy5HNhesBYxdkBkX
KvfFkvjipIhhDjx+YJCcA8bjC+MV3DBYXf4xCt/SvJxohT22hZ8TEiNfZ+yQuDB22LejABaYfB2w
x1mccdGKuQbyCqLj5NxwFESAABAIWEACWxqYBrKAoLW3rhf+ko8EAw4QgQzAB7YKzbBHomxECJ+x
oBj8CREfiEf8/GWjfFAI9V9HtPKnLUiXjRbKPLLBM4hzcR3cB/fCI+CTDZsj7o57DPuxVIZnJQYR
A4mhxGCi5QgPLmSdA5sICP6NLhz2fJidlItwOIfv8QjPCO2Ex4SbhE7CXZAAnsqiKKymChaIfmLO
AuNBJ4wWrMgu7cfscDPI2gX3x70hf8gdZ+I6wBZ3hpn44b4wNxeo/ZGhZITb97X8eT4p6x/zUejp
VnQXBYu0kTcTMGL1c5SAH9aIB/vwny2xxdgR7AJ2GruENWJ1gIWdwuqxFuyEFI9UwlNZJQzPFiPj
lg3jCIZt7Gvse+y//DQ3RzG/dL3EBfwZBdKPIWBaXpFIkJFZwPKDuzGfFSbk2tmwHO0d3ACQ7u3y
reMdU7ZnI8zL33X5TQB4lEFlxncdxxiA488AYAx81xm/heW+AoATbVyJqFCuk27HgAAoQAV+Fdrw
f8MYWMB8HIEr8AJsEATGgSgQB5LBFLjimSAXcp4OZoH5oBSUgxVgLdgItoIdYA/YDw6DOtAIToPz
4ApoAzfBfVgX3eAV6AMDYBBBEBJCQxiINmKAmCLWiCPijvggQUgEEoMkI6lIBiJEJMgsZCFSjqxC
NiLbkWrkd+Q4chq5hLQjd5EupAd5i3xGMZSKaqB6qBk6BnVH/dBwNA6djGag+WgxWoIuQ9ejVeg+
tBY9jV5Bb6Kd6Cu0HwOYMsbEDDFbzB0LwKKwFCwdE2FzsDKsAqvCDmAN8D1fxzqxXuwTTsQZOAu3
hbUZisfjXDwfn4MvxTfie/Ba/Cx+He/C+/BvBBpBl2BN8CSEEZIIGYTphFJCBWEX4RjhHPxuugkD
RCKRSTQnusHvMpmYRZxJXErcTDxIbCK2E58Q+0kkkjbJmuRNiiJxSAWkUtIG0j7SKVIHqZv0kaxM
NiA7koPJKWQheQG5gryXfJLcQX5OHlRSVTJV8lSKUuIpFSktV9qp1KB0TalbaZCiRjGneFPiKFmU
+ZT1lAOUc5QHlHfKyspGyh7KE5QFyvOU1ysfUr6o3KX8iapOtaIGUCdRJdRl1N3UJupd6jsajWZG
Y9NSaAW0ZbRq2hnaI9pHOoNuRw+j8+hz6ZX0WnoH/bWKkoqpip/KFJVilQqVIyrXVHpVlVTNVANU
OapzVCtVj6veVu1XY6g5qEWp5aotVdurdknthTpJ3Uw9SJ2nXqK+Q/2M+hMGxjBmBDC4jIWMnYxz
jG4Nooa5RphGlka5xn6NVo0+TXVNZ80EzRmalZonNDuZGNOMGcbMYS5nHmbeYn4epTfKbxR/1JJR
B0Z1jPqgNVqLrcXXKtM6qHVT67M2SztIO1t7pXad9kMdXMdKZ4LOdJ0tOud0ekdrjPYazR1dNvrw
6Hu6qK6VbozuTN0dui26/Xr6eiF6eXob9M7o9eoz9dn6Wfpr9E/q9xgwDHwMBAZrDE4ZvGRpsvxY
Oaz1rLOsPkNdw1BDieF2w1bDQSNzo3ijBUYHjR4aU4zdjdON1xg3G/eZGJiMN5llUmNyz1TJ1N00
03Sd6QXTD2bmZolmi8zqzF6Ya5mHmReb15g/sKBZ+FrkW1RZ3LAkWrpbZltutmyzQq1crDKtKq2u
WaPWrtYC683W7TYEGw8boU2VzW1bqq2fbaFtjW2XHdMuwm6BXZ3d6zEmY1LGrBxzYcw3exf7HPud
9vcd1B3GOSxwaHB462jlyHWsdLzhRHMKdprrVO/0xtname+8xfmOC8NlvMsil2aXr65uriLXA649
biZuqW6b3G67a7hHuy91v+hB8PD3mOvR6PHJ09WzwPOw519etl7ZXnu9Xow1H8sfu3PsE28jb473
du9OH5ZPqs82n05fQ1+Ob5XvY7Yxm8fexX7uZ+mX5bfP77W/vb/I/5j/hwDPgNkBTYFYYEhgWWBr
kHpQfNDGoEfBRsEZwTXBfSEuITNDmkIJoeGhK0Nvh+mFccOqw/rGuY2bPe5sODU8Nnxj+OMIqwhR
RMN4dPy48avHP4g0jRRG1kWBqLCo1VEPo82j86P/mECcED2hcsKzGIeYWTEXYhmxU2P3xg7E+cct
j7sfbxEviW9OUEmYlFCd8CExMHFVYmfSmKTZSVeSdZIFyfUppJSElF0p/RODJq6d2D3JZVLppFuT
zSfPmHxpis6UnCknpqpM5Uw9kkpITUzdm/qFE8Wp4vSnhaVtSuvjBnDXcV/x2Lw1vB6+N38V/3m6
d/qq9BcZ3hmrM3oyfTMrMnsFAYKNgjdZoVlbsz5kR2Xvzh7KScw5mEvOTc09LlQXZgvPTtOfNmNa
e551XmleZ75n/tr8PlG4aJcYEU8W1xdowGNOi8RC8oukq9CnsLLw4/SE6UdmqM0QzmgpsipaUvS8
OLj4t5n4TO7M5lmGs+bP6prtN3v7HGRO2pzmucZzS+Z2zwuZt2c+ZX72/KsL7BesWvB+YeLChhK9
knklT34J+aWmlF4qKr29yGvR1sX4YsHi1iVOSzYs+VbGK7tcbl9eUf5lKXfp5V8dfl3/69Cy9GWt
y12Xb1lBXCFccWul78o9q9RWFa96snr86to1rDVla96vnbr2UoVzxdZ1lHWSdZ3rI9bXbzDZsGLD
l42ZG29W+lce3KS7acmmD5t5mzu2sLcc2Kq3tXzr522CbXe2h2yvrTKrqthB3FG449nOhJ0XfnP/
rXqXzq7yXV93C3d37onZc7barbp6r+7e5TVojaSmZ9+kfW37A/fXH7A9sP0g82D5IXBIcujl76m/
3zocfrj5iPuRA0dNj246xjhWVovUFtX21WXWddYn17cfH3e8ucGr4dgfdn/sbjRsrDyheWL5ScrJ
kpNDp4pP9TflNfWezjj9pHlq8/0zSWdunJ1wtvVc+LmL54PPn7ngd+HURe+LjZc8Lx2/7H657orr
ldoWl5ZjV12uHmt1ba295natvs2jraF9bPvJDt+O09cDr5+/EXbjys3Im+234m/duT3pducd3p0X
d3PuvrlXeG/w/rwHhAdlD1UfVjzSfVT1D8t/HOx07TzRFdjV8jj28f0n3CevnoqffukueUZ7VvHc
4Hn1C8cXjT3BPW0vJ77sfpX3arC39E+1Pze9tnh99C/2Xy19SX3db0Rvht4ufaf9bvd75/fN/dH9
jwZyBwY/lH3U/rjnk/unC58TPz8fnP6F9GX9V8uvDd/Cvz0Yyh0ayuOIOLKjAAYbmp4OwNvdANCS
4dmhDQAKXX73kgkivy/KEPhPWH4/k4krALvZAMTPAyACnlG2wGYKMRX20qN3HBugTk4jTSHidCdH
eSwqvMEQPg4NvdMDgNQAwFfR0NDg5qGhrzsh2bsANOXL73xSIcLz/TbZOeeqcVEg+En+Cd8+bBGE
+qe9AAAACXBIWXMAABYlAAAWJQFJUiTwAAACBGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6
eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAi
PgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRm
LXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAg
ICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIKICAgICAgICAg
ICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8
ZXhpZjpQaXhlbFlEaW1lbnNpb24+NTg0PC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAg
PGV4aWY6UGl4ZWxYRGltZW5zaW9uPjE1ODwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAg
IDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2Ny
aXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgrYaV7IAAAB2UlEQVRYCe2WoV/CQBTH
HxaSyUayWWyzaLMMi/wBGrStKMkCBD4GTKZhMQkdypJQsGDCMgiQoGxJixRJ844xNt1t4919+HwW
7spu7969++179+4t45AGKW47Kda2lCYFiu6QJCgJihIQnS/PoCQoSkB0PvcZnA0nMN9g9c/JEOzF
Bo5RLvRnAdvGRslRFMVRSq/Od8xkq//i+qm6M/2JcYwZQhNc2B24vO+639utwGm5wyRpv9ehUHxy
/b6aUG5PohjF2tECs7k8GPqVH5Qh0hXX9H3UKjxfHPjviF6G0kX4r13DImrQf8jDnJA7KwbEHVeh
Vz+H3fVMXIdbIF0mJPL/2oLiaDj0Fgc15E5uwXgMbHdgcI9sqwg5L5QQQS/I2/UR3I28N/o8hNag
AftBE2dfiCBdk27zX3HUOgItIrvpKKYJEUw8g2oNeiRxeBOEfgg3wZA4khD9wSDxCsLQ4xZofzTI
JRy+SrIk4jJxEu5JjEg8QVJJCtqqQtCVGFcJS6TWnmF0+b4xZTByyGzdrGqxkVCLdeFaDJEqEgam
5jhWnDfdGpuOxfmjQGMIZbG/D9vr4c/g9rQwI0uBTCwIoySIgMV0lQSZWBBGSRABi+kqCTKxIIyp
J/gL86pOZRzqaU0AAAAASUVORK5CYII=

------MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://viewsourcecode.org/snaptoken/kilo/i/arrow.png

iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAMFWlDQ1BJQ0MgUHJvZmlsZQAASImV
VwdYU8kWnltSCEkogQhICb0jvQqEDoKAdLARkgChREgICnZlUcG1iwUruipiWwsgi4rYFRGw1wcq
Ksq6WMCCypsU0PW1753vmzt/zpxz5j9zz53MAKBiz8nLy0FVAcgVFohiQvxZSckpLFIXwIAeoAN9
QOJwxXl+0dERAMpw/3cZuAUQaX/dVhrrX8f/q6jx+GIuAEg0xGk8MTcX4qMA4FrcPFEBAIQWqDee
XpAnxX0Qa4ggQQCIuBRnyLGWFKfJsY3MJi4mAGI2AGQqhyPKAIAu5c0q5GbAOHQpR3shTyCEeBPE
PtxMDg/iBxDb5OZOg1iFDLFF2g9xMv4WM20kJoeTMYLluciEHCgQ5+Vwiv7P5fjfkpsjGZ7DCDZq
pig0RpozXLc92dPCpZgKcaMwLTIKYnWILwp4MnspvpcpCY1X2PdyxQFwzQATABTwOIHhEOtCzJRk
x/spsCNHJPOF9mikoCAsToHTRNNiFPHRQmFOZIQizuJMftgw3sIXB8UO26QLgsMghpWGHi3OjEuU
80TPFgoSIiGmQ9wmzo4NV/g+Ks4MiBy2EUlipJxNIH6fLgqOkdtgWrni4bwwOy5HNhesBYxdkBkX
KvfFkvjipIhhDjx+YJCcA8bjC+MV3DBYXf4xCt/SvJxohT22hZ8TEiNfZ+yQuDB22LejABaYfB2w
x1mccdGKuQbyCqLj5NxwFESAABAIWEACWxqYBrKAoLW3rhf+ko8EAw4QgQzAB7YKzbBHomxECJ+x
oBj8CREfiEf8/GWjfFAI9V9HtPKnLUiXjRbKPLLBM4hzcR3cB/fCI+CTDZsj7o57DPuxVIZnJQYR
A4mhxGCi5QgPLmSdA5sICP6NLhz2fJidlItwOIfv8QjPCO2Ex4SbhE7CXZAAnsqiKKymChaIfmLO
AuNBJ4wWrMgu7cfscDPI2gX3x70hf8gdZ+I6wBZ3hpn44b4wNxeo/ZGhZITb97X8eT4p6x/zUejp
VnQXBYu0kTcTMGL1c5SAH9aIB/vwny2xxdgR7AJ2GruENWJ1gIWdwuqxFuyEFI9UwlNZJQzPFiPj
lg3jCIZt7Gvse+y//DQ3RzG/dL3EBfwZBdKPIWBaXpFIkJFZwPKDuzGfFSbk2tmwHO0d3ACQ7u3y
reMdU7ZnI8zL33X5TQB4lEFlxncdxxiA488AYAx81xm/heW+AoATbVyJqFCuk27HgAAoQAV+Fdrw
f8MYWMB8HIEr8AJsEATGgSgQB5LBFLjimSAXcp4OZoH5oBSUgxVgLdgItoIdYA/YDw6DOtAIToPz
4ApoAzfBfVgX3eAV6AMDYBBBEBJCQxiINmKAmCLWiCPijvggQUgEEoMkI6lIBiJEJMgsZCFSjqxC
NiLbkWrkd+Q4chq5hLQjd5EupAd5i3xGMZSKaqB6qBk6BnVH/dBwNA6djGag+WgxWoIuQ9ejVeg+
tBY9jV5Bb6Kd6Cu0HwOYMsbEDDFbzB0LwKKwFCwdE2FzsDKsAqvCDmAN8D1fxzqxXuwTTsQZOAu3
hbUZisfjXDwfn4MvxTfie/Ba/Cx+He/C+/BvBBpBl2BN8CSEEZIIGYTphFJCBWEX4RjhHPxuugkD
RCKRSTQnusHvMpmYRZxJXErcTDxIbCK2E58Q+0kkkjbJmuRNiiJxSAWkUtIG0j7SKVIHqZv0kaxM
NiA7koPJKWQheQG5gryXfJLcQX5OHlRSVTJV8lSKUuIpFSktV9qp1KB0TalbaZCiRjGneFPiKFmU
+ZT1lAOUc5QHlHfKyspGyh7KE5QFyvOU1ysfUr6o3KX8iapOtaIGUCdRJdRl1N3UJupd6jsajWZG
Y9NSaAW0ZbRq2hnaI9pHOoNuRw+j8+hz6ZX0WnoH/bWKkoqpip/KFJVilQqVIyrXVHpVlVTNVANU
OapzVCtVj6veVu1XY6g5qEWp5aotVdurdknthTpJ3Uw9SJ2nXqK+Q/2M+hMGxjBmBDC4jIWMnYxz
jG4Nooa5RphGlka5xn6NVo0+TXVNZ80EzRmalZonNDuZGNOMGcbMYS5nHmbeYn4epTfKbxR/1JJR
B0Z1jPqgNVqLrcXXKtM6qHVT67M2SztIO1t7pXad9kMdXMdKZ4LOdJ0tOud0ekdrjPYazR1dNvrw
6Hu6qK6VbozuTN0dui26/Xr6eiF6eXob9M7o9eoz9dn6Wfpr9E/q9xgwDHwMBAZrDE4ZvGRpsvxY
Oaz1rLOsPkNdw1BDieF2w1bDQSNzo3ijBUYHjR4aU4zdjdON1xg3G/eZGJiMN5llUmNyz1TJ1N00
03Sd6QXTD2bmZolmi8zqzF6Ya5mHmReb15g/sKBZ+FrkW1RZ3LAkWrpbZltutmyzQq1crDKtKq2u
WaPWrtYC683W7TYEGw8boU2VzW1bqq2fbaFtjW2XHdMuwm6BXZ3d6zEmY1LGrBxzYcw3exf7HPud
9vcd1B3GOSxwaHB462jlyHWsdLzhRHMKdprrVO/0xtname+8xfmOC8NlvMsil2aXr65uriLXA649
biZuqW6b3G67a7hHuy91v+hB8PD3mOvR6PHJ09WzwPOw519etl7ZXnu9Xow1H8sfu3PsE28jb473
du9OH5ZPqs82n05fQ1+Ob5XvY7Yxm8fexX7uZ+mX5bfP77W/vb/I/5j/hwDPgNkBTYFYYEhgWWBr
kHpQfNDGoEfBRsEZwTXBfSEuITNDmkIJoeGhK0Nvh+mFccOqw/rGuY2bPe5sODU8Nnxj+OMIqwhR
RMN4dPy48avHP4g0jRRG1kWBqLCo1VEPo82j86P/mECcED2hcsKzGIeYWTEXYhmxU2P3xg7E+cct
j7sfbxEviW9OUEmYlFCd8CExMHFVYmfSmKTZSVeSdZIFyfUppJSElF0p/RODJq6d2D3JZVLppFuT
zSfPmHxpis6UnCknpqpM5Uw9kkpITUzdm/qFE8Wp4vSnhaVtSuvjBnDXcV/x2Lw1vB6+N38V/3m6
d/qq9BcZ3hmrM3oyfTMrMnsFAYKNgjdZoVlbsz5kR2Xvzh7KScw5mEvOTc09LlQXZgvPTtOfNmNa
e551XmleZ75n/tr8PlG4aJcYEU8W1xdowGNOi8RC8oukq9CnsLLw4/SE6UdmqM0QzmgpsipaUvS8
OLj4t5n4TO7M5lmGs+bP6prtN3v7HGRO2pzmucZzS+Z2zwuZt2c+ZX72/KsL7BesWvB+YeLChhK9
knklT34J+aWmlF4qKr29yGvR1sX4YsHi1iVOSzYs+VbGK7tcbl9eUf5lKXfp5V8dfl3/69Cy9GWt
y12Xb1lBXCFccWul78o9q9RWFa96snr86to1rDVla96vnbr2UoVzxdZ1lHWSdZ3rI9bXbzDZsGLD
l42ZG29W+lce3KS7acmmD5t5mzu2sLcc2Kq3tXzr522CbXe2h2yvrTKrqthB3FG449nOhJ0XfnP/
rXqXzq7yXV93C3d37onZc7barbp6r+7e5TVojaSmZ9+kfW37A/fXH7A9sP0g82D5IXBIcujl76m/
3zocfrj5iPuRA0dNj246xjhWVovUFtX21WXWddYn17cfH3e8ucGr4dgfdn/sbjRsrDyheWL5ScrJ
kpNDp4pP9TflNfWezjj9pHlq8/0zSWdunJ1wtvVc+LmL54PPn7ngd+HURe+LjZc8Lx2/7H657orr
ldoWl5ZjV12uHmt1ba295natvs2jraF9bPvJDt+O09cDr5+/EXbjys3Im+234m/duT3pducd3p0X
d3PuvrlXeG/w/rwHhAdlD1UfVjzSfVT1D8t/HOx07TzRFdjV8jj28f0n3CevnoqffukueUZ7VvHc
4Hn1C8cXjT3BPW0vJ77sfpX3arC39E+1Pze9tnh99C/2Xy19SX3db0Rvht4ufaf9bvd75/fN/dH9
jwZyBwY/lH3U/rjnk/unC58TPz8fnP6F9GX9V8uvDd/Cvz0Yyh0ayuOIOLKjAAYbmp4OwNvdANCS
4dmhDQAKXX73kgkivy/KEPhPWH4/k4krALvZAMTPAyACnlG2wGYKMRX20qN3HBugTk4jTSHidCdH
eSwqvMEQPg4NvdMDgNQAwFfR0NDg5qGhrzsh2bsANOXL73xSIcLz/TbZOeeqcVEg+En+Cd8+bBGE
+qe9AAAACXBIWXMAABYlAAAWJQFJUiTwAAACBGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6
eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAi
PgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRm
LXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAg
ICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyIKICAgICAgICAg
ICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8
ZXhpZjpQaXhlbFlEaW1lbnNpb24+NTg0PC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAg
PGV4aWY6UGl4ZWxYRGltZW5zaW9uPjE1ODwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAg
IDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2Ny
aXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgrYaV7IAAABPklEQVRYCWP8DwQMgxgw
DWK3gZ026kBKY2g0BEdDkNIQoFT/aBocDUFKQ4BS/aNpcDQEKQ0BSvWTnwZ/PmN48OwzpfYT1E+e
Az+fZci19mMIqTrG8JOgFRQqALWoSQGf7u/4H2ls/N/YOP7/mU+k6CRPLQvx/vvMcGByFUPJwuNQ
Lc8ZHhzbzPDgyy+ijfgJDG5j32AGdV6itTCQ5MDLx2GOA1nwlmHt8uUMb5+/Jdq2t2+FGVqtfIAO
ZCdaDwOpAX9/xyRg9IKiuPL//R+k6iZdPckOBFnx6dIaiCNbj5JuI4k6SIhiRKzw6gYz7JjPw7Dr
mTBCkEYsRpCHaGQ2VYwlrxykitXEGTLqQOLCCbeq0RDEHTbEyYyGIHHhhFvVaAjiDhviZEZDkLhw
wq1qNARxhw1xMqMhSFw44VYFAJIg/q91M+6jAAAAAElFTkSuQmCC

------MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=PT+Serif:400,400i,700|Work+Sans:700|Fira+Mono:400,500

@charset "utf-8";

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgK_=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, =
U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgIv=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-=
491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgKv=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgJf=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+370-377, U+37A-37F, U+=
384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgnN=
_3nP3TaZFxBQ.woff2") format("woff2"); unicode-range: U+2000-2001, U+2004-20=
08, U+200A, U+23B8-23BD, U+2500-259F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgKP=
7Ss9XZYalI.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+=
2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9=
F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A7=
20-A7FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bX2SlFPv1weGeLZDtgJv=
7Ss9XZYQ.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, =
U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U=
+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3Hk_fUS5NBBASF.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C=
8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HmvfUS5NBBASF.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+=
490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HkvfUS5NBBASF.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HnffUS5NBBASF.woff2") format("woff2"); unicode-range: U+370-377, U+37A-37F=
, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HJNbxZLtLDDy8Rg.woff2") format("woff2"); unicode-range: U+2000-2001, U+200=
4-2008, U+200A, U+23B8-23BD, U+2500-259F; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HkPfUS5NBBASF.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5=
, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00=
-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, =
U+A720-A7FF; }

@font-face { font-family: "Fira Mono"; font-style: normal; font-weight: 500=
; src: url("https://fonts.gstatic.com/s/firamono/v16/N0bS2SlFPv1weGeLZDto1d=
3HnvfUS5NBBA.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-1=
53, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20A=
C, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_rC1=
cgT9rct48Q.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, =
U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_rm1=
cgT9rct48Q.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-=
491, U+4B0-4B1, U+2116; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_rO1=
cgT9rct48Q.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+=
2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9=
F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A7=
20-A7FF; }

@font-face { font-family: "PT Serif"; font-style: italic; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRTQgYoZZY2vCFuvAFT_r21=
cgT9rcs.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U=
+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+=
2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFbzr-_=
dSb_nco.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A, U+2=
0B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFSzr-_=
dSb_nco.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491=
, U+4B0-4B1, U+2116; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFYzr-_=
dSb_nco.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U+2C7=
-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, =
U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-=
A7FF; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 400;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRVQgYoZZY2vCFuvAFWzr-_=
dSb_.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2B=
B-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+212=
2, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qf=
VyvVp8NAyIw.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C8A,=
 U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qW=
VyvVp8NAyIw.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490=
-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qc=
VyvVp8NAyIw.woff2") format("woff2"); unicode-range: U+100-2BA, U+2BD-2C5, U=
+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E=
9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A=
720-A7FF; }

@font-face { font-family: "PT Serif"; font-style: normal; font-weight: 700;=
 src: url("https://fonts.gstatic.com/s/ptserif/v19/EJRSQgYoZZY2vCFuvAnt66qS=
VyvVp8NA.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, =
U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U=
+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v24/QGY_z_wNahGAdqQ43RhVcI=
gYT2Xz5u32K67QBiAJpo3ZKyHaQfhf.woff2") format("woff2"); unicode-range: U+10=
2-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+=
303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v24/QGY_z_wNahGAdqQ43RhVcI=
gYT2Xz5u32K67QBiEJpo3ZKyHaQfhf.woff2") format("woff2"); unicode-range: U+10=
0-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1=
D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+211=
3, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/worksans/v24/QGY_z_wNahGAdqQ43RhVcI=
gYT2Xz5u32K67QBi8Jpo3ZKyHaQQ.woff2") format("woff2"); unicode-range: U+0-FF=
, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+=
2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://viewsourcecode.org/snaptoken/kilo/style.css

@charset "utf-8";

@import url("https://fonts.googleapis.com/css?family=3DPT+Serif:400,400i,70=
0|Work+Sans:700|Fira+Mono:400,500");

* { margin: 0px; padding: 0px; box-sizing: border-box; }

body { font-family: "PT Serif", Utopia, Georgia, Times, "Apple Symbols", se=
rif; line-height: 140%; color: rgb(51, 51, 51); font-size: 18px; }

#container { width: 700px; margin: 18px auto; }

.bar { display: block; width: 100%; background-color: rgb(204, 238, 187); b=
ox-shadow: rgb(221, 221, 221) 0px 0px 15px 1px; }

.bar > nav { display: flex; justify-content: space-between; width: 700px; m=
argin: 0px auto; }

footer.bar > nav { justify-content: center; }

.bar > nav > a { display: block; padding: 2px 0px 4px; color: rgb(17, 85, 3=
4); }

#version { text-align: right; font-size: 12px; font-family: "Fira Mono", mo=
nospace; padding-right: 5px; }

#version a { color: rgb(51, 51, 51); }

h1, h2, h3, h4, h5, h6 { font-family: "Work Sans", Futura, Helvetica, Arial=
, sans-serif; color: rgb(34, 34, 34); line-height: 100%; margin-top: 32px; =
}

h2 a, h3 a, h4 a { color: inherit; text-decoration: none; }

h2 a::before, h3 a::before, h4 a::before { content: "#"; color: rgb(255, 25=
5, 255); font-weight: normal; transition: color 0.15s; display: block; floa=
t: left; width: 32px; margin-left: -32px; }

h2 a:hover::before, h3 a:hover::before, h4 a:hover::before { color: rgb(204=
, 204, 204); }

h1 { margin-top: 0px; font-size: 38px; border-bottom: 3px solid rgb(238, 11=
9, 204); display: inline-block; }

h2 { font-size: 26px; }

p { margin-top: 18px; }

ul, ol { margin-top: 18px; margin-left: 36px; }

hr { border-top: none; border-right: none; border-left: none; border-image:=
 initial; border-bottom: 1px solid rgb(136, 136, 136); }

a { color: rgb(34, 102, 221); }

code { font-family: "Fira Mono", monospace; font-size: inherit; white-space=
: nowrap; background-color: rgb(239, 244, 234); padding: 1px 3px; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { font-weight: normal;=
 }

kbd { font-family: "Fira Mono", monospace; border-radius: 3px; padding: 2px=
 3px; box-shadow: rgb(119, 119, 119) 1px 1px 1px; margin: 2px; font-size: 1=
4px; background: rgb(247, 247, 247); font-weight: 500; color: rgb(85, 85, 8=
5); white-space: nowrap; }

h1 kbd, h2 kbd, h3 kbd, h4 kbd, h5 kbd, h6 kbd { font-size: 80%; }

.diff code { font-size: 14px; line-height: 20px; padding: 0px; margin-botto=
m: 18px; white-space: inherit; }

.diff pre { background-color: rgb(255, 252, 250); padding: 5px 0px; }

.diff { border: 1px solid rgb(237, 231, 227); border-radius: 3px; margin-to=
p: 18px; }

.diff .diff-header { display: flex; justify-content: space-between; padding=
: 0px 5px; background-color: rgb(237, 231, 227); font-size: 16px; color: rg=
b(102, 102, 102); }

.diff .step-number { font-weight: bold; }

.diff .step-filename { font-weight: bold; }

.diff .step-name { font-family: "Fira Mono", monospace; font-size: 12px; }

.diff .diff-header a { text-decoration: none; color: rgb(102, 102, 102); }

.diff .diff-header a:hover { text-decoration: underline; }

.diff .step-filename a { text-decoration: underline; }

.diff .diff-footer { background-color: rgb(237, 231, 227); }

.diff .diff-footer > div { font-size: 12px; line-height: 16px; height: 16px=
; padding-right: 5px; text-align: right; }

.diff .diff-tag-c0 { color: rgb(187, 51, 51); }

.diff .diff-tag-c1 { color: rgb(51, 51, 187); }

.diff .diff-tag-c2 { color: rgb(51, 187, 51); }

.diff .diff-tag-c-unknown { color: rgb(170, 102, 34); }

.diff .line { display: block; height: 20px; padding: 0px 5px; position: rel=
ative; }

.diff .line.folded { background-color: rgb(238, 238, 255); opacity: 0.5; }

.diff ins.line { background-color: rgb(255, 255, 221); text-decoration: non=
e; }

.diff ins.line::after { display: block; content: ""; width: 20px; height: 2=
0px; background-image: url("i/arrow.png"); background-size: 20px 20px; posi=
tion: absolute; right: -24px; top: 0px; }

.diff del.line { background-color: rgb(255, 221, 221); text-decoration: lin=
e-through; }

.diff del.line::after { display: block; content: ""; width: 20px; height: 2=
0px; background-image: url("i/x.png"); background-size: 20px 20px; position=
: absolute; right: -24px; top: 0px; }

@media screen and (max-width: 700px) {
  #container { width: auto; margin: 18px 0px; padding: 0px 5px; }
  .bar > nav { width: auto; margin: 0px; padding: 0px 5px; }
  .highlight { overflow-x: scroll; }
  .diff .line { width: 700px; }
  .diff ins.line::after, .diff del.line::after { display: none; }
}

.highlight table td { padding: 5px; }

.highlight table pre { margin: 0px; }

.highlight .cm { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cp { color: rgb(153, 153, 153); font-weight: 500; }

.highlight .c1 { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cs { color: rgb(153, 153, 153); }

.highlight .c, .highlight .cd { color: rgb(153, 153, 136); font-style: ital=
ic; }

.highlight .err { color: rgb(166, 23, 23); background-color: rgb(227, 210, =
210); }

.highlight .gd { color: rgb(0, 0, 0); background-color: rgb(255, 221, 221);=
 }

.highlight .ge { color: rgb(0, 0, 0); font-style: italic; }

.highlight .gr { color: rgb(170, 0, 0); }

.highlight .gh { color: rgb(153, 153, 153); }

.highlight .gi { color: rgb(0, 0, 0); background-color: rgb(221, 255, 221);=
 }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(85, 85, 85); }

.highlight .gs { font-weight: 500; }

.highlight .gu { color: rgb(170, 170, 170); }

.highlight .gt { color: rgb(170, 0, 0); }

.highlight .kc { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kd { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kn { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kp { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kr { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .kt { color: rgb(68, 85, 136); font-weight: 500; }

.highlight .k, .highlight .kv { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .mf { color: rgb(0, 153, 153); }

.highlight .mh { color: rgb(0, 153, 153); }

.highlight .il { color: rgb(0, 153, 153); }

.highlight .mi { color: rgb(0, 153, 153); }

.highlight .mo { color: rgb(0, 153, 153); }

.highlight .m, .highlight .mb, .highlight .mx { color: rgb(0, 153, 153); }

.highlight .sb { color: rgb(221, 17, 68); }

.highlight .sc { color: rgb(221, 17, 68); }

.highlight .sd { color: rgb(221, 17, 68); }

.highlight .s2 { color: rgb(221, 17, 68); }

.highlight .se { color: rgb(221, 17, 68); }

.highlight .sh { color: rgb(221, 17, 68); }

.highlight .si { color: rgb(221, 17, 68); }

.highlight .sx { color: rgb(221, 17, 68); }

.highlight .sr { color: rgb(0, 153, 38); }

.highlight .s1 { color: rgb(221, 17, 68); }

.highlight .ss { color: rgb(153, 0, 115); }

.highlight .s { color: rgb(221, 17, 68); }

.highlight .na { color: rgb(0, 128, 128); }

.highlight .bp { color: rgb(153, 153, 153); }

.highlight .nb { color: rgb(0, 134, 179); }

.highlight .nc { color: rgb(68, 85, 136); font-weight: 500; }

.highlight .no { color: rgb(0, 128, 128); }

.highlight .nd { color: rgb(60, 93, 93); font-weight: 500; }

.highlight .ni { color: rgb(128, 0, 128); }

.highlight .ne { color: rgb(153, 0, 0); font-weight: 500; }

.highlight .nf { color: rgb(153, 0, 0); font-weight: 500; }

.highlight .nl { color: rgb(153, 0, 0); font-weight: 500; }

.highlight .nn { color: rgb(85, 85, 85); }

.highlight .nt { color: rgb(0, 0, 128); }

.highlight .vc { color: rgb(0, 128, 128); }

.highlight .vg { color: rgb(0, 128, 128); }

.highlight .vi { color: rgb(0, 128, 128); }

.highlight .nv { color: rgb(0, 128, 128); }

.highlight .ow { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .o { color: rgb(0, 0, 0); font-weight: 500; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight { background-color: rgb(248, 248, 248); }
------MultipartBoundary--5Nht6hfwm6PSD6r4SYoxLpdLfzZpZ9VFrBXoNAoX2I------
